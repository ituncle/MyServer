// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yfqprotoserver3.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "yfqprotoserver3.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace YfqProtocol {

namespace {

const ::google::protobuf::Descriptor* HeartBeat_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartBeat_reflection_ = nullptr;
const ::google::protobuf::Descriptor* CommonAns_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CommonAns_reflection_ = nullptr;
const ::google::protobuf::EnumDescriptor* CommonAns_Progress_descriptor_ = nullptr;
const ::google::protobuf::Descriptor* LoginedUserInfo_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginedUserInfo_reflection_ = nullptr;
const ::google::protobuf::Descriptor* QualityLifeNotifyReq_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QualityLifeNotifyReq_reflection_ = nullptr;
const ::google::protobuf::Descriptor* QualityLifeDayNotifyAns_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QualityLifeDayNotifyAns_reflection_ = nullptr;
const ::google::protobuf::Descriptor* QualityLifeWeekNotifyAns_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QualityLifeWeekNotifyAns_reflection_ = nullptr;
const ::google::protobuf::Descriptor* QualityLifeMonthNotifyAns_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QualityLifeMonthNotifyAns_reflection_ = nullptr;
const ::google::protobuf::Descriptor* QualityLifeSeasonNotifyAns_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QualityLifeSeasonNotifyAns_reflection_ = nullptr;
const ::google::protobuf::Descriptor* QualityLifeHalfYearNotifyAns_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QualityLifeHalfYearNotifyAns_reflection_ = nullptr;
const ::google::protobuf::Descriptor* QualityLifeYearNotifyAns_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QualityLifeYearNotifyAns_reflection_ = nullptr;
const ::google::protobuf::Descriptor* TransHSKLHisData_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransHSKLHisData_reflection_ = nullptr;
const ::google::protobuf::Descriptor* TransNightGuide_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransNightGuide_reflection_ = nullptr;
const ::google::protobuf::Descriptor* TransNightGuide_NightGuideNode_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransNightGuide_NightGuideNode_reflection_ = nullptr;
const ::google::protobuf::Descriptor* TransBloodPressure_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransBloodPressure_reflection_ = nullptr;
const ::google::protobuf::Descriptor* TransBodyComposition_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransBodyComposition_reflection_ = nullptr;
const ::google::protobuf::Descriptor* TransBodyComposition_BodyComposition_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransBodyComposition_BodyComposition_reflection_ = nullptr;
const ::google::protobuf::Descriptor* TransThermometer_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransThermometer_reflection_ = nullptr;
const ::google::protobuf::Descriptor* QualityLifeOrderLoadReq_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QualityLifeOrderLoadReq_reflection_ = nullptr;
const ::google::protobuf::Descriptor* QualityLifeOrderLoadAns_descriptor_ = nullptr;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QualityLifeOrderLoadAns_reflection_ = nullptr;

}  // namespace


void protobuf_AssignDesc_yfqprotoserver3_2eproto() {
  protobuf_AddDesc_yfqprotoserver3_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "yfqprotoserver3.proto");
  GOOGLE_CHECK(file != nullptr);
  HeartBeat_descriptor_ = file->message_type(0);
  static const int HeartBeat_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeat, date_time_),
  };
  HeartBeat_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeartBeat_descriptor_,
      HeartBeat::default_instance_,
      HeartBeat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeat, _has_bits_[0]),
      -1,
      -1,
      sizeof(HeartBeat),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeat, _internal_metadata_),
      -1);
  CommonAns_descriptor_ = file->message_type(1);
  static const int CommonAns_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAns, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAns, request_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAns, progress_),
  };
  CommonAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CommonAns_descriptor_,
      CommonAns::default_instance_,
      CommonAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(CommonAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommonAns, _internal_metadata_),
      -1);
  CommonAns_Progress_descriptor_ = CommonAns_descriptor_->enum_type(0);
  LoginedUserInfo_descriptor_ = file->message_type(2);
  static const int LoginedUserInfo_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginedUserInfo, user_id_),
  };
  LoginedUserInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginedUserInfo_descriptor_,
      LoginedUserInfo::default_instance_,
      LoginedUserInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginedUserInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(LoginedUserInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginedUserInfo, _internal_metadata_),
      -1);
  QualityLifeNotifyReq_descriptor_ = file->message_type(3);
  static const int QualityLifeNotifyReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeNotifyReq, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeNotifyReq, host_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeNotifyReq, notify_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeNotifyReq, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeNotifyReq, order_),
  };
  QualityLifeNotifyReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QualityLifeNotifyReq_descriptor_,
      QualityLifeNotifyReq::default_instance_,
      QualityLifeNotifyReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeNotifyReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(QualityLifeNotifyReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeNotifyReq, _internal_metadata_),
      -1);
  QualityLifeDayNotifyAns_descriptor_ = file->message_type(4);
  static const int QualityLifeDayNotifyAns_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeDayNotifyAns, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeDayNotifyAns, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeDayNotifyAns, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeDayNotifyAns, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeDayNotifyAns, notify_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeDayNotifyAns, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeDayNotifyAns, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeDayNotifyAns, health_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeDayNotifyAns, weather_relate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeDayNotifyAns, expert_segestion_),
  };
  QualityLifeDayNotifyAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QualityLifeDayNotifyAns_descriptor_,
      QualityLifeDayNotifyAns::default_instance_,
      QualityLifeDayNotifyAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeDayNotifyAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(QualityLifeDayNotifyAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeDayNotifyAns, _internal_metadata_),
      -1);
  QualityLifeWeekNotifyAns_descriptor_ = file->message_type(5);
  static const int QualityLifeWeekNotifyAns_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, notify_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, health_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, expert_segestion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, regular_act_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, sleep_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, body_measure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, run_scence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, eat_nutrition_),
  };
  QualityLifeWeekNotifyAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QualityLifeWeekNotifyAns_descriptor_,
      QualityLifeWeekNotifyAns::default_instance_,
      QualityLifeWeekNotifyAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(QualityLifeWeekNotifyAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeWeekNotifyAns, _internal_metadata_),
      -1);
  QualityLifeMonthNotifyAns_descriptor_ = file->message_type(6);
  static const int QualityLifeMonthNotifyAns_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, notify_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, health_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, expert_segestion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, regular_act_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, sleep_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, body_measure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, run_scence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, eat_nutrition_),
  };
  QualityLifeMonthNotifyAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QualityLifeMonthNotifyAns_descriptor_,
      QualityLifeMonthNotifyAns::default_instance_,
      QualityLifeMonthNotifyAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(QualityLifeMonthNotifyAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeMonthNotifyAns, _internal_metadata_),
      -1);
  QualityLifeSeasonNotifyAns_descriptor_ = file->message_type(7);
  static const int QualityLifeSeasonNotifyAns_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, notify_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, health_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, expert_segestion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, regular_act_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, sleep_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, body_measure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, run_scence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, eat_nutrition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, psychology_health_),
  };
  QualityLifeSeasonNotifyAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QualityLifeSeasonNotifyAns_descriptor_,
      QualityLifeSeasonNotifyAns::default_instance_,
      QualityLifeSeasonNotifyAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(QualityLifeSeasonNotifyAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeSeasonNotifyAns, _internal_metadata_),
      -1);
  QualityLifeHalfYearNotifyAns_descriptor_ = file->message_type(8);
  static const int QualityLifeHalfYearNotifyAns_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, notify_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, health_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, expert_segestion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, regular_act_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, sleep_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, body_measure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, run_scence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, eat_nutrition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, psychology_health_),
  };
  QualityLifeHalfYearNotifyAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QualityLifeHalfYearNotifyAns_descriptor_,
      QualityLifeHalfYearNotifyAns::default_instance_,
      QualityLifeHalfYearNotifyAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(QualityLifeHalfYearNotifyAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeHalfYearNotifyAns, _internal_metadata_),
      -1);
  QualityLifeYearNotifyAns_descriptor_ = file->message_type(9);
  static const int QualityLifeYearNotifyAns_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, notify_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, health_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, expert_segestion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, regular_act_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, sleep_condition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, body_measure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, run_scence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, eat_nutrition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, psychology_health_),
  };
  QualityLifeYearNotifyAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QualityLifeYearNotifyAns_descriptor_,
      QualityLifeYearNotifyAns::default_instance_,
      QualityLifeYearNotifyAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(QualityLifeYearNotifyAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeYearNotifyAns, _internal_metadata_),
      -1);
  TransHSKLHisData_descriptor_ = file->message_type(10);
  static const int TransHSKLHisData_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, host_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, clear_sleep_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, low_sleep_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, mid_sleep_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, deep_sleep_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, clear_pge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, low_pge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, mid_pge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, deep_pge_),
  };
  TransHSKLHisData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransHSKLHisData_descriptor_,
      TransHSKLHisData::default_instance_,
      TransHSKLHisData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, _has_bits_[0]),
      -1,
      -1,
      sizeof(TransHSKLHisData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransHSKLHisData, _internal_metadata_),
      -1);
  TransNightGuide_descriptor_ = file->message_type(11);
  static const int TransNightGuide_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide, host_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide, record_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide, night_guide_node_),
  };
  TransNightGuide_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransNightGuide_descriptor_,
      TransNightGuide::default_instance_,
      TransNightGuide_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide, _has_bits_[0]),
      -1,
      -1,
      sizeof(TransNightGuide),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide, _internal_metadata_),
      -1);
  TransNightGuide_NightGuideNode_descriptor_ = TransNightGuide_descriptor_->nested_type(0);
  static const int TransNightGuide_NightGuideNode_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide_NightGuideNode, domain_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide_NightGuideNode, node_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide_NightGuideNode, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide_NightGuideNode, night_duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide_NightGuideNode, night_interval_),
  };
  TransNightGuide_NightGuideNode_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransNightGuide_NightGuideNode_descriptor_,
      TransNightGuide_NightGuideNode::default_instance_,
      TransNightGuide_NightGuideNode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide_NightGuideNode, _has_bits_[0]),
      -1,
      -1,
      sizeof(TransNightGuide_NightGuideNode),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransNightGuide_NightGuideNode, _internal_metadata_),
      -1);
  TransBloodPressure_descriptor_ = file->message_type(12);
  static const int TransBloodPressure_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBloodPressure, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBloodPressure, host_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBloodPressure, systolic_pressure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBloodPressure, diastolic_pressure_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBloodPressure, heart_beat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBloodPressure, date_),
  };
  TransBloodPressure_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransBloodPressure_descriptor_,
      TransBloodPressure::default_instance_,
      TransBloodPressure_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBloodPressure, _has_bits_[0]),
      -1,
      -1,
      sizeof(TransBloodPressure),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBloodPressure, _internal_metadata_),
      -1);
  TransBodyComposition_descriptor_ = file->message_type(13);
  static const int TransBodyComposition_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition, host_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition, record_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition, body_list_),
  };
  TransBodyComposition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransBodyComposition_descriptor_,
      TransBodyComposition::default_instance_,
      TransBodyComposition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition, _has_bits_[0]),
      -1,
      -1,
      sizeof(TransBodyComposition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition, _internal_metadata_),
      -1);
  TransBodyComposition_BodyComposition_descriptor_ = TransBodyComposition_descriptor_->nested_type(0);
  static const int TransBodyComposition_BodyComposition_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, sport_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, bmi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, fat_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, water_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, muscle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, bones_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, viscus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, heat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, body_resistive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, date_),
  };
  TransBodyComposition_BodyComposition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransBodyComposition_BodyComposition_descriptor_,
      TransBodyComposition_BodyComposition::default_instance_,
      TransBodyComposition_BodyComposition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, _has_bits_[0]),
      -1,
      -1,
      sizeof(TransBodyComposition_BodyComposition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransBodyComposition_BodyComposition, _internal_metadata_),
      -1);
  TransThermometer_descriptor_ = file->message_type(14);
  static const int TransThermometer_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransThermometer, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransThermometer, host_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransThermometer, thermom_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransThermometer, date_),
  };
  TransThermometer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransThermometer_descriptor_,
      TransThermometer::default_instance_,
      TransThermometer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransThermometer, _has_bits_[0]),
      -1,
      -1,
      sizeof(TransThermometer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransThermometer, _internal_metadata_),
      -1);
  QualityLifeOrderLoadReq_descriptor_ = file->message_type(15);
  static const int QualityLifeOrderLoadReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeOrderLoadReq, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeOrderLoadReq, host_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeOrderLoadReq, notify_type_),
  };
  QualityLifeOrderLoadReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QualityLifeOrderLoadReq_descriptor_,
      QualityLifeOrderLoadReq::default_instance_,
      QualityLifeOrderLoadReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeOrderLoadReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(QualityLifeOrderLoadReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeOrderLoadReq, _internal_metadata_),
      -1);
  QualityLifeOrderLoadAns_descriptor_ = file->message_type(16);
  static const int QualityLifeOrderLoadAns_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeOrderLoadAns, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeOrderLoadAns, notify_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeOrderLoadAns, date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeOrderLoadAns, maxorder_),
  };
  QualityLifeOrderLoadAns_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QualityLifeOrderLoadAns_descriptor_,
      QualityLifeOrderLoadAns::default_instance_,
      QualityLifeOrderLoadAns_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeOrderLoadAns, _has_bits_[0]),
      -1,
      -1,
      sizeof(QualityLifeOrderLoadAns),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QualityLifeOrderLoadAns, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_yfqprotoserver3_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeartBeat_descriptor_, &HeartBeat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CommonAns_descriptor_, &CommonAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginedUserInfo_descriptor_, &LoginedUserInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QualityLifeNotifyReq_descriptor_, &QualityLifeNotifyReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QualityLifeDayNotifyAns_descriptor_, &QualityLifeDayNotifyAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QualityLifeWeekNotifyAns_descriptor_, &QualityLifeWeekNotifyAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QualityLifeMonthNotifyAns_descriptor_, &QualityLifeMonthNotifyAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QualityLifeSeasonNotifyAns_descriptor_, &QualityLifeSeasonNotifyAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QualityLifeHalfYearNotifyAns_descriptor_, &QualityLifeHalfYearNotifyAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QualityLifeYearNotifyAns_descriptor_, &QualityLifeYearNotifyAns::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransHSKLHisData_descriptor_, &TransHSKLHisData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransNightGuide_descriptor_, &TransNightGuide::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransNightGuide_NightGuideNode_descriptor_, &TransNightGuide_NightGuideNode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransBloodPressure_descriptor_, &TransBloodPressure::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransBodyComposition_descriptor_, &TransBodyComposition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransBodyComposition_BodyComposition_descriptor_, &TransBodyComposition_BodyComposition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransThermometer_descriptor_, &TransThermometer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QualityLifeOrderLoadReq_descriptor_, &QualityLifeOrderLoadReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QualityLifeOrderLoadAns_descriptor_, &QualityLifeOrderLoadAns::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_yfqprotoserver3_2eproto() {
  delete HeartBeat::default_instance_;
  delete HeartBeat_reflection_;
  delete CommonAns::default_instance_;
  delete CommonAns_reflection_;
  delete LoginedUserInfo::default_instance_;
  delete LoginedUserInfo_reflection_;
  delete QualityLifeNotifyReq::default_instance_;
  delete QualityLifeNotifyReq_reflection_;
  delete QualityLifeDayNotifyAns::default_instance_;
  delete QualityLifeDayNotifyAns_reflection_;
  delete QualityLifeWeekNotifyAns::default_instance_;
  delete QualityLifeWeekNotifyAns_reflection_;
  delete QualityLifeMonthNotifyAns::default_instance_;
  delete QualityLifeMonthNotifyAns_reflection_;
  delete QualityLifeSeasonNotifyAns::default_instance_;
  delete QualityLifeSeasonNotifyAns_reflection_;
  delete QualityLifeHalfYearNotifyAns::default_instance_;
  delete QualityLifeHalfYearNotifyAns_reflection_;
  delete QualityLifeYearNotifyAns::default_instance_;
  delete QualityLifeYearNotifyAns_reflection_;
  delete TransHSKLHisData::default_instance_;
  delete TransHSKLHisData_reflection_;
  delete TransNightGuide::default_instance_;
  delete TransNightGuide_reflection_;
  delete TransNightGuide_NightGuideNode::default_instance_;
  delete TransNightGuide_NightGuideNode_reflection_;
  delete TransBloodPressure::default_instance_;
  delete TransBloodPressure_reflection_;
  delete TransBodyComposition::default_instance_;
  delete TransBodyComposition_reflection_;
  delete TransBodyComposition_BodyComposition::default_instance_;
  delete TransBodyComposition_BodyComposition_reflection_;
  delete TransThermometer::default_instance_;
  delete TransThermometer_reflection_;
  delete QualityLifeOrderLoadReq::default_instance_;
  delete QualityLifeOrderLoadReq_reflection_;
  delete QualityLifeOrderLoadAns::default_instance_;
  delete QualityLifeOrderLoadAns_reflection_;
}

void protobuf_AddDesc_yfqprotoserver3_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025yfqprotoserver3.proto\022\013YfqProtocol\"\036\n\t"
    "HeartBeat\022\021\n\tdate_time\030\001 \001(\003\"\224\001\n\tCommonA"
    "ns\022\022\n\nerror_code\030\001 \001(\005\022\022\n\nrequest_id\030\002 \001"
    "(\005\0221\n\010progress\030\003 \001(\0162\037.YfqProtocol.Commo"
    "nAns.Progress\",\n\010Progress\022\013\n\007Pending\020\000\022\t"
    "\n\005DOING\020\001\022\010\n\004DONE\020\002\"\"\n\017LoginedUserInfo\022\017"
    "\n\007user_id\030\001 \001(\t\"j\n\024QualityLifeNotifyReq\022"
    "\017\n\007user_id\030\001 \001(\t\022\017\n\007host_id\030\002 \001(\t\022\023\n\013not"
    "ify_type\030\003 \001(\005\022\014\n\004date\030\004 \001(\t\022\r\n\005order\030\005 "
    "\001(\005\"\321\001\n\027QualityLifeDayNotifyAns\022\017\n\007user_"
    "id\030\001 \001(\t\022\021\n\tuser_name\030\002 \001(\t\022\013\n\003age\030\003 \001(\005"
    "\022\013\n\003sex\030\004 \001(\005\022\023\n\013notify_type\030\005 \001(\005\022\014\n\004da"
    "te\030\006 \001(\t\022\r\n\005order\030\007 \001(\005\022\024\n\014health_score\030"
    "\010 \001(\005\022\026\n\016weather_relate\030\t \001(\t\022\030\n\020expert_"
    "segestion\030\n \001(\t\"\251\002\n\030QualityLifeWeekNotif"
    "yAns\022\017\n\007user_id\030\001 \001(\t\022\021\n\tuser_name\030\002 \001(\t"
    "\022\013\n\003age\030\003 \001(\005\022\013\n\003sex\030\004 \001(\005\022\023\n\013notify_typ"
    "e\030\005 \001(\005\022\014\n\004date\030\006 \001(\t\022\r\n\005order\030\007 \001(\005\022\024\n\014"
    "health_score\030\010 \001(\005\022\030\n\020expert_segestion\030\t"
    " \001(\t\022\023\n\013regular_act\030\n \001(\t\022\027\n\017sleep_condi"
    "tion\030\013 \001(\t\022\024\n\014body_measure\030\014 \001(\t\022\022\n\nrun_"
    "scence\030\r \001(\t\022\025\n\reat_nutrition\030\016 \001(\t\"\252\002\n\031"
    "QualityLifeMonthNotifyAns\022\017\n\007user_id\030\001 \001"
    "(\t\022\021\n\tuser_name\030\002 \001(\t\022\013\n\003age\030\003 \001(\005\022\013\n\003se"
    "x\030\004 \001(\005\022\023\n\013notify_type\030\005 \001(\005\022\014\n\004date\030\006 \001"
    "(\t\022\r\n\005order\030\007 \001(\005\022\024\n\014health_score\030\010 \001(\005\022"
    "\030\n\020expert_segestion\030\t \001(\t\022\023\n\013regular_act"
    "\030\n \001(\t\022\027\n\017sleep_condition\030\013 \001(\t\022\024\n\014body_"
    "measure\030\014 \001(\t\022\022\n\nrun_scence\030\r \001(\t\022\025\n\reat"
    "_nutrition\030\016 \001(\t\"\306\002\n\032QualityLifeSeasonNo"
    "tifyAns\022\017\n\007user_id\030\001 \001(\t\022\021\n\tuser_name\030\002 "
    "\001(\t\022\013\n\003age\030\003 \001(\005\022\013\n\003sex\030\004 \001(\005\022\023\n\013notify_"
    "type\030\005 \001(\005\022\014\n\004date\030\006 \001(\t\022\r\n\005order\030\007 \001(\005\022"
    "\024\n\014health_score\030\010 \001(\005\022\030\n\020expert_segestio"
    "n\030\t \001(\t\022\023\n\013regular_act\030\n \001(\t\022\027\n\017sleep_co"
    "ndition\030\013 \001(\t\022\024\n\014body_measure\030\014 \001(\t\022\022\n\nr"
    "un_scence\030\r \001(\t\022\025\n\reat_nutrition\030\016 \001(\t\022\031"
    "\n\021psychology_health\030\017 \001(\t\"\310\002\n\034QualityLif"
    "eHalfYearNotifyAns\022\017\n\007user_id\030\001 \001(\t\022\021\n\tu"
    "ser_name\030\002 \001(\t\022\013\n\003age\030\003 \001(\005\022\013\n\003sex\030\004 \001(\005"
    "\022\023\n\013notify_type\030\005 \001(\005\022\014\n\004date\030\006 \001(\t\022\r\n\005o"
    "rder\030\007 \001(\005\022\024\n\014health_score\030\010 \001(\005\022\030\n\020expe"
    "rt_segestion\030\t \001(\t\022\023\n\013regular_act\030\n \001(\t\022"
    "\027\n\017sleep_condition\030\013 \001(\t\022\024\n\014body_measure"
    "\030\014 \001(\t\022\022\n\nrun_scence\030\r \001(\t\022\025\n\reat_nutrit"
    "ion\030\016 \001(\t\022\031\n\021psychology_health\030\017 \001(\t\"\304\002\n"
    "\030QualityLifeYearNotifyAns\022\017\n\007user_id\030\001 \001"
    "(\t\022\021\n\tuser_name\030\002 \001(\t\022\013\n\003age\030\003 \001(\005\022\013\n\003se"
    "x\030\004 \001(\005\022\023\n\013notify_type\030\005 \001(\005\022\014\n\004date\030\006 \001"
    "(\t\022\r\n\005order\030\007 \001(\005\022\024\n\014health_score\030\010 \001(\005\022"
    "\030\n\020expert_segestion\030\t \001(\t\022\023\n\013regular_act"
    "\030\n \001(\t\022\027\n\017sleep_condition\030\013 \001(\t\022\024\n\014body_"
    "measure\030\014 \001(\t\022\022\n\nrun_scence\030\r \001(\t\022\025\n\reat"
    "_nutrition\030\016 \001(\t\022\031\n\021psychology_health\030\017 "
    "\001(\t\"\330\001\n\020TransHSKLHisData\022\017\n\007user_id\030\001 \001("
    "\t\022\017\n\007host_id\030\002 \001(\t\022\014\n\004date\030\003 \001(\t\022\023\n\013clea"
    "r_sleep\030\004 \001(\005\022\021\n\tlow_sleep\030\005 \001(\005\022\021\n\tmid_"
    "sleep\030\006 \001(\005\022\022\n\ndeep_sleep\030\007 \001(\005\022\021\n\tclear"
    "_pge\030\010 \001(\002\022\017\n\007low_pge\030\t \001(\002\022\017\n\007mid_pge\030\n"
    " \001(\002\022\020\n\010deep_pge\030\013 \001(\002\"\211\002\n\017TransNightGui"
    "de\022\017\n\007user_id\030\001 \001(\t\022\017\n\007host_id\030\002 \001(\t\022\022\n\n"
    "record_num\030\003 \001(\005\022E\n\020night_guide_node\030\004 \003"
    "(\0132+.YfqProtocol.TransNightGuide.NightGu"
    "ideNode\032y\n\016NightGuideNode\022\021\n\tdomain_id\030\001"
    " \001(\005\022\017\n\007node_id\030\002 \001(\005\022\023\n\013create_time\030\003 \001"
    "(\t\022\026\n\016night_duration\030\004 \001(\005\022\026\n\016night_inte"
    "rval\030\005 \001(\005\"\217\001\n\022TransBloodPressure\022\017\n\007use"
    "r_id\030\001 \001(\t\022\017\n\007host_id\030\002 \001(\t\022\031\n\021systolic_"
    "pressure\030\003 \001(\002\022\032\n\022diastolic_pressure\030\004 \001"
    "(\002\022\022\n\nheart_beat\030\005 \001(\002\022\014\n\004date\030\006 \001(\t\"\215\003\n"
    "\024TransBodyComposition\022\017\n\007user_id\030\001 \001(\t\022\017"
    "\n\007host_id\030\002 \001(\t\022\022\n\nrecord_num\030\003 \001(\005\022D\n\tb"
    "ody_list\030\004 \003(\01321.YfqProtocol.TransBodyCo"
    "mposition.BodyComposition\032\370\001\n\017BodyCompos"
    "ition\022\013\n\003sex\030\001 \001(\005\022\013\n\003age\030\002 \001(\005\022\016\n\006heigh"
    "t\030\003 \001(\005\022\016\n\006weight\030\004 \001(\002\022\023\n\013sport_level\030\005"
    " \001(\005\022\013\n\003bmi\030\006 \001(\002\022\021\n\tfat_level\030\007 \001(\002\022\023\n\013"
    "water_level\030\010 \001(\002\022\016\n\006muscle\030\t \001(\002\022\r\n\005bon"
    "es\030\n \001(\002\022\016\n\006viscus\030\013 \001(\005\022\014\n\004heat\030\014 \001(\005\022\026"
    "\n\016body_resistive\030\r \001(\005\022\014\n\004date\030\016 \001(\t\"Y\n\020"
    "TransThermometer\022\017\n\007user_id\030\001 \001(\t\022\017\n\007hos"
    "t_id\030\002 \001(\t\022\025\n\rthermom_value\030\003 \001(\002\022\014\n\004dat"
    "e\030\004 \001(\t\"P\n\027QualityLifeOrderLoadReq\022\017\n\007us"
    "er_id\030\001 \001(\t\022\017\n\007host_id\030\002 \001(\t\022\023\n\013notify_t"
    "ype\030\003 \001(\005\"_\n\027QualityLifeOrderLoadAns\022\017\n\007"
    "user_id\030\001 \001(\t\022\023\n\013notify_type\030\002 \001(\005\022\014\n\004da"
    "te\030\003 \001(\t\022\020\n\010maxOrder\030\004 \001(\005B!\n\025com.ftrd.y"
    "fq.protocolB\010YfqProto", 3501);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "yfqprotoserver3.proto", &protobuf_RegisterTypes);
  HeartBeat::default_instance_ = new HeartBeat();
  CommonAns::default_instance_ = new CommonAns();
  LoginedUserInfo::default_instance_ = new LoginedUserInfo();
  QualityLifeNotifyReq::default_instance_ = new QualityLifeNotifyReq();
  QualityLifeDayNotifyAns::default_instance_ = new QualityLifeDayNotifyAns();
  QualityLifeWeekNotifyAns::default_instance_ = new QualityLifeWeekNotifyAns();
  QualityLifeMonthNotifyAns::default_instance_ = new QualityLifeMonthNotifyAns();
  QualityLifeSeasonNotifyAns::default_instance_ = new QualityLifeSeasonNotifyAns();
  QualityLifeHalfYearNotifyAns::default_instance_ = new QualityLifeHalfYearNotifyAns();
  QualityLifeYearNotifyAns::default_instance_ = new QualityLifeYearNotifyAns();
  TransHSKLHisData::default_instance_ = new TransHSKLHisData();
  TransNightGuide::default_instance_ = new TransNightGuide();
  TransNightGuide_NightGuideNode::default_instance_ = new TransNightGuide_NightGuideNode();
  TransBloodPressure::default_instance_ = new TransBloodPressure();
  TransBodyComposition::default_instance_ = new TransBodyComposition();
  TransBodyComposition_BodyComposition::default_instance_ = new TransBodyComposition_BodyComposition();
  TransThermometer::default_instance_ = new TransThermometer();
  QualityLifeOrderLoadReq::default_instance_ = new QualityLifeOrderLoadReq();
  QualityLifeOrderLoadAns::default_instance_ = new QualityLifeOrderLoadAns();
  HeartBeat::default_instance_->InitAsDefaultInstance();
  CommonAns::default_instance_->InitAsDefaultInstance();
  LoginedUserInfo::default_instance_->InitAsDefaultInstance();
  QualityLifeNotifyReq::default_instance_->InitAsDefaultInstance();
  QualityLifeDayNotifyAns::default_instance_->InitAsDefaultInstance();
  QualityLifeWeekNotifyAns::default_instance_->InitAsDefaultInstance();
  QualityLifeMonthNotifyAns::default_instance_->InitAsDefaultInstance();
  QualityLifeSeasonNotifyAns::default_instance_->InitAsDefaultInstance();
  QualityLifeHalfYearNotifyAns::default_instance_->InitAsDefaultInstance();
  QualityLifeYearNotifyAns::default_instance_->InitAsDefaultInstance();
  TransHSKLHisData::default_instance_->InitAsDefaultInstance();
  TransNightGuide::default_instance_->InitAsDefaultInstance();
  TransNightGuide_NightGuideNode::default_instance_->InitAsDefaultInstance();
  TransBloodPressure::default_instance_->InitAsDefaultInstance();
  TransBodyComposition::default_instance_->InitAsDefaultInstance();
  TransBodyComposition_BodyComposition::default_instance_->InitAsDefaultInstance();
  TransThermometer::default_instance_->InitAsDefaultInstance();
  QualityLifeOrderLoadReq::default_instance_->InitAsDefaultInstance();
  QualityLifeOrderLoadAns::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_yfqprotoserver3_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_yfqprotoserver3_2eproto {
  StaticDescriptorInitializer_yfqprotoserver3_2eproto() {
    protobuf_AddDesc_yfqprotoserver3_2eproto();
  }
} static_descriptor_initializer_yfqprotoserver3_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int HeartBeat::kDateTimeFieldNumber;
#endif  // !_MSC_VER

HeartBeat::HeartBeat()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.HeartBeat)
}

void HeartBeat::InitAsDefaultInstance() {
}

HeartBeat::HeartBeat(const HeartBeat& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.HeartBeat)
}

void HeartBeat::SharedCtor() {
  _cached_size_ = 0;
  date_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeartBeat::~HeartBeat() {
  // @@protoc_insertion_point(destructor:YfqProtocol.HeartBeat)
  SharedDtor();
}

void HeartBeat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeartBeat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartBeat_descriptor_;
}

const HeartBeat& HeartBeat::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

HeartBeat* HeartBeat::default_instance_ = nullptr;

HeartBeat* HeartBeat::New(::google::protobuf::Arena* arena) const {
  HeartBeat* n = new HeartBeat;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void HeartBeat::Clear() {
  date_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HeartBeat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.HeartBeat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 date_time = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &date_time_)));
          set_has_date_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.HeartBeat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.HeartBeat)
  return false;
#undef DO_
}

void HeartBeat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.HeartBeat)
  // optional int64 date_time = 1;
  if (has_date_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->date_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.HeartBeat)
}

::google::protobuf::uint8* HeartBeat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.HeartBeat)
  // optional int64 date_time = 1;
  if (has_date_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->date_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.HeartBeat)
  return target;
}

int HeartBeat::ByteSize() const {
  int total_size = 0;

  // optional int64 date_time = 1;
  if (has_date_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->date_time());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeat::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HeartBeat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeartBeat*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeartBeat::MergeFrom(const HeartBeat& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_date_time()) {
      set_date_time(from.date_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HeartBeat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeat::CopyFrom(const HeartBeat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeat::IsInitialized() const {

  return true;
}

void HeartBeat::Swap(HeartBeat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartBeat::InternalSwap(HeartBeat* other) {
  std::swap(date_time_, other->date_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartBeat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartBeat_descriptor_;
  metadata.reflection = HeartBeat_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartBeat

// optional int64 date_time = 1;
 bool HeartBeat::has_date_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void HeartBeat::set_has_date_time() {
  _has_bits_[0] |= 0x00000001u;
}
 void HeartBeat::clear_has_date_time() {
  _has_bits_[0] &= ~0x00000001u;
}
 void HeartBeat::clear_date_time() {
  date_time_ = GOOGLE_LONGLONG(0);
  clear_has_date_time();
}
 ::google::protobuf::int64 HeartBeat::date_time() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.HeartBeat.date_time)
  return date_time_;
}
 void HeartBeat::set_date_time(::google::protobuf::int64 value) {
  set_has_date_time();
  date_time_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.HeartBeat.date_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* CommonAns_Progress_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommonAns_Progress_descriptor_;
}
bool CommonAns_Progress_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const CommonAns_Progress CommonAns::Pending;
const CommonAns_Progress CommonAns::DOING;
const CommonAns_Progress CommonAns::DONE;
const CommonAns_Progress CommonAns::Progress_MIN;
const CommonAns_Progress CommonAns::Progress_MAX;
const int CommonAns::Progress_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int CommonAns::kErrorCodeFieldNumber;
const int CommonAns::kRequestIdFieldNumber;
const int CommonAns::kProgressFieldNumber;
#endif  // !_MSC_VER

CommonAns::CommonAns()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.CommonAns)
}

void CommonAns::InitAsDefaultInstance() {
}

CommonAns::CommonAns(const CommonAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.CommonAns)
}

void CommonAns::SharedCtor() {
  _cached_size_ = 0;
  error_code_ = 0;
  request_id_ = 0;
  progress_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CommonAns::~CommonAns() {
  // @@protoc_insertion_point(destructor:YfqProtocol.CommonAns)
  SharedDtor();
}

void CommonAns::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CommonAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommonAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommonAns_descriptor_;
}

const CommonAns& CommonAns::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

CommonAns* CommonAns::default_instance_ = nullptr;

CommonAns* CommonAns::New(::google::protobuf::Arena* arena) const {
  CommonAns* n = new CommonAns;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void CommonAns::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CommonAns*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(error_code_, progress_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CommonAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.CommonAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 error_code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_request_id;
        break;
      }

      // optional int32 request_id = 2;
      case 2: {
        if (tag == 16) {
         parse_request_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_id_)));
          set_has_request_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_progress;
        break;
      }

      // optional .YfqProtocol.CommonAns.Progress progress = 3;
      case 3: {
        if (tag == 24) {
         parse_progress:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::YfqProtocol::CommonAns_Progress_IsValid(value)) {
            set_progress(static_cast< ::YfqProtocol::CommonAns_Progress >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.CommonAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.CommonAns)
  return false;
#undef DO_
}

void CommonAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.CommonAns)
  // optional int32 error_code = 1;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_code(), output);
  }

  // optional int32 request_id = 2;
  if (has_request_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->request_id(), output);
  }

  // optional .YfqProtocol.CommonAns.Progress progress = 3;
  if (has_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->progress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.CommonAns)
}

::google::protobuf::uint8* CommonAns::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.CommonAns)
  // optional int32 error_code = 1;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_code(), target);
  }

  // optional int32 request_id = 2;
  if (has_request_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->request_id(), target);
  }

  // optional .YfqProtocol.CommonAns.Progress progress = 3;
  if (has_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->progress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.CommonAns)
  return target;
}

int CommonAns::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7) {
    // optional int32 error_code = 1;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->error_code());
    }

    // optional int32 request_id = 2;
    if (has_request_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->request_id());
    }

    // optional .YfqProtocol.CommonAns.Progress progress = 3;
    if (has_progress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->progress());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommonAns::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CommonAns* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CommonAns*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CommonAns::MergeFrom(const CommonAns& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
    if (from.has_request_id()) {
      set_request_id(from.request_id());
    }
    if (from.has_progress()) {
      set_progress(from.progress());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CommonAns::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommonAns::CopyFrom(const CommonAns& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonAns::IsInitialized() const {

  return true;
}

void CommonAns::Swap(CommonAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommonAns::InternalSwap(CommonAns* other) {
  std::swap(error_code_, other->error_code_);
  std::swap(request_id_, other->request_id_);
  std::swap(progress_, other->progress_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommonAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CommonAns_descriptor_;
  metadata.reflection = CommonAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommonAns

// optional int32 error_code = 1;
 bool CommonAns::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void CommonAns::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
 void CommonAns::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
 void CommonAns::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
 ::google::protobuf::int32 CommonAns::error_code() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.CommonAns.error_code)
  return error_code_;
}
 void CommonAns::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.CommonAns.error_code)
}

// optional int32 request_id = 2;
 bool CommonAns::has_request_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void CommonAns::set_has_request_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void CommonAns::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void CommonAns::clear_request_id() {
  request_id_ = 0;
  clear_has_request_id();
}
 ::google::protobuf::int32 CommonAns::request_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.CommonAns.request_id)
  return request_id_;
}
 void CommonAns::set_request_id(::google::protobuf::int32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.CommonAns.request_id)
}

// optional .YfqProtocol.CommonAns.Progress progress = 3;
 bool CommonAns::has_progress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void CommonAns::set_has_progress() {
  _has_bits_[0] |= 0x00000004u;
}
 void CommonAns::clear_has_progress() {
  _has_bits_[0] &= ~0x00000004u;
}
 void CommonAns::clear_progress() {
  progress_ = 0;
  clear_has_progress();
}
 ::YfqProtocol::CommonAns_Progress CommonAns::progress() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.CommonAns.progress)
  return static_cast< ::YfqProtocol::CommonAns_Progress >(progress_);
}
 void CommonAns::set_progress(::YfqProtocol::CommonAns_Progress value) {
  assert(::YfqProtocol::CommonAns_Progress_IsValid(value));
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.CommonAns.progress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int LoginedUserInfo::kUserIdFieldNumber;
#endif  // !_MSC_VER

LoginedUserInfo::LoginedUserInfo()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.LoginedUserInfo)
}

void LoginedUserInfo::InitAsDefaultInstance() {
}

LoginedUserInfo::LoginedUserInfo(const LoginedUserInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.LoginedUserInfo)
}

void LoginedUserInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginedUserInfo::~LoginedUserInfo() {
  // @@protoc_insertion_point(destructor:YfqProtocol.LoginedUserInfo)
  SharedDtor();
}

void LoginedUserInfo::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LoginedUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginedUserInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginedUserInfo_descriptor_;
}

const LoginedUserInfo& LoginedUserInfo::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

LoginedUserInfo* LoginedUserInfo::default_instance_ = nullptr;

LoginedUserInfo* LoginedUserInfo::New(::google::protobuf::Arena* arena) const {
  LoginedUserInfo* n = new LoginedUserInfo;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void LoginedUserInfo::Clear() {
  if (has_user_id()) {
    user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LoginedUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.LoginedUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.LoginedUserInfo.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.LoginedUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.LoginedUserInfo)
  return false;
#undef DO_
}

void LoginedUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.LoginedUserInfo)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.LoginedUserInfo.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.LoginedUserInfo)
}

::google::protobuf::uint8* LoginedUserInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.LoginedUserInfo)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.LoginedUserInfo.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.LoginedUserInfo)
  return target;
}

int LoginedUserInfo::ByteSize() const {
  int total_size = 0;

  // optional string user_id = 1;
  if (has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginedUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginedUserInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginedUserInfo*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginedUserInfo::MergeFrom(const LoginedUserInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LoginedUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginedUserInfo::CopyFrom(const LoginedUserInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginedUserInfo::IsInitialized() const {

  return true;
}

void LoginedUserInfo::Swap(LoginedUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginedUserInfo::InternalSwap(LoginedUserInfo* other) {
  user_id_.Swap(&other->user_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginedUserInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginedUserInfo_descriptor_;
  metadata.reflection = LoginedUserInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginedUserInfo

// optional string user_id = 1;
 bool LoginedUserInfo::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void LoginedUserInfo::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void LoginedUserInfo::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void LoginedUserInfo::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& LoginedUserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.LoginedUserInfo.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginedUserInfo::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.LoginedUserInfo.user_id)
}
 void LoginedUserInfo::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.LoginedUserInfo.user_id)
}
 void LoginedUserInfo::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.LoginedUserInfo.user_id)
}
 ::std::string* LoginedUserInfo::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.LoginedUserInfo.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LoginedUserInfo::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LoginedUserInfo::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.LoginedUserInfo.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int QualityLifeNotifyReq::kUserIdFieldNumber;
const int QualityLifeNotifyReq::kHostIdFieldNumber;
const int QualityLifeNotifyReq::kNotifyTypeFieldNumber;
const int QualityLifeNotifyReq::kDateFieldNumber;
const int QualityLifeNotifyReq::kOrderFieldNumber;
#endif  // !_MSC_VER

QualityLifeNotifyReq::QualityLifeNotifyReq()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.QualityLifeNotifyReq)
}

void QualityLifeNotifyReq::InitAsDefaultInstance() {
}

QualityLifeNotifyReq::QualityLifeNotifyReq(const QualityLifeNotifyReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.QualityLifeNotifyReq)
}

void QualityLifeNotifyReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notify_type_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QualityLifeNotifyReq::~QualityLifeNotifyReq() {
  // @@protoc_insertion_point(destructor:YfqProtocol.QualityLifeNotifyReq)
  SharedDtor();
}

void QualityLifeNotifyReq::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QualityLifeNotifyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QualityLifeNotifyReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QualityLifeNotifyReq_descriptor_;
}

const QualityLifeNotifyReq& QualityLifeNotifyReq::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

QualityLifeNotifyReq* QualityLifeNotifyReq::default_instance_ = nullptr;

QualityLifeNotifyReq* QualityLifeNotifyReq::New(::google::protobuf::Arena* arena) const {
  QualityLifeNotifyReq* n = new QualityLifeNotifyReq;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void QualityLifeNotifyReq::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QualityLifeNotifyReq*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(notify_type_, order_);
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_host_id()) {
      host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QualityLifeNotifyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.QualityLifeNotifyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeNotifyReq.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_host_id;
        break;
      }

      // optional string host_id = 2;
      case 2: {
        if (tag == 18) {
         parse_host_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_id().data(), this->host_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeNotifyReq.host_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_notify_type;
        break;
      }

      // optional int32 notify_type = 3;
      case 3: {
        if (tag == 24) {
         parse_notify_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_type_)));
          set_has_notify_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_date;
        break;
      }

      // optional string date = 4;
      case 4: {
        if (tag == 34) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeNotifyReq.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_order;
        break;
      }

      // optional int32 order = 5;
      case 5: {
        if (tag == 40) {
         parse_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
          set_has_order();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.QualityLifeNotifyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.QualityLifeNotifyReq)
  return false;
#undef DO_
}

void QualityLifeNotifyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.QualityLifeNotifyReq)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeNotifyReq.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeNotifyReq.host_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_id(), output);
  }

  // optional int32 notify_type = 3;
  if (has_notify_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->notify_type(), output);
  }

  // optional string date = 4;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeNotifyReq.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->date(), output);
  }

  // optional int32 order = 5;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->order(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.QualityLifeNotifyReq)
}

::google::protobuf::uint8* QualityLifeNotifyReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.QualityLifeNotifyReq)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeNotifyReq.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeNotifyReq.host_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_id(), target);
  }

  // optional int32 notify_type = 3;
  if (has_notify_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->notify_type(), target);
  }

  // optional string date = 4;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeNotifyReq.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->date(), target);
  }

  // optional int32 order = 5;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->order(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.QualityLifeNotifyReq)
  return target;
}

int QualityLifeNotifyReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string host_id = 2;
    if (has_host_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_id());
    }

    // optional int32 notify_type = 3;
    if (has_notify_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify_type());
    }

    // optional string date = 4;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional int32 order = 5;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QualityLifeNotifyReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QualityLifeNotifyReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QualityLifeNotifyReq*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QualityLifeNotifyReq::MergeFrom(const QualityLifeNotifyReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_host_id()) {
      set_has_host_id();
      host_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_id_);
    }
    if (from.has_notify_type()) {
      set_notify_type(from.notify_type());
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_order()) {
      set_order(from.order());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QualityLifeNotifyReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QualityLifeNotifyReq::CopyFrom(const QualityLifeNotifyReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityLifeNotifyReq::IsInitialized() const {

  return true;
}

void QualityLifeNotifyReq::Swap(QualityLifeNotifyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityLifeNotifyReq::InternalSwap(QualityLifeNotifyReq* other) {
  user_id_.Swap(&other->user_id_);
  host_id_.Swap(&other->host_id_);
  std::swap(notify_type_, other->notify_type_);
  date_.Swap(&other->date_);
  std::swap(order_, other->order_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QualityLifeNotifyReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QualityLifeNotifyReq_descriptor_;
  metadata.reflection = QualityLifeNotifyReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QualityLifeNotifyReq

// optional string user_id = 1;
 bool QualityLifeNotifyReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void QualityLifeNotifyReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void QualityLifeNotifyReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void QualityLifeNotifyReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& QualityLifeNotifyReq::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeNotifyReq.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeNotifyReq::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeNotifyReq.user_id)
}
 void QualityLifeNotifyReq::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeNotifyReq.user_id)
}
 void QualityLifeNotifyReq::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeNotifyReq.user_id)
}
 ::std::string* QualityLifeNotifyReq::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeNotifyReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeNotifyReq::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeNotifyReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeNotifyReq.user_id)
}

// optional string host_id = 2;
 bool QualityLifeNotifyReq::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void QualityLifeNotifyReq::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void QualityLifeNotifyReq::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void QualityLifeNotifyReq::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
 const ::std::string& QualityLifeNotifyReq::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeNotifyReq.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeNotifyReq::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeNotifyReq.host_id)
}
 void QualityLifeNotifyReq::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeNotifyReq.host_id)
}
 void QualityLifeNotifyReq::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeNotifyReq.host_id)
}
 ::std::string* QualityLifeNotifyReq::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeNotifyReq.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeNotifyReq::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeNotifyReq::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeNotifyReq.host_id)
}

// optional int32 notify_type = 3;
 bool QualityLifeNotifyReq::has_notify_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void QualityLifeNotifyReq::set_has_notify_type() {
  _has_bits_[0] |= 0x00000004u;
}
 void QualityLifeNotifyReq::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000004u;
}
 void QualityLifeNotifyReq::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
 ::google::protobuf::int32 QualityLifeNotifyReq::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeNotifyReq.notify_type)
  return notify_type_;
}
 void QualityLifeNotifyReq::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeNotifyReq.notify_type)
}

// optional string date = 4;
 bool QualityLifeNotifyReq::has_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void QualityLifeNotifyReq::set_has_date() {
  _has_bits_[0] |= 0x00000008u;
}
 void QualityLifeNotifyReq::clear_has_date() {
  _has_bits_[0] &= ~0x00000008u;
}
 void QualityLifeNotifyReq::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& QualityLifeNotifyReq::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeNotifyReq.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeNotifyReq::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeNotifyReq.date)
}
 void QualityLifeNotifyReq::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeNotifyReq.date)
}
 void QualityLifeNotifyReq::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeNotifyReq.date)
}
 ::std::string* QualityLifeNotifyReq::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeNotifyReq.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeNotifyReq::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeNotifyReq::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeNotifyReq.date)
}

// optional int32 order = 5;
 bool QualityLifeNotifyReq::has_order() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void QualityLifeNotifyReq::set_has_order() {
  _has_bits_[0] |= 0x00000010u;
}
 void QualityLifeNotifyReq::clear_has_order() {
  _has_bits_[0] &= ~0x00000010u;
}
 void QualityLifeNotifyReq::clear_order() {
  order_ = 0;
  clear_has_order();
}
 ::google::protobuf::int32 QualityLifeNotifyReq::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeNotifyReq.order)
  return order_;
}
 void QualityLifeNotifyReq::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeNotifyReq.order)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int QualityLifeDayNotifyAns::kUserIdFieldNumber;
const int QualityLifeDayNotifyAns::kUserNameFieldNumber;
const int QualityLifeDayNotifyAns::kAgeFieldNumber;
const int QualityLifeDayNotifyAns::kSexFieldNumber;
const int QualityLifeDayNotifyAns::kNotifyTypeFieldNumber;
const int QualityLifeDayNotifyAns::kDateFieldNumber;
const int QualityLifeDayNotifyAns::kOrderFieldNumber;
const int QualityLifeDayNotifyAns::kHealthScoreFieldNumber;
const int QualityLifeDayNotifyAns::kWeatherRelateFieldNumber;
const int QualityLifeDayNotifyAns::kExpertSegestionFieldNumber;
#endif  // !_MSC_VER

QualityLifeDayNotifyAns::QualityLifeDayNotifyAns()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.QualityLifeDayNotifyAns)
}

void QualityLifeDayNotifyAns::InitAsDefaultInstance() {
}

QualityLifeDayNotifyAns::QualityLifeDayNotifyAns(const QualityLifeDayNotifyAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.QualityLifeDayNotifyAns)
}

void QualityLifeDayNotifyAns::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_ = 0;
  sex_ = 0;
  notify_type_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_ = 0;
  health_score_ = 0;
  weather_relate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expert_segestion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QualityLifeDayNotifyAns::~QualityLifeDayNotifyAns() {
  // @@protoc_insertion_point(destructor:YfqProtocol.QualityLifeDayNotifyAns)
  SharedDtor();
}

void QualityLifeDayNotifyAns::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weather_relate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expert_segestion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QualityLifeDayNotifyAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QualityLifeDayNotifyAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QualityLifeDayNotifyAns_descriptor_;
}

const QualityLifeDayNotifyAns& QualityLifeDayNotifyAns::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

QualityLifeDayNotifyAns* QualityLifeDayNotifyAns::default_instance_ = nullptr;

QualityLifeDayNotifyAns* QualityLifeDayNotifyAns::New(::google::protobuf::Arena* arena) const {
  QualityLifeDayNotifyAns* n = new QualityLifeDayNotifyAns;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void QualityLifeDayNotifyAns::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QualityLifeDayNotifyAns*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(age_, sex_);
    ZR_(notify_type_, order_);
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_user_name()) {
      user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    health_score_ = 0;
  }
  if (_has_bits_[8 / 32] & 768) {
    if (has_weather_relate()) {
      weather_relate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_expert_segestion()) {
      expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QualityLifeDayNotifyAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.QualityLifeDayNotifyAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeDayNotifyAns.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_name;
        break;
      }

      // optional string user_name = 2;
      case 2: {
        if (tag == 18) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeDayNotifyAns.user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_age;
        break;
      }

      // optional int32 age = 3;
      case 3: {
        if (tag == 24) {
         parse_age:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
          set_has_age();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sex;
        break;
      }

      // optional int32 sex = 4;
      case 4: {
        if (tag == 32) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_notify_type;
        break;
      }

      // optional int32 notify_type = 5;
      case 5: {
        if (tag == 40) {
         parse_notify_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_type_)));
          set_has_notify_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_date;
        break;
      }

      // optional string date = 6;
      case 6: {
        if (tag == 50) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeDayNotifyAns.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_order;
        break;
      }

      // optional int32 order = 7;
      case 7: {
        if (tag == 56) {
         parse_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
          set_has_order();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_health_score;
        break;
      }

      // optional int32 health_score = 8;
      case 8: {
        if (tag == 64) {
         parse_health_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_score_)));
          set_has_health_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_weather_relate;
        break;
      }

      // optional string weather_relate = 9;
      case 9: {
        if (tag == 74) {
         parse_weather_relate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_weather_relate()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->weather_relate().data(), this->weather_relate().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeDayNotifyAns.weather_relate");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_expert_segestion;
        break;
      }

      // optional string expert_segestion = 10;
      case 10: {
        if (tag == 82) {
         parse_expert_segestion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expert_segestion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->expert_segestion().data(), this->expert_segestion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeDayNotifyAns.expert_segestion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.QualityLifeDayNotifyAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.QualityLifeDayNotifyAns)
  return false;
#undef DO_
}

void QualityLifeDayNotifyAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.QualityLifeDayNotifyAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeDayNotifyAns.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeDayNotifyAns.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // optional int32 age = 3;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->age(), output);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sex(), output);
  }

  // optional int32 notify_type = 5;
  if (has_notify_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->notify_type(), output);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeDayNotifyAns.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->date(), output);
  }

  // optional int32 order = 7;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->order(), output);
  }

  // optional int32 health_score = 8;
  if (has_health_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->health_score(), output);
  }

  // optional string weather_relate = 9;
  if (has_weather_relate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->weather_relate().data(), this->weather_relate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeDayNotifyAns.weather_relate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->weather_relate(), output);
  }

  // optional string expert_segestion = 10;
  if (has_expert_segestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expert_segestion().data(), this->expert_segestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeDayNotifyAns.expert_segestion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->expert_segestion(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.QualityLifeDayNotifyAns)
}

::google::protobuf::uint8* QualityLifeDayNotifyAns::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.QualityLifeDayNotifyAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeDayNotifyAns.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeDayNotifyAns.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // optional int32 age = 3;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->age(), target);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sex(), target);
  }

  // optional int32 notify_type = 5;
  if (has_notify_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->notify_type(), target);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeDayNotifyAns.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->date(), target);
  }

  // optional int32 order = 7;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->order(), target);
  }

  // optional int32 health_score = 8;
  if (has_health_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->health_score(), target);
  }

  // optional string weather_relate = 9;
  if (has_weather_relate()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->weather_relate().data(), this->weather_relate().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeDayNotifyAns.weather_relate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->weather_relate(), target);
  }

  // optional string expert_segestion = 10;
  if (has_expert_segestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expert_segestion().data(), this->expert_segestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeDayNotifyAns.expert_segestion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->expert_segestion(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.QualityLifeDayNotifyAns)
  return target;
}

int QualityLifeDayNotifyAns::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string user_name = 2;
    if (has_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_name());
    }

    // optional int32 age = 3;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional int32 sex = 4;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 notify_type = 5;
    if (has_notify_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify_type());
    }

    // optional string date = 6;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional int32 order = 7;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order());
    }

    // optional int32 health_score = 8;
    if (has_health_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health_score());
    }

  }
  if (_has_bits_[8 / 32] & 768) {
    // optional string weather_relate = 9;
    if (has_weather_relate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->weather_relate());
    }

    // optional string expert_segestion = 10;
    if (has_expert_segestion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expert_segestion());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QualityLifeDayNotifyAns::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QualityLifeDayNotifyAns* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QualityLifeDayNotifyAns*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QualityLifeDayNotifyAns::MergeFrom(const QualityLifeDayNotifyAns& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_user_name()) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_notify_type()) {
      set_notify_type(from.notify_type());
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_order()) {
      set_order(from.order());
    }
    if (from.has_health_score()) {
      set_health_score(from.health_score());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_weather_relate()) {
      set_has_weather_relate();
      weather_relate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weather_relate_);
    }
    if (from.has_expert_segestion()) {
      set_has_expert_segestion();
      expert_segestion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expert_segestion_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QualityLifeDayNotifyAns::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QualityLifeDayNotifyAns::CopyFrom(const QualityLifeDayNotifyAns& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityLifeDayNotifyAns::IsInitialized() const {

  return true;
}

void QualityLifeDayNotifyAns::Swap(QualityLifeDayNotifyAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityLifeDayNotifyAns::InternalSwap(QualityLifeDayNotifyAns* other) {
  user_id_.Swap(&other->user_id_);
  user_name_.Swap(&other->user_name_);
  std::swap(age_, other->age_);
  std::swap(sex_, other->sex_);
  std::swap(notify_type_, other->notify_type_);
  date_.Swap(&other->date_);
  std::swap(order_, other->order_);
  std::swap(health_score_, other->health_score_);
  weather_relate_.Swap(&other->weather_relate_);
  expert_segestion_.Swap(&other->expert_segestion_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QualityLifeDayNotifyAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QualityLifeDayNotifyAns_descriptor_;
  metadata.reflection = QualityLifeDayNotifyAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QualityLifeDayNotifyAns

// optional string user_id = 1;
 bool QualityLifeDayNotifyAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void QualityLifeDayNotifyAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void QualityLifeDayNotifyAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void QualityLifeDayNotifyAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& QualityLifeDayNotifyAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeDayNotifyAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.user_id)
}
 void QualityLifeDayNotifyAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeDayNotifyAns.user_id)
}
 void QualityLifeDayNotifyAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeDayNotifyAns.user_id)
}
 ::std::string* QualityLifeDayNotifyAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeDayNotifyAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeDayNotifyAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeDayNotifyAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeDayNotifyAns.user_id)
}

// optional string user_name = 2;
 bool QualityLifeDayNotifyAns::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void QualityLifeDayNotifyAns::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void QualityLifeDayNotifyAns::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void QualityLifeDayNotifyAns::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
 const ::std::string& QualityLifeDayNotifyAns::user_name() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeDayNotifyAns::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.user_name)
}
 void QualityLifeDayNotifyAns::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeDayNotifyAns.user_name)
}
 void QualityLifeDayNotifyAns::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeDayNotifyAns.user_name)
}
 ::std::string* QualityLifeDayNotifyAns::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeDayNotifyAns.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeDayNotifyAns::release_user_name() {
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeDayNotifyAns::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeDayNotifyAns.user_name)
}

// optional int32 age = 3;
 bool QualityLifeDayNotifyAns::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void QualityLifeDayNotifyAns::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
 void QualityLifeDayNotifyAns::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
 void QualityLifeDayNotifyAns::clear_age() {
  age_ = 0;
  clear_has_age();
}
 ::google::protobuf::int32 QualityLifeDayNotifyAns::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.age)
  return age_;
}
 void QualityLifeDayNotifyAns::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.age)
}

// optional int32 sex = 4;
 bool QualityLifeDayNotifyAns::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void QualityLifeDayNotifyAns::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
 void QualityLifeDayNotifyAns::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
 void QualityLifeDayNotifyAns::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
 ::google::protobuf::int32 QualityLifeDayNotifyAns::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.sex)
  return sex_;
}
 void QualityLifeDayNotifyAns::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.sex)
}

// optional int32 notify_type = 5;
 bool QualityLifeDayNotifyAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void QualityLifeDayNotifyAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000010u;
}
 void QualityLifeDayNotifyAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
 void QualityLifeDayNotifyAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
 ::google::protobuf::int32 QualityLifeDayNotifyAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.notify_type)
  return notify_type_;
}
 void QualityLifeDayNotifyAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.notify_type)
}

// optional string date = 6;
 bool QualityLifeDayNotifyAns::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void QualityLifeDayNotifyAns::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
 void QualityLifeDayNotifyAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
 void QualityLifeDayNotifyAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& QualityLifeDayNotifyAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeDayNotifyAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.date)
}
 void QualityLifeDayNotifyAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeDayNotifyAns.date)
}
 void QualityLifeDayNotifyAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeDayNotifyAns.date)
}
 ::std::string* QualityLifeDayNotifyAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeDayNotifyAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeDayNotifyAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeDayNotifyAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeDayNotifyAns.date)
}

// optional int32 order = 7;
 bool QualityLifeDayNotifyAns::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void QualityLifeDayNotifyAns::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
 void QualityLifeDayNotifyAns::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
 void QualityLifeDayNotifyAns::clear_order() {
  order_ = 0;
  clear_has_order();
}
 ::google::protobuf::int32 QualityLifeDayNotifyAns::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.order)
  return order_;
}
 void QualityLifeDayNotifyAns::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.order)
}

// optional int32 health_score = 8;
 bool QualityLifeDayNotifyAns::has_health_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void QualityLifeDayNotifyAns::set_has_health_score() {
  _has_bits_[0] |= 0x00000080u;
}
 void QualityLifeDayNotifyAns::clear_has_health_score() {
  _has_bits_[0] &= ~0x00000080u;
}
 void QualityLifeDayNotifyAns::clear_health_score() {
  health_score_ = 0;
  clear_has_health_score();
}
 ::google::protobuf::int32 QualityLifeDayNotifyAns::health_score() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.health_score)
  return health_score_;
}
 void QualityLifeDayNotifyAns::set_health_score(::google::protobuf::int32 value) {
  set_has_health_score();
  health_score_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.health_score)
}

// optional string weather_relate = 9;
 bool QualityLifeDayNotifyAns::has_weather_relate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void QualityLifeDayNotifyAns::set_has_weather_relate() {
  _has_bits_[0] |= 0x00000100u;
}
 void QualityLifeDayNotifyAns::clear_has_weather_relate() {
  _has_bits_[0] &= ~0x00000100u;
}
 void QualityLifeDayNotifyAns::clear_weather_relate() {
  weather_relate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weather_relate();
}
 const ::std::string& QualityLifeDayNotifyAns::weather_relate() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.weather_relate)
  return weather_relate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeDayNotifyAns::set_weather_relate(const ::std::string& value) {
  set_has_weather_relate();
  weather_relate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.weather_relate)
}
 void QualityLifeDayNotifyAns::set_weather_relate(const char* value) {
  set_has_weather_relate();
  weather_relate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeDayNotifyAns.weather_relate)
}
 void QualityLifeDayNotifyAns::set_weather_relate(const char* value, size_t size) {
  set_has_weather_relate();
  weather_relate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeDayNotifyAns.weather_relate)
}
 ::std::string* QualityLifeDayNotifyAns::mutable_weather_relate() {
  set_has_weather_relate();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeDayNotifyAns.weather_relate)
  return weather_relate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeDayNotifyAns::release_weather_relate() {
  clear_has_weather_relate();
  return weather_relate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeDayNotifyAns::set_allocated_weather_relate(::std::string* weather_relate) {
  if (weather_relate != nullptr) {
    set_has_weather_relate();
  } else {
    clear_has_weather_relate();
  }
  weather_relate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weather_relate);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeDayNotifyAns.weather_relate)
}

// optional string expert_segestion = 10;
 bool QualityLifeDayNotifyAns::has_expert_segestion() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void QualityLifeDayNotifyAns::set_has_expert_segestion() {
  _has_bits_[0] |= 0x00000200u;
}
 void QualityLifeDayNotifyAns::clear_has_expert_segestion() {
  _has_bits_[0] &= ~0x00000200u;
}
 void QualityLifeDayNotifyAns::clear_expert_segestion() {
  expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expert_segestion();
}
 const ::std::string& QualityLifeDayNotifyAns::expert_segestion() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.expert_segestion)
  return expert_segestion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeDayNotifyAns::set_expert_segestion(const ::std::string& value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.expert_segestion)
}
 void QualityLifeDayNotifyAns::set_expert_segestion(const char* value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeDayNotifyAns.expert_segestion)
}
 void QualityLifeDayNotifyAns::set_expert_segestion(const char* value, size_t size) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeDayNotifyAns.expert_segestion)
}
 ::std::string* QualityLifeDayNotifyAns::mutable_expert_segestion() {
  set_has_expert_segestion();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeDayNotifyAns.expert_segestion)
  return expert_segestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeDayNotifyAns::release_expert_segestion() {
  clear_has_expert_segestion();
  return expert_segestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeDayNotifyAns::set_allocated_expert_segestion(::std::string* expert_segestion) {
  if (expert_segestion != nullptr) {
    set_has_expert_segestion();
  } else {
    clear_has_expert_segestion();
  }
  expert_segestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expert_segestion);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeDayNotifyAns.expert_segestion)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int QualityLifeWeekNotifyAns::kUserIdFieldNumber;
const int QualityLifeWeekNotifyAns::kUserNameFieldNumber;
const int QualityLifeWeekNotifyAns::kAgeFieldNumber;
const int QualityLifeWeekNotifyAns::kSexFieldNumber;
const int QualityLifeWeekNotifyAns::kNotifyTypeFieldNumber;
const int QualityLifeWeekNotifyAns::kDateFieldNumber;
const int QualityLifeWeekNotifyAns::kOrderFieldNumber;
const int QualityLifeWeekNotifyAns::kHealthScoreFieldNumber;
const int QualityLifeWeekNotifyAns::kExpertSegestionFieldNumber;
const int QualityLifeWeekNotifyAns::kRegularActFieldNumber;
const int QualityLifeWeekNotifyAns::kSleepConditionFieldNumber;
const int QualityLifeWeekNotifyAns::kBodyMeasureFieldNumber;
const int QualityLifeWeekNotifyAns::kRunScenceFieldNumber;
const int QualityLifeWeekNotifyAns::kEatNutritionFieldNumber;
#endif  // !_MSC_VER

QualityLifeWeekNotifyAns::QualityLifeWeekNotifyAns()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.QualityLifeWeekNotifyAns)
}

void QualityLifeWeekNotifyAns::InitAsDefaultInstance() {
}

QualityLifeWeekNotifyAns::QualityLifeWeekNotifyAns(const QualityLifeWeekNotifyAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.QualityLifeWeekNotifyAns)
}

void QualityLifeWeekNotifyAns::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_ = 0;
  sex_ = 0;
  notify_type_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_ = 0;
  health_score_ = 0;
  expert_segestion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regular_act_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_condition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_measure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_scence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eat_nutrition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QualityLifeWeekNotifyAns::~QualityLifeWeekNotifyAns() {
  // @@protoc_insertion_point(destructor:YfqProtocol.QualityLifeWeekNotifyAns)
  SharedDtor();
}

void QualityLifeWeekNotifyAns::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expert_segestion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regular_act_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_condition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_measure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_scence_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eat_nutrition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QualityLifeWeekNotifyAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QualityLifeWeekNotifyAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QualityLifeWeekNotifyAns_descriptor_;
}

const QualityLifeWeekNotifyAns& QualityLifeWeekNotifyAns::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

QualityLifeWeekNotifyAns* QualityLifeWeekNotifyAns::default_instance_ = nullptr;

QualityLifeWeekNotifyAns* QualityLifeWeekNotifyAns::New(::google::protobuf::Arena* arena) const {
  QualityLifeWeekNotifyAns* n = new QualityLifeWeekNotifyAns;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void QualityLifeWeekNotifyAns::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QualityLifeWeekNotifyAns*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(age_, sex_);
    ZR_(notify_type_, order_);
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_user_name()) {
      user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    health_score_ = 0;
  }
  if (_has_bits_[8 / 32] & 16128) {
    if (has_expert_segestion()) {
      expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_regular_act()) {
      regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sleep_condition()) {
      sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_body_measure()) {
      body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_run_scence()) {
      run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_eat_nutrition()) {
      eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QualityLifeWeekNotifyAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.QualityLifeWeekNotifyAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeWeekNotifyAns.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_name;
        break;
      }

      // optional string user_name = 2;
      case 2: {
        if (tag == 18) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeWeekNotifyAns.user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_age;
        break;
      }

      // optional int32 age = 3;
      case 3: {
        if (tag == 24) {
         parse_age:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
          set_has_age();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sex;
        break;
      }

      // optional int32 sex = 4;
      case 4: {
        if (tag == 32) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_notify_type;
        break;
      }

      // optional int32 notify_type = 5;
      case 5: {
        if (tag == 40) {
         parse_notify_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_type_)));
          set_has_notify_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_date;
        break;
      }

      // optional string date = 6;
      case 6: {
        if (tag == 50) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeWeekNotifyAns.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_order;
        break;
      }

      // optional int32 order = 7;
      case 7: {
        if (tag == 56) {
         parse_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
          set_has_order();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_health_score;
        break;
      }

      // optional int32 health_score = 8;
      case 8: {
        if (tag == 64) {
         parse_health_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_score_)));
          set_has_health_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_expert_segestion;
        break;
      }

      // optional string expert_segestion = 9;
      case 9: {
        if (tag == 74) {
         parse_expert_segestion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expert_segestion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->expert_segestion().data(), this->expert_segestion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_regular_act;
        break;
      }

      // optional string regular_act = 10;
      case 10: {
        if (tag == 82) {
         parse_regular_act:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regular_act()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regular_act().data(), this->regular_act().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeWeekNotifyAns.regular_act");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_sleep_condition;
        break;
      }

      // optional string sleep_condition = 11;
      case 11: {
        if (tag == 90) {
         parse_sleep_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sleep_condition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sleep_condition().data(), this->sleep_condition().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_body_measure;
        break;
      }

      // optional string body_measure = 12;
      case 12: {
        if (tag == 98) {
         parse_body_measure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body_measure()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body_measure().data(), this->body_measure().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeWeekNotifyAns.body_measure");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_run_scence;
        break;
      }

      // optional string run_scence = 13;
      case 13: {
        if (tag == 106) {
         parse_run_scence:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_scence()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_scence().data(), this->run_scence().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeWeekNotifyAns.run_scence");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_eat_nutrition;
        break;
      }

      // optional string eat_nutrition = 14;
      case 14: {
        if (tag == 114) {
         parse_eat_nutrition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_eat_nutrition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->eat_nutrition().data(), this->eat_nutrition().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.QualityLifeWeekNotifyAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.QualityLifeWeekNotifyAns)
  return false;
#undef DO_
}

void QualityLifeWeekNotifyAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.QualityLifeWeekNotifyAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // optional int32 age = 3;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->age(), output);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sex(), output);
  }

  // optional int32 notify_type = 5;
  if (has_notify_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->notify_type(), output);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->date(), output);
  }

  // optional int32 order = 7;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->order(), output);
  }

  // optional int32 health_score = 8;
  if (has_health_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->health_score(), output);
  }

  // optional string expert_segestion = 9;
  if (has_expert_segestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expert_segestion().data(), this->expert_segestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->expert_segestion(), output);
  }

  // optional string regular_act = 10;
  if (has_regular_act()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regular_act().data(), this->regular_act().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.regular_act");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->regular_act(), output);
  }

  // optional string sleep_condition = 11;
  if (has_sleep_condition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sleep_condition().data(), this->sleep_condition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sleep_condition(), output);
  }

  // optional string body_measure = 12;
  if (has_body_measure()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_measure().data(), this->body_measure().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.body_measure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->body_measure(), output);
  }

  // optional string run_scence = 13;
  if (has_run_scence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_scence().data(), this->run_scence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.run_scence");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->run_scence(), output);
  }

  // optional string eat_nutrition = 14;
  if (has_eat_nutrition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->eat_nutrition().data(), this->eat_nutrition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->eat_nutrition(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.QualityLifeWeekNotifyAns)
}

::google::protobuf::uint8* QualityLifeWeekNotifyAns::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.QualityLifeWeekNotifyAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // optional int32 age = 3;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->age(), target);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sex(), target);
  }

  // optional int32 notify_type = 5;
  if (has_notify_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->notify_type(), target);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->date(), target);
  }

  // optional int32 order = 7;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->order(), target);
  }

  // optional int32 health_score = 8;
  if (has_health_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->health_score(), target);
  }

  // optional string expert_segestion = 9;
  if (has_expert_segestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expert_segestion().data(), this->expert_segestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->expert_segestion(), target);
  }

  // optional string regular_act = 10;
  if (has_regular_act()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regular_act().data(), this->regular_act().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.regular_act");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->regular_act(), target);
  }

  // optional string sleep_condition = 11;
  if (has_sleep_condition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sleep_condition().data(), this->sleep_condition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sleep_condition(), target);
  }

  // optional string body_measure = 12;
  if (has_body_measure()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_measure().data(), this->body_measure().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.body_measure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->body_measure(), target);
  }

  // optional string run_scence = 13;
  if (has_run_scence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_scence().data(), this->run_scence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.run_scence");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->run_scence(), target);
  }

  // optional string eat_nutrition = 14;
  if (has_eat_nutrition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->eat_nutrition().data(), this->eat_nutrition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->eat_nutrition(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.QualityLifeWeekNotifyAns)
  return target;
}

int QualityLifeWeekNotifyAns::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string user_name = 2;
    if (has_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_name());
    }

    // optional int32 age = 3;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional int32 sex = 4;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 notify_type = 5;
    if (has_notify_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify_type());
    }

    // optional string date = 6;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional int32 order = 7;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order());
    }

    // optional int32 health_score = 8;
    if (has_health_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health_score());
    }

  }
  if (_has_bits_[8 / 32] & 16128) {
    // optional string expert_segestion = 9;
    if (has_expert_segestion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expert_segestion());
    }

    // optional string regular_act = 10;
    if (has_regular_act()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regular_act());
    }

    // optional string sleep_condition = 11;
    if (has_sleep_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sleep_condition());
    }

    // optional string body_measure = 12;
    if (has_body_measure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->body_measure());
    }

    // optional string run_scence = 13;
    if (has_run_scence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_scence());
    }

    // optional string eat_nutrition = 14;
    if (has_eat_nutrition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->eat_nutrition());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QualityLifeWeekNotifyAns::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QualityLifeWeekNotifyAns* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QualityLifeWeekNotifyAns*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QualityLifeWeekNotifyAns::MergeFrom(const QualityLifeWeekNotifyAns& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_user_name()) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_notify_type()) {
      set_notify_type(from.notify_type());
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_order()) {
      set_order(from.order());
    }
    if (from.has_health_score()) {
      set_health_score(from.health_score());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_expert_segestion()) {
      set_has_expert_segestion();
      expert_segestion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expert_segestion_);
    }
    if (from.has_regular_act()) {
      set_has_regular_act();
      regular_act_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regular_act_);
    }
    if (from.has_sleep_condition()) {
      set_has_sleep_condition();
      sleep_condition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sleep_condition_);
    }
    if (from.has_body_measure()) {
      set_has_body_measure();
      body_measure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_measure_);
    }
    if (from.has_run_scence()) {
      set_has_run_scence();
      run_scence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_scence_);
    }
    if (from.has_eat_nutrition()) {
      set_has_eat_nutrition();
      eat_nutrition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eat_nutrition_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QualityLifeWeekNotifyAns::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QualityLifeWeekNotifyAns::CopyFrom(const QualityLifeWeekNotifyAns& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityLifeWeekNotifyAns::IsInitialized() const {

  return true;
}

void QualityLifeWeekNotifyAns::Swap(QualityLifeWeekNotifyAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityLifeWeekNotifyAns::InternalSwap(QualityLifeWeekNotifyAns* other) {
  user_id_.Swap(&other->user_id_);
  user_name_.Swap(&other->user_name_);
  std::swap(age_, other->age_);
  std::swap(sex_, other->sex_);
  std::swap(notify_type_, other->notify_type_);
  date_.Swap(&other->date_);
  std::swap(order_, other->order_);
  std::swap(health_score_, other->health_score_);
  expert_segestion_.Swap(&other->expert_segestion_);
  regular_act_.Swap(&other->regular_act_);
  sleep_condition_.Swap(&other->sleep_condition_);
  body_measure_.Swap(&other->body_measure_);
  run_scence_.Swap(&other->run_scence_);
  eat_nutrition_.Swap(&other->eat_nutrition_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QualityLifeWeekNotifyAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QualityLifeWeekNotifyAns_descriptor_;
  metadata.reflection = QualityLifeWeekNotifyAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QualityLifeWeekNotifyAns

// optional string user_id = 1;
 bool QualityLifeWeekNotifyAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void QualityLifeWeekNotifyAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void QualityLifeWeekNotifyAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& QualityLifeWeekNotifyAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.user_id)
}
 void QualityLifeWeekNotifyAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.user_id)
}
 void QualityLifeWeekNotifyAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.user_id)
}
 ::std::string* QualityLifeWeekNotifyAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeWeekNotifyAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.user_id)
}

// optional string user_name = 2;
 bool QualityLifeWeekNotifyAns::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void QualityLifeWeekNotifyAns::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void QualityLifeWeekNotifyAns::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
 const ::std::string& QualityLifeWeekNotifyAns::user_name() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.user_name)
}
 void QualityLifeWeekNotifyAns::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.user_name)
}
 void QualityLifeWeekNotifyAns::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.user_name)
}
 ::std::string* QualityLifeWeekNotifyAns::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeWeekNotifyAns::release_user_name() {
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.user_name)
}

// optional int32 age = 3;
 bool QualityLifeWeekNotifyAns::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
 void QualityLifeWeekNotifyAns::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
 void QualityLifeWeekNotifyAns::clear_age() {
  age_ = 0;
  clear_has_age();
}
 ::google::protobuf::int32 QualityLifeWeekNotifyAns::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.age)
  return age_;
}
 void QualityLifeWeekNotifyAns::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.age)
}

// optional int32 sex = 4;
 bool QualityLifeWeekNotifyAns::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
 void QualityLifeWeekNotifyAns::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
 void QualityLifeWeekNotifyAns::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
 ::google::protobuf::int32 QualityLifeWeekNotifyAns::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.sex)
  return sex_;
}
 void QualityLifeWeekNotifyAns::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.sex)
}

// optional int32 notify_type = 5;
 bool QualityLifeWeekNotifyAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000010u;
}
 void QualityLifeWeekNotifyAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
 void QualityLifeWeekNotifyAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
 ::google::protobuf::int32 QualityLifeWeekNotifyAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.notify_type)
  return notify_type_;
}
 void QualityLifeWeekNotifyAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.notify_type)
}

// optional string date = 6;
 bool QualityLifeWeekNotifyAns::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
 void QualityLifeWeekNotifyAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
 void QualityLifeWeekNotifyAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& QualityLifeWeekNotifyAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.date)
}
 void QualityLifeWeekNotifyAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.date)
}
 void QualityLifeWeekNotifyAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.date)
}
 ::std::string* QualityLifeWeekNotifyAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeWeekNotifyAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.date)
}

// optional int32 order = 7;
 bool QualityLifeWeekNotifyAns::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
 void QualityLifeWeekNotifyAns::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
 void QualityLifeWeekNotifyAns::clear_order() {
  order_ = 0;
  clear_has_order();
}
 ::google::protobuf::int32 QualityLifeWeekNotifyAns::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.order)
  return order_;
}
 void QualityLifeWeekNotifyAns::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.order)
}

// optional int32 health_score = 8;
 bool QualityLifeWeekNotifyAns::has_health_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_health_score() {
  _has_bits_[0] |= 0x00000080u;
}
 void QualityLifeWeekNotifyAns::clear_has_health_score() {
  _has_bits_[0] &= ~0x00000080u;
}
 void QualityLifeWeekNotifyAns::clear_health_score() {
  health_score_ = 0;
  clear_has_health_score();
}
 ::google::protobuf::int32 QualityLifeWeekNotifyAns::health_score() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.health_score)
  return health_score_;
}
 void QualityLifeWeekNotifyAns::set_health_score(::google::protobuf::int32 value) {
  set_has_health_score();
  health_score_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.health_score)
}

// optional string expert_segestion = 9;
 bool QualityLifeWeekNotifyAns::has_expert_segestion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_expert_segestion() {
  _has_bits_[0] |= 0x00000100u;
}
 void QualityLifeWeekNotifyAns::clear_has_expert_segestion() {
  _has_bits_[0] &= ~0x00000100u;
}
 void QualityLifeWeekNotifyAns::clear_expert_segestion() {
  expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expert_segestion();
}
 const ::std::string& QualityLifeWeekNotifyAns::expert_segestion() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion)
  return expert_segestion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_expert_segestion(const ::std::string& value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion)
}
 void QualityLifeWeekNotifyAns::set_expert_segestion(const char* value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion)
}
 void QualityLifeWeekNotifyAns::set_expert_segestion(const char* value, size_t size) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion)
}
 ::std::string* QualityLifeWeekNotifyAns::mutable_expert_segestion() {
  set_has_expert_segestion();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion)
  return expert_segestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeWeekNotifyAns::release_expert_segestion() {
  clear_has_expert_segestion();
  return expert_segestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_allocated_expert_segestion(::std::string* expert_segestion) {
  if (expert_segestion != nullptr) {
    set_has_expert_segestion();
  } else {
    clear_has_expert_segestion();
  }
  expert_segestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expert_segestion);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion)
}

// optional string regular_act = 10;
 bool QualityLifeWeekNotifyAns::has_regular_act() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_regular_act() {
  _has_bits_[0] |= 0x00000200u;
}
 void QualityLifeWeekNotifyAns::clear_has_regular_act() {
  _has_bits_[0] &= ~0x00000200u;
}
 void QualityLifeWeekNotifyAns::clear_regular_act() {
  regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regular_act();
}
 const ::std::string& QualityLifeWeekNotifyAns::regular_act() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.regular_act)
  return regular_act_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_regular_act(const ::std::string& value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.regular_act)
}
 void QualityLifeWeekNotifyAns::set_regular_act(const char* value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.regular_act)
}
 void QualityLifeWeekNotifyAns::set_regular_act(const char* value, size_t size) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.regular_act)
}
 ::std::string* QualityLifeWeekNotifyAns::mutable_regular_act() {
  set_has_regular_act();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.regular_act)
  return regular_act_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeWeekNotifyAns::release_regular_act() {
  clear_has_regular_act();
  return regular_act_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_allocated_regular_act(::std::string* regular_act) {
  if (regular_act != nullptr) {
    set_has_regular_act();
  } else {
    clear_has_regular_act();
  }
  regular_act_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regular_act);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.regular_act)
}

// optional string sleep_condition = 11;
 bool QualityLifeWeekNotifyAns::has_sleep_condition() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_sleep_condition() {
  _has_bits_[0] |= 0x00000400u;
}
 void QualityLifeWeekNotifyAns::clear_has_sleep_condition() {
  _has_bits_[0] &= ~0x00000400u;
}
 void QualityLifeWeekNotifyAns::clear_sleep_condition() {
  sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sleep_condition();
}
 const ::std::string& QualityLifeWeekNotifyAns::sleep_condition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition)
  return sleep_condition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_sleep_condition(const ::std::string& value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition)
}
 void QualityLifeWeekNotifyAns::set_sleep_condition(const char* value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition)
}
 void QualityLifeWeekNotifyAns::set_sleep_condition(const char* value, size_t size) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition)
}
 ::std::string* QualityLifeWeekNotifyAns::mutable_sleep_condition() {
  set_has_sleep_condition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition)
  return sleep_condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeWeekNotifyAns::release_sleep_condition() {
  clear_has_sleep_condition();
  return sleep_condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_allocated_sleep_condition(::std::string* sleep_condition) {
  if (sleep_condition != nullptr) {
    set_has_sleep_condition();
  } else {
    clear_has_sleep_condition();
  }
  sleep_condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sleep_condition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition)
}

// optional string body_measure = 12;
 bool QualityLifeWeekNotifyAns::has_body_measure() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_body_measure() {
  _has_bits_[0] |= 0x00000800u;
}
 void QualityLifeWeekNotifyAns::clear_has_body_measure() {
  _has_bits_[0] &= ~0x00000800u;
}
 void QualityLifeWeekNotifyAns::clear_body_measure() {
  body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_measure();
}
 const ::std::string& QualityLifeWeekNotifyAns::body_measure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.body_measure)
  return body_measure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_body_measure(const ::std::string& value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.body_measure)
}
 void QualityLifeWeekNotifyAns::set_body_measure(const char* value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.body_measure)
}
 void QualityLifeWeekNotifyAns::set_body_measure(const char* value, size_t size) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.body_measure)
}
 ::std::string* QualityLifeWeekNotifyAns::mutable_body_measure() {
  set_has_body_measure();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.body_measure)
  return body_measure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeWeekNotifyAns::release_body_measure() {
  clear_has_body_measure();
  return body_measure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_allocated_body_measure(::std::string* body_measure) {
  if (body_measure != nullptr) {
    set_has_body_measure();
  } else {
    clear_has_body_measure();
  }
  body_measure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_measure);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.body_measure)
}

// optional string run_scence = 13;
 bool QualityLifeWeekNotifyAns::has_run_scence() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_run_scence() {
  _has_bits_[0] |= 0x00001000u;
}
 void QualityLifeWeekNotifyAns::clear_has_run_scence() {
  _has_bits_[0] &= ~0x00001000u;
}
 void QualityLifeWeekNotifyAns::clear_run_scence() {
  run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_run_scence();
}
 const ::std::string& QualityLifeWeekNotifyAns::run_scence() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.run_scence)
  return run_scence_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_run_scence(const ::std::string& value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.run_scence)
}
 void QualityLifeWeekNotifyAns::set_run_scence(const char* value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.run_scence)
}
 void QualityLifeWeekNotifyAns::set_run_scence(const char* value, size_t size) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.run_scence)
}
 ::std::string* QualityLifeWeekNotifyAns::mutable_run_scence() {
  set_has_run_scence();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.run_scence)
  return run_scence_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeWeekNotifyAns::release_run_scence() {
  clear_has_run_scence();
  return run_scence_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_allocated_run_scence(::std::string* run_scence) {
  if (run_scence != nullptr) {
    set_has_run_scence();
  } else {
    clear_has_run_scence();
  }
  run_scence_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), run_scence);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.run_scence)
}

// optional string eat_nutrition = 14;
 bool QualityLifeWeekNotifyAns::has_eat_nutrition() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
 void QualityLifeWeekNotifyAns::set_has_eat_nutrition() {
  _has_bits_[0] |= 0x00002000u;
}
 void QualityLifeWeekNotifyAns::clear_has_eat_nutrition() {
  _has_bits_[0] &= ~0x00002000u;
}
 void QualityLifeWeekNotifyAns::clear_eat_nutrition() {
  eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eat_nutrition();
}
 const ::std::string& QualityLifeWeekNotifyAns::eat_nutrition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition)
  return eat_nutrition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_eat_nutrition(const ::std::string& value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition)
}
 void QualityLifeWeekNotifyAns::set_eat_nutrition(const char* value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition)
}
 void QualityLifeWeekNotifyAns::set_eat_nutrition(const char* value, size_t size) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition)
}
 ::std::string* QualityLifeWeekNotifyAns::mutable_eat_nutrition() {
  set_has_eat_nutrition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition)
  return eat_nutrition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeWeekNotifyAns::release_eat_nutrition() {
  clear_has_eat_nutrition();
  return eat_nutrition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeWeekNotifyAns::set_allocated_eat_nutrition(::std::string* eat_nutrition) {
  if (eat_nutrition != nullptr) {
    set_has_eat_nutrition();
  } else {
    clear_has_eat_nutrition();
  }
  eat_nutrition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eat_nutrition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int QualityLifeMonthNotifyAns::kUserIdFieldNumber;
const int QualityLifeMonthNotifyAns::kUserNameFieldNumber;
const int QualityLifeMonthNotifyAns::kAgeFieldNumber;
const int QualityLifeMonthNotifyAns::kSexFieldNumber;
const int QualityLifeMonthNotifyAns::kNotifyTypeFieldNumber;
const int QualityLifeMonthNotifyAns::kDateFieldNumber;
const int QualityLifeMonthNotifyAns::kOrderFieldNumber;
const int QualityLifeMonthNotifyAns::kHealthScoreFieldNumber;
const int QualityLifeMonthNotifyAns::kExpertSegestionFieldNumber;
const int QualityLifeMonthNotifyAns::kRegularActFieldNumber;
const int QualityLifeMonthNotifyAns::kSleepConditionFieldNumber;
const int QualityLifeMonthNotifyAns::kBodyMeasureFieldNumber;
const int QualityLifeMonthNotifyAns::kRunScenceFieldNumber;
const int QualityLifeMonthNotifyAns::kEatNutritionFieldNumber;
#endif  // !_MSC_VER

QualityLifeMonthNotifyAns::QualityLifeMonthNotifyAns()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.QualityLifeMonthNotifyAns)
}

void QualityLifeMonthNotifyAns::InitAsDefaultInstance() {
}

QualityLifeMonthNotifyAns::QualityLifeMonthNotifyAns(const QualityLifeMonthNotifyAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.QualityLifeMonthNotifyAns)
}

void QualityLifeMonthNotifyAns::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_ = 0;
  sex_ = 0;
  notify_type_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_ = 0;
  health_score_ = 0;
  expert_segestion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regular_act_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_condition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_measure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_scence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eat_nutrition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QualityLifeMonthNotifyAns::~QualityLifeMonthNotifyAns() {
  // @@protoc_insertion_point(destructor:YfqProtocol.QualityLifeMonthNotifyAns)
  SharedDtor();
}

void QualityLifeMonthNotifyAns::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expert_segestion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regular_act_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_condition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_measure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_scence_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eat_nutrition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QualityLifeMonthNotifyAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QualityLifeMonthNotifyAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QualityLifeMonthNotifyAns_descriptor_;
}

const QualityLifeMonthNotifyAns& QualityLifeMonthNotifyAns::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

QualityLifeMonthNotifyAns* QualityLifeMonthNotifyAns::default_instance_ = nullptr;

QualityLifeMonthNotifyAns* QualityLifeMonthNotifyAns::New(::google::protobuf::Arena* arena) const {
  QualityLifeMonthNotifyAns* n = new QualityLifeMonthNotifyAns;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void QualityLifeMonthNotifyAns::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QualityLifeMonthNotifyAns*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(age_, sex_);
    ZR_(notify_type_, order_);
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_user_name()) {
      user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    health_score_ = 0;
  }
  if (_has_bits_[8 / 32] & 16128) {
    if (has_expert_segestion()) {
      expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_regular_act()) {
      regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sleep_condition()) {
      sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_body_measure()) {
      body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_run_scence()) {
      run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_eat_nutrition()) {
      eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QualityLifeMonthNotifyAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.QualityLifeMonthNotifyAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeMonthNotifyAns.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_name;
        break;
      }

      // optional string user_name = 2;
      case 2: {
        if (tag == 18) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeMonthNotifyAns.user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_age;
        break;
      }

      // optional int32 age = 3;
      case 3: {
        if (tag == 24) {
         parse_age:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
          set_has_age();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sex;
        break;
      }

      // optional int32 sex = 4;
      case 4: {
        if (tag == 32) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_notify_type;
        break;
      }

      // optional int32 notify_type = 5;
      case 5: {
        if (tag == 40) {
         parse_notify_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_type_)));
          set_has_notify_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_date;
        break;
      }

      // optional string date = 6;
      case 6: {
        if (tag == 50) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeMonthNotifyAns.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_order;
        break;
      }

      // optional int32 order = 7;
      case 7: {
        if (tag == 56) {
         parse_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
          set_has_order();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_health_score;
        break;
      }

      // optional int32 health_score = 8;
      case 8: {
        if (tag == 64) {
         parse_health_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_score_)));
          set_has_health_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_expert_segestion;
        break;
      }

      // optional string expert_segestion = 9;
      case 9: {
        if (tag == 74) {
         parse_expert_segestion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expert_segestion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->expert_segestion().data(), this->expert_segestion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_regular_act;
        break;
      }

      // optional string regular_act = 10;
      case 10: {
        if (tag == 82) {
         parse_regular_act:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regular_act()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regular_act().data(), this->regular_act().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeMonthNotifyAns.regular_act");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_sleep_condition;
        break;
      }

      // optional string sleep_condition = 11;
      case 11: {
        if (tag == 90) {
         parse_sleep_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sleep_condition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sleep_condition().data(), this->sleep_condition().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_body_measure;
        break;
      }

      // optional string body_measure = 12;
      case 12: {
        if (tag == 98) {
         parse_body_measure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body_measure()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body_measure().data(), this->body_measure().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeMonthNotifyAns.body_measure");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_run_scence;
        break;
      }

      // optional string run_scence = 13;
      case 13: {
        if (tag == 106) {
         parse_run_scence:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_scence()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_scence().data(), this->run_scence().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeMonthNotifyAns.run_scence");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_eat_nutrition;
        break;
      }

      // optional string eat_nutrition = 14;
      case 14: {
        if (tag == 114) {
         parse_eat_nutrition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_eat_nutrition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->eat_nutrition().data(), this->eat_nutrition().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.QualityLifeMonthNotifyAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.QualityLifeMonthNotifyAns)
  return false;
#undef DO_
}

void QualityLifeMonthNotifyAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.QualityLifeMonthNotifyAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // optional int32 age = 3;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->age(), output);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sex(), output);
  }

  // optional int32 notify_type = 5;
  if (has_notify_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->notify_type(), output);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->date(), output);
  }

  // optional int32 order = 7;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->order(), output);
  }

  // optional int32 health_score = 8;
  if (has_health_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->health_score(), output);
  }

  // optional string expert_segestion = 9;
  if (has_expert_segestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expert_segestion().data(), this->expert_segestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->expert_segestion(), output);
  }

  // optional string regular_act = 10;
  if (has_regular_act()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regular_act().data(), this->regular_act().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.regular_act");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->regular_act(), output);
  }

  // optional string sleep_condition = 11;
  if (has_sleep_condition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sleep_condition().data(), this->sleep_condition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sleep_condition(), output);
  }

  // optional string body_measure = 12;
  if (has_body_measure()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_measure().data(), this->body_measure().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.body_measure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->body_measure(), output);
  }

  // optional string run_scence = 13;
  if (has_run_scence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_scence().data(), this->run_scence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.run_scence");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->run_scence(), output);
  }

  // optional string eat_nutrition = 14;
  if (has_eat_nutrition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->eat_nutrition().data(), this->eat_nutrition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->eat_nutrition(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.QualityLifeMonthNotifyAns)
}

::google::protobuf::uint8* QualityLifeMonthNotifyAns::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.QualityLifeMonthNotifyAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // optional int32 age = 3;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->age(), target);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sex(), target);
  }

  // optional int32 notify_type = 5;
  if (has_notify_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->notify_type(), target);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->date(), target);
  }

  // optional int32 order = 7;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->order(), target);
  }

  // optional int32 health_score = 8;
  if (has_health_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->health_score(), target);
  }

  // optional string expert_segestion = 9;
  if (has_expert_segestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expert_segestion().data(), this->expert_segestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->expert_segestion(), target);
  }

  // optional string regular_act = 10;
  if (has_regular_act()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regular_act().data(), this->regular_act().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.regular_act");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->regular_act(), target);
  }

  // optional string sleep_condition = 11;
  if (has_sleep_condition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sleep_condition().data(), this->sleep_condition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sleep_condition(), target);
  }

  // optional string body_measure = 12;
  if (has_body_measure()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_measure().data(), this->body_measure().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.body_measure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->body_measure(), target);
  }

  // optional string run_scence = 13;
  if (has_run_scence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_scence().data(), this->run_scence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.run_scence");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->run_scence(), target);
  }

  // optional string eat_nutrition = 14;
  if (has_eat_nutrition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->eat_nutrition().data(), this->eat_nutrition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->eat_nutrition(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.QualityLifeMonthNotifyAns)
  return target;
}

int QualityLifeMonthNotifyAns::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string user_name = 2;
    if (has_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_name());
    }

    // optional int32 age = 3;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional int32 sex = 4;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 notify_type = 5;
    if (has_notify_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify_type());
    }

    // optional string date = 6;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional int32 order = 7;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order());
    }

    // optional int32 health_score = 8;
    if (has_health_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health_score());
    }

  }
  if (_has_bits_[8 / 32] & 16128) {
    // optional string expert_segestion = 9;
    if (has_expert_segestion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expert_segestion());
    }

    // optional string regular_act = 10;
    if (has_regular_act()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regular_act());
    }

    // optional string sleep_condition = 11;
    if (has_sleep_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sleep_condition());
    }

    // optional string body_measure = 12;
    if (has_body_measure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->body_measure());
    }

    // optional string run_scence = 13;
    if (has_run_scence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_scence());
    }

    // optional string eat_nutrition = 14;
    if (has_eat_nutrition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->eat_nutrition());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QualityLifeMonthNotifyAns::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QualityLifeMonthNotifyAns* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QualityLifeMonthNotifyAns*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QualityLifeMonthNotifyAns::MergeFrom(const QualityLifeMonthNotifyAns& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_user_name()) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_notify_type()) {
      set_notify_type(from.notify_type());
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_order()) {
      set_order(from.order());
    }
    if (from.has_health_score()) {
      set_health_score(from.health_score());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_expert_segestion()) {
      set_has_expert_segestion();
      expert_segestion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expert_segestion_);
    }
    if (from.has_regular_act()) {
      set_has_regular_act();
      regular_act_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regular_act_);
    }
    if (from.has_sleep_condition()) {
      set_has_sleep_condition();
      sleep_condition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sleep_condition_);
    }
    if (from.has_body_measure()) {
      set_has_body_measure();
      body_measure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_measure_);
    }
    if (from.has_run_scence()) {
      set_has_run_scence();
      run_scence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_scence_);
    }
    if (from.has_eat_nutrition()) {
      set_has_eat_nutrition();
      eat_nutrition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eat_nutrition_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QualityLifeMonthNotifyAns::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QualityLifeMonthNotifyAns::CopyFrom(const QualityLifeMonthNotifyAns& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityLifeMonthNotifyAns::IsInitialized() const {

  return true;
}

void QualityLifeMonthNotifyAns::Swap(QualityLifeMonthNotifyAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityLifeMonthNotifyAns::InternalSwap(QualityLifeMonthNotifyAns* other) {
  user_id_.Swap(&other->user_id_);
  user_name_.Swap(&other->user_name_);
  std::swap(age_, other->age_);
  std::swap(sex_, other->sex_);
  std::swap(notify_type_, other->notify_type_);
  date_.Swap(&other->date_);
  std::swap(order_, other->order_);
  std::swap(health_score_, other->health_score_);
  expert_segestion_.Swap(&other->expert_segestion_);
  regular_act_.Swap(&other->regular_act_);
  sleep_condition_.Swap(&other->sleep_condition_);
  body_measure_.Swap(&other->body_measure_);
  run_scence_.Swap(&other->run_scence_);
  eat_nutrition_.Swap(&other->eat_nutrition_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QualityLifeMonthNotifyAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QualityLifeMonthNotifyAns_descriptor_;
  metadata.reflection = QualityLifeMonthNotifyAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QualityLifeMonthNotifyAns

// optional string user_id = 1;
 bool QualityLifeMonthNotifyAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void QualityLifeMonthNotifyAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void QualityLifeMonthNotifyAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& QualityLifeMonthNotifyAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.user_id)
}
 void QualityLifeMonthNotifyAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.user_id)
}
 void QualityLifeMonthNotifyAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.user_id)
}
 ::std::string* QualityLifeMonthNotifyAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeMonthNotifyAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.user_id)
}

// optional string user_name = 2;
 bool QualityLifeMonthNotifyAns::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void QualityLifeMonthNotifyAns::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void QualityLifeMonthNotifyAns::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
 const ::std::string& QualityLifeMonthNotifyAns::user_name() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.user_name)
}
 void QualityLifeMonthNotifyAns::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.user_name)
}
 void QualityLifeMonthNotifyAns::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.user_name)
}
 ::std::string* QualityLifeMonthNotifyAns::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeMonthNotifyAns::release_user_name() {
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.user_name)
}

// optional int32 age = 3;
 bool QualityLifeMonthNotifyAns::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
 void QualityLifeMonthNotifyAns::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
 void QualityLifeMonthNotifyAns::clear_age() {
  age_ = 0;
  clear_has_age();
}
 ::google::protobuf::int32 QualityLifeMonthNotifyAns::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.age)
  return age_;
}
 void QualityLifeMonthNotifyAns::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.age)
}

// optional int32 sex = 4;
 bool QualityLifeMonthNotifyAns::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
 void QualityLifeMonthNotifyAns::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
 void QualityLifeMonthNotifyAns::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
 ::google::protobuf::int32 QualityLifeMonthNotifyAns::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.sex)
  return sex_;
}
 void QualityLifeMonthNotifyAns::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.sex)
}

// optional int32 notify_type = 5;
 bool QualityLifeMonthNotifyAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000010u;
}
 void QualityLifeMonthNotifyAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
 void QualityLifeMonthNotifyAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
 ::google::protobuf::int32 QualityLifeMonthNotifyAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.notify_type)
  return notify_type_;
}
 void QualityLifeMonthNotifyAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.notify_type)
}

// optional string date = 6;
 bool QualityLifeMonthNotifyAns::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
 void QualityLifeMonthNotifyAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
 void QualityLifeMonthNotifyAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& QualityLifeMonthNotifyAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.date)
}
 void QualityLifeMonthNotifyAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.date)
}
 void QualityLifeMonthNotifyAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.date)
}
 ::std::string* QualityLifeMonthNotifyAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeMonthNotifyAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.date)
}

// optional int32 order = 7;
 bool QualityLifeMonthNotifyAns::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
 void QualityLifeMonthNotifyAns::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
 void QualityLifeMonthNotifyAns::clear_order() {
  order_ = 0;
  clear_has_order();
}
 ::google::protobuf::int32 QualityLifeMonthNotifyAns::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.order)
  return order_;
}
 void QualityLifeMonthNotifyAns::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.order)
}

// optional int32 health_score = 8;
 bool QualityLifeMonthNotifyAns::has_health_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_health_score() {
  _has_bits_[0] |= 0x00000080u;
}
 void QualityLifeMonthNotifyAns::clear_has_health_score() {
  _has_bits_[0] &= ~0x00000080u;
}
 void QualityLifeMonthNotifyAns::clear_health_score() {
  health_score_ = 0;
  clear_has_health_score();
}
 ::google::protobuf::int32 QualityLifeMonthNotifyAns::health_score() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.health_score)
  return health_score_;
}
 void QualityLifeMonthNotifyAns::set_health_score(::google::protobuf::int32 value) {
  set_has_health_score();
  health_score_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.health_score)
}

// optional string expert_segestion = 9;
 bool QualityLifeMonthNotifyAns::has_expert_segestion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_expert_segestion() {
  _has_bits_[0] |= 0x00000100u;
}
 void QualityLifeMonthNotifyAns::clear_has_expert_segestion() {
  _has_bits_[0] &= ~0x00000100u;
}
 void QualityLifeMonthNotifyAns::clear_expert_segestion() {
  expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expert_segestion();
}
 const ::std::string& QualityLifeMonthNotifyAns::expert_segestion() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion)
  return expert_segestion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_expert_segestion(const ::std::string& value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion)
}
 void QualityLifeMonthNotifyAns::set_expert_segestion(const char* value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion)
}
 void QualityLifeMonthNotifyAns::set_expert_segestion(const char* value, size_t size) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion)
}
 ::std::string* QualityLifeMonthNotifyAns::mutable_expert_segestion() {
  set_has_expert_segestion();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion)
  return expert_segestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeMonthNotifyAns::release_expert_segestion() {
  clear_has_expert_segestion();
  return expert_segestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_allocated_expert_segestion(::std::string* expert_segestion) {
  if (expert_segestion != nullptr) {
    set_has_expert_segestion();
  } else {
    clear_has_expert_segestion();
  }
  expert_segestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expert_segestion);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion)
}

// optional string regular_act = 10;
 bool QualityLifeMonthNotifyAns::has_regular_act() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_regular_act() {
  _has_bits_[0] |= 0x00000200u;
}
 void QualityLifeMonthNotifyAns::clear_has_regular_act() {
  _has_bits_[0] &= ~0x00000200u;
}
 void QualityLifeMonthNotifyAns::clear_regular_act() {
  regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regular_act();
}
 const ::std::string& QualityLifeMonthNotifyAns::regular_act() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.regular_act)
  return regular_act_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_regular_act(const ::std::string& value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.regular_act)
}
 void QualityLifeMonthNotifyAns::set_regular_act(const char* value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.regular_act)
}
 void QualityLifeMonthNotifyAns::set_regular_act(const char* value, size_t size) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.regular_act)
}
 ::std::string* QualityLifeMonthNotifyAns::mutable_regular_act() {
  set_has_regular_act();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.regular_act)
  return regular_act_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeMonthNotifyAns::release_regular_act() {
  clear_has_regular_act();
  return regular_act_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_allocated_regular_act(::std::string* regular_act) {
  if (regular_act != nullptr) {
    set_has_regular_act();
  } else {
    clear_has_regular_act();
  }
  regular_act_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regular_act);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.regular_act)
}

// optional string sleep_condition = 11;
 bool QualityLifeMonthNotifyAns::has_sleep_condition() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_sleep_condition() {
  _has_bits_[0] |= 0x00000400u;
}
 void QualityLifeMonthNotifyAns::clear_has_sleep_condition() {
  _has_bits_[0] &= ~0x00000400u;
}
 void QualityLifeMonthNotifyAns::clear_sleep_condition() {
  sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sleep_condition();
}
 const ::std::string& QualityLifeMonthNotifyAns::sleep_condition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition)
  return sleep_condition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_sleep_condition(const ::std::string& value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition)
}
 void QualityLifeMonthNotifyAns::set_sleep_condition(const char* value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition)
}
 void QualityLifeMonthNotifyAns::set_sleep_condition(const char* value, size_t size) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition)
}
 ::std::string* QualityLifeMonthNotifyAns::mutable_sleep_condition() {
  set_has_sleep_condition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition)
  return sleep_condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeMonthNotifyAns::release_sleep_condition() {
  clear_has_sleep_condition();
  return sleep_condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_allocated_sleep_condition(::std::string* sleep_condition) {
  if (sleep_condition != nullptr) {
    set_has_sleep_condition();
  } else {
    clear_has_sleep_condition();
  }
  sleep_condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sleep_condition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition)
}

// optional string body_measure = 12;
 bool QualityLifeMonthNotifyAns::has_body_measure() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_body_measure() {
  _has_bits_[0] |= 0x00000800u;
}
 void QualityLifeMonthNotifyAns::clear_has_body_measure() {
  _has_bits_[0] &= ~0x00000800u;
}
 void QualityLifeMonthNotifyAns::clear_body_measure() {
  body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_measure();
}
 const ::std::string& QualityLifeMonthNotifyAns::body_measure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.body_measure)
  return body_measure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_body_measure(const ::std::string& value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.body_measure)
}
 void QualityLifeMonthNotifyAns::set_body_measure(const char* value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.body_measure)
}
 void QualityLifeMonthNotifyAns::set_body_measure(const char* value, size_t size) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.body_measure)
}
 ::std::string* QualityLifeMonthNotifyAns::mutable_body_measure() {
  set_has_body_measure();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.body_measure)
  return body_measure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeMonthNotifyAns::release_body_measure() {
  clear_has_body_measure();
  return body_measure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_allocated_body_measure(::std::string* body_measure) {
  if (body_measure != nullptr) {
    set_has_body_measure();
  } else {
    clear_has_body_measure();
  }
  body_measure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_measure);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.body_measure)
}

// optional string run_scence = 13;
 bool QualityLifeMonthNotifyAns::has_run_scence() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_run_scence() {
  _has_bits_[0] |= 0x00001000u;
}
 void QualityLifeMonthNotifyAns::clear_has_run_scence() {
  _has_bits_[0] &= ~0x00001000u;
}
 void QualityLifeMonthNotifyAns::clear_run_scence() {
  run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_run_scence();
}
 const ::std::string& QualityLifeMonthNotifyAns::run_scence() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.run_scence)
  return run_scence_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_run_scence(const ::std::string& value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.run_scence)
}
 void QualityLifeMonthNotifyAns::set_run_scence(const char* value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.run_scence)
}
 void QualityLifeMonthNotifyAns::set_run_scence(const char* value, size_t size) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.run_scence)
}
 ::std::string* QualityLifeMonthNotifyAns::mutable_run_scence() {
  set_has_run_scence();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.run_scence)
  return run_scence_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeMonthNotifyAns::release_run_scence() {
  clear_has_run_scence();
  return run_scence_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_allocated_run_scence(::std::string* run_scence) {
  if (run_scence != nullptr) {
    set_has_run_scence();
  } else {
    clear_has_run_scence();
  }
  run_scence_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), run_scence);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.run_scence)
}

// optional string eat_nutrition = 14;
 bool QualityLifeMonthNotifyAns::has_eat_nutrition() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
 void QualityLifeMonthNotifyAns::set_has_eat_nutrition() {
  _has_bits_[0] |= 0x00002000u;
}
 void QualityLifeMonthNotifyAns::clear_has_eat_nutrition() {
  _has_bits_[0] &= ~0x00002000u;
}
 void QualityLifeMonthNotifyAns::clear_eat_nutrition() {
  eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eat_nutrition();
}
 const ::std::string& QualityLifeMonthNotifyAns::eat_nutrition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition)
  return eat_nutrition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_eat_nutrition(const ::std::string& value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition)
}
 void QualityLifeMonthNotifyAns::set_eat_nutrition(const char* value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition)
}
 void QualityLifeMonthNotifyAns::set_eat_nutrition(const char* value, size_t size) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition)
}
 ::std::string* QualityLifeMonthNotifyAns::mutable_eat_nutrition() {
  set_has_eat_nutrition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition)
  return eat_nutrition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeMonthNotifyAns::release_eat_nutrition() {
  clear_has_eat_nutrition();
  return eat_nutrition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeMonthNotifyAns::set_allocated_eat_nutrition(::std::string* eat_nutrition) {
  if (eat_nutrition != nullptr) {
    set_has_eat_nutrition();
  } else {
    clear_has_eat_nutrition();
  }
  eat_nutrition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eat_nutrition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int QualityLifeSeasonNotifyAns::kUserIdFieldNumber;
const int QualityLifeSeasonNotifyAns::kUserNameFieldNumber;
const int QualityLifeSeasonNotifyAns::kAgeFieldNumber;
const int QualityLifeSeasonNotifyAns::kSexFieldNumber;
const int QualityLifeSeasonNotifyAns::kNotifyTypeFieldNumber;
const int QualityLifeSeasonNotifyAns::kDateFieldNumber;
const int QualityLifeSeasonNotifyAns::kOrderFieldNumber;
const int QualityLifeSeasonNotifyAns::kHealthScoreFieldNumber;
const int QualityLifeSeasonNotifyAns::kExpertSegestionFieldNumber;
const int QualityLifeSeasonNotifyAns::kRegularActFieldNumber;
const int QualityLifeSeasonNotifyAns::kSleepConditionFieldNumber;
const int QualityLifeSeasonNotifyAns::kBodyMeasureFieldNumber;
const int QualityLifeSeasonNotifyAns::kRunScenceFieldNumber;
const int QualityLifeSeasonNotifyAns::kEatNutritionFieldNumber;
const int QualityLifeSeasonNotifyAns::kPsychologyHealthFieldNumber;
#endif  // !_MSC_VER

QualityLifeSeasonNotifyAns::QualityLifeSeasonNotifyAns()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.QualityLifeSeasonNotifyAns)
}

void QualityLifeSeasonNotifyAns::InitAsDefaultInstance() {
}

QualityLifeSeasonNotifyAns::QualityLifeSeasonNotifyAns(const QualityLifeSeasonNotifyAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.QualityLifeSeasonNotifyAns)
}

void QualityLifeSeasonNotifyAns::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_ = 0;
  sex_ = 0;
  notify_type_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_ = 0;
  health_score_ = 0;
  expert_segestion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regular_act_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_condition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_measure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_scence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eat_nutrition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psychology_health_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QualityLifeSeasonNotifyAns::~QualityLifeSeasonNotifyAns() {
  // @@protoc_insertion_point(destructor:YfqProtocol.QualityLifeSeasonNotifyAns)
  SharedDtor();
}

void QualityLifeSeasonNotifyAns::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expert_segestion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regular_act_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_condition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_measure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_scence_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eat_nutrition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psychology_health_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QualityLifeSeasonNotifyAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QualityLifeSeasonNotifyAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QualityLifeSeasonNotifyAns_descriptor_;
}

const QualityLifeSeasonNotifyAns& QualityLifeSeasonNotifyAns::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

QualityLifeSeasonNotifyAns* QualityLifeSeasonNotifyAns::default_instance_ = nullptr;

QualityLifeSeasonNotifyAns* QualityLifeSeasonNotifyAns::New(::google::protobuf::Arena* arena) const {
  QualityLifeSeasonNotifyAns* n = new QualityLifeSeasonNotifyAns;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void QualityLifeSeasonNotifyAns::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QualityLifeSeasonNotifyAns*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(age_, sex_);
    ZR_(notify_type_, order_);
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_user_name()) {
      user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    health_score_ = 0;
  }
  if (_has_bits_[8 / 32] & 32512) {
    if (has_expert_segestion()) {
      expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_regular_act()) {
      regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sleep_condition()) {
      sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_body_measure()) {
      body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_run_scence()) {
      run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_eat_nutrition()) {
      eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_psychology_health()) {
      psychology_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QualityLifeSeasonNotifyAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.QualityLifeSeasonNotifyAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeSeasonNotifyAns.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_name;
        break;
      }

      // optional string user_name = 2;
      case 2: {
        if (tag == 18) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeSeasonNotifyAns.user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_age;
        break;
      }

      // optional int32 age = 3;
      case 3: {
        if (tag == 24) {
         parse_age:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
          set_has_age();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sex;
        break;
      }

      // optional int32 sex = 4;
      case 4: {
        if (tag == 32) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_notify_type;
        break;
      }

      // optional int32 notify_type = 5;
      case 5: {
        if (tag == 40) {
         parse_notify_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_type_)));
          set_has_notify_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_date;
        break;
      }

      // optional string date = 6;
      case 6: {
        if (tag == 50) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeSeasonNotifyAns.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_order;
        break;
      }

      // optional int32 order = 7;
      case 7: {
        if (tag == 56) {
         parse_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
          set_has_order();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_health_score;
        break;
      }

      // optional int32 health_score = 8;
      case 8: {
        if (tag == 64) {
         parse_health_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_score_)));
          set_has_health_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_expert_segestion;
        break;
      }

      // optional string expert_segestion = 9;
      case 9: {
        if (tag == 74) {
         parse_expert_segestion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expert_segestion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->expert_segestion().data(), this->expert_segestion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_regular_act;
        break;
      }

      // optional string regular_act = 10;
      case 10: {
        if (tag == 82) {
         parse_regular_act:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regular_act()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regular_act().data(), this->regular_act().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeSeasonNotifyAns.regular_act");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_sleep_condition;
        break;
      }

      // optional string sleep_condition = 11;
      case 11: {
        if (tag == 90) {
         parse_sleep_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sleep_condition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sleep_condition().data(), this->sleep_condition().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_body_measure;
        break;
      }

      // optional string body_measure = 12;
      case 12: {
        if (tag == 98) {
         parse_body_measure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body_measure()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body_measure().data(), this->body_measure().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeSeasonNotifyAns.body_measure");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_run_scence;
        break;
      }

      // optional string run_scence = 13;
      case 13: {
        if (tag == 106) {
         parse_run_scence:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_scence()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_scence().data(), this->run_scence().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeSeasonNotifyAns.run_scence");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_eat_nutrition;
        break;
      }

      // optional string eat_nutrition = 14;
      case 14: {
        if (tag == 114) {
         parse_eat_nutrition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_eat_nutrition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->eat_nutrition().data(), this->eat_nutrition().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_psychology_health;
        break;
      }

      // optional string psychology_health = 15;
      case 15: {
        if (tag == 122) {
         parse_psychology_health:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psychology_health()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->psychology_health().data(), this->psychology_health().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.QualityLifeSeasonNotifyAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.QualityLifeSeasonNotifyAns)
  return false;
#undef DO_
}

void QualityLifeSeasonNotifyAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.QualityLifeSeasonNotifyAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // optional int32 age = 3;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->age(), output);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sex(), output);
  }

  // optional int32 notify_type = 5;
  if (has_notify_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->notify_type(), output);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->date(), output);
  }

  // optional int32 order = 7;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->order(), output);
  }

  // optional int32 health_score = 8;
  if (has_health_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->health_score(), output);
  }

  // optional string expert_segestion = 9;
  if (has_expert_segestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expert_segestion().data(), this->expert_segestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->expert_segestion(), output);
  }

  // optional string regular_act = 10;
  if (has_regular_act()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regular_act().data(), this->regular_act().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.regular_act");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->regular_act(), output);
  }

  // optional string sleep_condition = 11;
  if (has_sleep_condition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sleep_condition().data(), this->sleep_condition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sleep_condition(), output);
  }

  // optional string body_measure = 12;
  if (has_body_measure()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_measure().data(), this->body_measure().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.body_measure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->body_measure(), output);
  }

  // optional string run_scence = 13;
  if (has_run_scence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_scence().data(), this->run_scence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.run_scence");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->run_scence(), output);
  }

  // optional string eat_nutrition = 14;
  if (has_eat_nutrition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->eat_nutrition().data(), this->eat_nutrition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->eat_nutrition(), output);
  }

  // optional string psychology_health = 15;
  if (has_psychology_health()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->psychology_health().data(), this->psychology_health().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->psychology_health(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.QualityLifeSeasonNotifyAns)
}

::google::protobuf::uint8* QualityLifeSeasonNotifyAns::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.QualityLifeSeasonNotifyAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // optional int32 age = 3;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->age(), target);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sex(), target);
  }

  // optional int32 notify_type = 5;
  if (has_notify_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->notify_type(), target);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->date(), target);
  }

  // optional int32 order = 7;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->order(), target);
  }

  // optional int32 health_score = 8;
  if (has_health_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->health_score(), target);
  }

  // optional string expert_segestion = 9;
  if (has_expert_segestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expert_segestion().data(), this->expert_segestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->expert_segestion(), target);
  }

  // optional string regular_act = 10;
  if (has_regular_act()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regular_act().data(), this->regular_act().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.regular_act");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->regular_act(), target);
  }

  // optional string sleep_condition = 11;
  if (has_sleep_condition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sleep_condition().data(), this->sleep_condition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sleep_condition(), target);
  }

  // optional string body_measure = 12;
  if (has_body_measure()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_measure().data(), this->body_measure().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.body_measure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->body_measure(), target);
  }

  // optional string run_scence = 13;
  if (has_run_scence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_scence().data(), this->run_scence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.run_scence");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->run_scence(), target);
  }

  // optional string eat_nutrition = 14;
  if (has_eat_nutrition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->eat_nutrition().data(), this->eat_nutrition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->eat_nutrition(), target);
  }

  // optional string psychology_health = 15;
  if (has_psychology_health()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->psychology_health().data(), this->psychology_health().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->psychology_health(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.QualityLifeSeasonNotifyAns)
  return target;
}

int QualityLifeSeasonNotifyAns::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string user_name = 2;
    if (has_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_name());
    }

    // optional int32 age = 3;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional int32 sex = 4;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 notify_type = 5;
    if (has_notify_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify_type());
    }

    // optional string date = 6;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional int32 order = 7;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order());
    }

    // optional int32 health_score = 8;
    if (has_health_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health_score());
    }

  }
  if (_has_bits_[8 / 32] & 32512) {
    // optional string expert_segestion = 9;
    if (has_expert_segestion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expert_segestion());
    }

    // optional string regular_act = 10;
    if (has_regular_act()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regular_act());
    }

    // optional string sleep_condition = 11;
    if (has_sleep_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sleep_condition());
    }

    // optional string body_measure = 12;
    if (has_body_measure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->body_measure());
    }

    // optional string run_scence = 13;
    if (has_run_scence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_scence());
    }

    // optional string eat_nutrition = 14;
    if (has_eat_nutrition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->eat_nutrition());
    }

    // optional string psychology_health = 15;
    if (has_psychology_health()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->psychology_health());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QualityLifeSeasonNotifyAns::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QualityLifeSeasonNotifyAns* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QualityLifeSeasonNotifyAns*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QualityLifeSeasonNotifyAns::MergeFrom(const QualityLifeSeasonNotifyAns& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_user_name()) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_notify_type()) {
      set_notify_type(from.notify_type());
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_order()) {
      set_order(from.order());
    }
    if (from.has_health_score()) {
      set_health_score(from.health_score());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_expert_segestion()) {
      set_has_expert_segestion();
      expert_segestion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expert_segestion_);
    }
    if (from.has_regular_act()) {
      set_has_regular_act();
      regular_act_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regular_act_);
    }
    if (from.has_sleep_condition()) {
      set_has_sleep_condition();
      sleep_condition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sleep_condition_);
    }
    if (from.has_body_measure()) {
      set_has_body_measure();
      body_measure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_measure_);
    }
    if (from.has_run_scence()) {
      set_has_run_scence();
      run_scence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_scence_);
    }
    if (from.has_eat_nutrition()) {
      set_has_eat_nutrition();
      eat_nutrition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eat_nutrition_);
    }
    if (from.has_psychology_health()) {
      set_has_psychology_health();
      psychology_health_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psychology_health_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QualityLifeSeasonNotifyAns::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QualityLifeSeasonNotifyAns::CopyFrom(const QualityLifeSeasonNotifyAns& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityLifeSeasonNotifyAns::IsInitialized() const {

  return true;
}

void QualityLifeSeasonNotifyAns::Swap(QualityLifeSeasonNotifyAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityLifeSeasonNotifyAns::InternalSwap(QualityLifeSeasonNotifyAns* other) {
  user_id_.Swap(&other->user_id_);
  user_name_.Swap(&other->user_name_);
  std::swap(age_, other->age_);
  std::swap(sex_, other->sex_);
  std::swap(notify_type_, other->notify_type_);
  date_.Swap(&other->date_);
  std::swap(order_, other->order_);
  std::swap(health_score_, other->health_score_);
  expert_segestion_.Swap(&other->expert_segestion_);
  regular_act_.Swap(&other->regular_act_);
  sleep_condition_.Swap(&other->sleep_condition_);
  body_measure_.Swap(&other->body_measure_);
  run_scence_.Swap(&other->run_scence_);
  eat_nutrition_.Swap(&other->eat_nutrition_);
  psychology_health_.Swap(&other->psychology_health_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QualityLifeSeasonNotifyAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QualityLifeSeasonNotifyAns_descriptor_;
  metadata.reflection = QualityLifeSeasonNotifyAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QualityLifeSeasonNotifyAns

// optional string user_id = 1;
 bool QualityLifeSeasonNotifyAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void QualityLifeSeasonNotifyAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void QualityLifeSeasonNotifyAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& QualityLifeSeasonNotifyAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.user_id)
}
 void QualityLifeSeasonNotifyAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.user_id)
}
 void QualityLifeSeasonNotifyAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.user_id)
}
 ::std::string* QualityLifeSeasonNotifyAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeSeasonNotifyAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.user_id)
}

// optional string user_name = 2;
 bool QualityLifeSeasonNotifyAns::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void QualityLifeSeasonNotifyAns::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void QualityLifeSeasonNotifyAns::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
 const ::std::string& QualityLifeSeasonNotifyAns::user_name() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.user_name)
}
 void QualityLifeSeasonNotifyAns::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.user_name)
}
 void QualityLifeSeasonNotifyAns::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.user_name)
}
 ::std::string* QualityLifeSeasonNotifyAns::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeSeasonNotifyAns::release_user_name() {
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.user_name)
}

// optional int32 age = 3;
 bool QualityLifeSeasonNotifyAns::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
 void QualityLifeSeasonNotifyAns::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
 void QualityLifeSeasonNotifyAns::clear_age() {
  age_ = 0;
  clear_has_age();
}
 ::google::protobuf::int32 QualityLifeSeasonNotifyAns::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.age)
  return age_;
}
 void QualityLifeSeasonNotifyAns::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.age)
}

// optional int32 sex = 4;
 bool QualityLifeSeasonNotifyAns::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
 void QualityLifeSeasonNotifyAns::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
 void QualityLifeSeasonNotifyAns::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
 ::google::protobuf::int32 QualityLifeSeasonNotifyAns::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.sex)
  return sex_;
}
 void QualityLifeSeasonNotifyAns::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.sex)
}

// optional int32 notify_type = 5;
 bool QualityLifeSeasonNotifyAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000010u;
}
 void QualityLifeSeasonNotifyAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
 void QualityLifeSeasonNotifyAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
 ::google::protobuf::int32 QualityLifeSeasonNotifyAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.notify_type)
  return notify_type_;
}
 void QualityLifeSeasonNotifyAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.notify_type)
}

// optional string date = 6;
 bool QualityLifeSeasonNotifyAns::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
 void QualityLifeSeasonNotifyAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
 void QualityLifeSeasonNotifyAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& QualityLifeSeasonNotifyAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.date)
}
 void QualityLifeSeasonNotifyAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.date)
}
 void QualityLifeSeasonNotifyAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.date)
}
 ::std::string* QualityLifeSeasonNotifyAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeSeasonNotifyAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.date)
}

// optional int32 order = 7;
 bool QualityLifeSeasonNotifyAns::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
 void QualityLifeSeasonNotifyAns::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
 void QualityLifeSeasonNotifyAns::clear_order() {
  order_ = 0;
  clear_has_order();
}
 ::google::protobuf::int32 QualityLifeSeasonNotifyAns::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.order)
  return order_;
}
 void QualityLifeSeasonNotifyAns::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.order)
}

// optional int32 health_score = 8;
 bool QualityLifeSeasonNotifyAns::has_health_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_health_score() {
  _has_bits_[0] |= 0x00000080u;
}
 void QualityLifeSeasonNotifyAns::clear_has_health_score() {
  _has_bits_[0] &= ~0x00000080u;
}
 void QualityLifeSeasonNotifyAns::clear_health_score() {
  health_score_ = 0;
  clear_has_health_score();
}
 ::google::protobuf::int32 QualityLifeSeasonNotifyAns::health_score() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.health_score)
  return health_score_;
}
 void QualityLifeSeasonNotifyAns::set_health_score(::google::protobuf::int32 value) {
  set_has_health_score();
  health_score_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.health_score)
}

// optional string expert_segestion = 9;
 bool QualityLifeSeasonNotifyAns::has_expert_segestion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_expert_segestion() {
  _has_bits_[0] |= 0x00000100u;
}
 void QualityLifeSeasonNotifyAns::clear_has_expert_segestion() {
  _has_bits_[0] &= ~0x00000100u;
}
 void QualityLifeSeasonNotifyAns::clear_expert_segestion() {
  expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expert_segestion();
}
 const ::std::string& QualityLifeSeasonNotifyAns::expert_segestion() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion)
  return expert_segestion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_expert_segestion(const ::std::string& value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion)
}
 void QualityLifeSeasonNotifyAns::set_expert_segestion(const char* value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion)
}
 void QualityLifeSeasonNotifyAns::set_expert_segestion(const char* value, size_t size) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion)
}
 ::std::string* QualityLifeSeasonNotifyAns::mutable_expert_segestion() {
  set_has_expert_segestion();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion)
  return expert_segestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeSeasonNotifyAns::release_expert_segestion() {
  clear_has_expert_segestion();
  return expert_segestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_allocated_expert_segestion(::std::string* expert_segestion) {
  if (expert_segestion != nullptr) {
    set_has_expert_segestion();
  } else {
    clear_has_expert_segestion();
  }
  expert_segestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expert_segestion);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion)
}

// optional string regular_act = 10;
 bool QualityLifeSeasonNotifyAns::has_regular_act() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_regular_act() {
  _has_bits_[0] |= 0x00000200u;
}
 void QualityLifeSeasonNotifyAns::clear_has_regular_act() {
  _has_bits_[0] &= ~0x00000200u;
}
 void QualityLifeSeasonNotifyAns::clear_regular_act() {
  regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regular_act();
}
 const ::std::string& QualityLifeSeasonNotifyAns::regular_act() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.regular_act)
  return regular_act_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_regular_act(const ::std::string& value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.regular_act)
}
 void QualityLifeSeasonNotifyAns::set_regular_act(const char* value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.regular_act)
}
 void QualityLifeSeasonNotifyAns::set_regular_act(const char* value, size_t size) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.regular_act)
}
 ::std::string* QualityLifeSeasonNotifyAns::mutable_regular_act() {
  set_has_regular_act();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.regular_act)
  return regular_act_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeSeasonNotifyAns::release_regular_act() {
  clear_has_regular_act();
  return regular_act_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_allocated_regular_act(::std::string* regular_act) {
  if (regular_act != nullptr) {
    set_has_regular_act();
  } else {
    clear_has_regular_act();
  }
  regular_act_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regular_act);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.regular_act)
}

// optional string sleep_condition = 11;
 bool QualityLifeSeasonNotifyAns::has_sleep_condition() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_sleep_condition() {
  _has_bits_[0] |= 0x00000400u;
}
 void QualityLifeSeasonNotifyAns::clear_has_sleep_condition() {
  _has_bits_[0] &= ~0x00000400u;
}
 void QualityLifeSeasonNotifyAns::clear_sleep_condition() {
  sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sleep_condition();
}
 const ::std::string& QualityLifeSeasonNotifyAns::sleep_condition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition)
  return sleep_condition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_sleep_condition(const ::std::string& value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition)
}
 void QualityLifeSeasonNotifyAns::set_sleep_condition(const char* value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition)
}
 void QualityLifeSeasonNotifyAns::set_sleep_condition(const char* value, size_t size) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition)
}
 ::std::string* QualityLifeSeasonNotifyAns::mutable_sleep_condition() {
  set_has_sleep_condition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition)
  return sleep_condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeSeasonNotifyAns::release_sleep_condition() {
  clear_has_sleep_condition();
  return sleep_condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_allocated_sleep_condition(::std::string* sleep_condition) {
  if (sleep_condition != nullptr) {
    set_has_sleep_condition();
  } else {
    clear_has_sleep_condition();
  }
  sleep_condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sleep_condition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition)
}

// optional string body_measure = 12;
 bool QualityLifeSeasonNotifyAns::has_body_measure() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_body_measure() {
  _has_bits_[0] |= 0x00000800u;
}
 void QualityLifeSeasonNotifyAns::clear_has_body_measure() {
  _has_bits_[0] &= ~0x00000800u;
}
 void QualityLifeSeasonNotifyAns::clear_body_measure() {
  body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_measure();
}
 const ::std::string& QualityLifeSeasonNotifyAns::body_measure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.body_measure)
  return body_measure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_body_measure(const ::std::string& value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.body_measure)
}
 void QualityLifeSeasonNotifyAns::set_body_measure(const char* value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.body_measure)
}
 void QualityLifeSeasonNotifyAns::set_body_measure(const char* value, size_t size) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.body_measure)
}
 ::std::string* QualityLifeSeasonNotifyAns::mutable_body_measure() {
  set_has_body_measure();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.body_measure)
  return body_measure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeSeasonNotifyAns::release_body_measure() {
  clear_has_body_measure();
  return body_measure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_allocated_body_measure(::std::string* body_measure) {
  if (body_measure != nullptr) {
    set_has_body_measure();
  } else {
    clear_has_body_measure();
  }
  body_measure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_measure);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.body_measure)
}

// optional string run_scence = 13;
 bool QualityLifeSeasonNotifyAns::has_run_scence() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_run_scence() {
  _has_bits_[0] |= 0x00001000u;
}
 void QualityLifeSeasonNotifyAns::clear_has_run_scence() {
  _has_bits_[0] &= ~0x00001000u;
}
 void QualityLifeSeasonNotifyAns::clear_run_scence() {
  run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_run_scence();
}
 const ::std::string& QualityLifeSeasonNotifyAns::run_scence() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.run_scence)
  return run_scence_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_run_scence(const ::std::string& value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.run_scence)
}
 void QualityLifeSeasonNotifyAns::set_run_scence(const char* value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.run_scence)
}
 void QualityLifeSeasonNotifyAns::set_run_scence(const char* value, size_t size) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.run_scence)
}
 ::std::string* QualityLifeSeasonNotifyAns::mutable_run_scence() {
  set_has_run_scence();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.run_scence)
  return run_scence_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeSeasonNotifyAns::release_run_scence() {
  clear_has_run_scence();
  return run_scence_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_allocated_run_scence(::std::string* run_scence) {
  if (run_scence != nullptr) {
    set_has_run_scence();
  } else {
    clear_has_run_scence();
  }
  run_scence_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), run_scence);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.run_scence)
}

// optional string eat_nutrition = 14;
 bool QualityLifeSeasonNotifyAns::has_eat_nutrition() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_eat_nutrition() {
  _has_bits_[0] |= 0x00002000u;
}
 void QualityLifeSeasonNotifyAns::clear_has_eat_nutrition() {
  _has_bits_[0] &= ~0x00002000u;
}
 void QualityLifeSeasonNotifyAns::clear_eat_nutrition() {
  eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eat_nutrition();
}
 const ::std::string& QualityLifeSeasonNotifyAns::eat_nutrition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition)
  return eat_nutrition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_eat_nutrition(const ::std::string& value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition)
}
 void QualityLifeSeasonNotifyAns::set_eat_nutrition(const char* value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition)
}
 void QualityLifeSeasonNotifyAns::set_eat_nutrition(const char* value, size_t size) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition)
}
 ::std::string* QualityLifeSeasonNotifyAns::mutable_eat_nutrition() {
  set_has_eat_nutrition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition)
  return eat_nutrition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeSeasonNotifyAns::release_eat_nutrition() {
  clear_has_eat_nutrition();
  return eat_nutrition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_allocated_eat_nutrition(::std::string* eat_nutrition) {
  if (eat_nutrition != nullptr) {
    set_has_eat_nutrition();
  } else {
    clear_has_eat_nutrition();
  }
  eat_nutrition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eat_nutrition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition)
}

// optional string psychology_health = 15;
 bool QualityLifeSeasonNotifyAns::has_psychology_health() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
 void QualityLifeSeasonNotifyAns::set_has_psychology_health() {
  _has_bits_[0] |= 0x00004000u;
}
 void QualityLifeSeasonNotifyAns::clear_has_psychology_health() {
  _has_bits_[0] &= ~0x00004000u;
}
 void QualityLifeSeasonNotifyAns::clear_psychology_health() {
  psychology_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psychology_health();
}
 const ::std::string& QualityLifeSeasonNotifyAns::psychology_health() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health)
  return psychology_health_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_psychology_health(const ::std::string& value) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health)
}
 void QualityLifeSeasonNotifyAns::set_psychology_health(const char* value) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health)
}
 void QualityLifeSeasonNotifyAns::set_psychology_health(const char* value, size_t size) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health)
}
 ::std::string* QualityLifeSeasonNotifyAns::mutable_psychology_health() {
  set_has_psychology_health();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health)
  return psychology_health_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeSeasonNotifyAns::release_psychology_health() {
  clear_has_psychology_health();
  return psychology_health_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeSeasonNotifyAns::set_allocated_psychology_health(::std::string* psychology_health) {
  if (psychology_health != nullptr) {
    set_has_psychology_health();
  } else {
    clear_has_psychology_health();
  }
  psychology_health_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psychology_health);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int QualityLifeHalfYearNotifyAns::kUserIdFieldNumber;
const int QualityLifeHalfYearNotifyAns::kUserNameFieldNumber;
const int QualityLifeHalfYearNotifyAns::kAgeFieldNumber;
const int QualityLifeHalfYearNotifyAns::kSexFieldNumber;
const int QualityLifeHalfYearNotifyAns::kNotifyTypeFieldNumber;
const int QualityLifeHalfYearNotifyAns::kDateFieldNumber;
const int QualityLifeHalfYearNotifyAns::kOrderFieldNumber;
const int QualityLifeHalfYearNotifyAns::kHealthScoreFieldNumber;
const int QualityLifeHalfYearNotifyAns::kExpertSegestionFieldNumber;
const int QualityLifeHalfYearNotifyAns::kRegularActFieldNumber;
const int QualityLifeHalfYearNotifyAns::kSleepConditionFieldNumber;
const int QualityLifeHalfYearNotifyAns::kBodyMeasureFieldNumber;
const int QualityLifeHalfYearNotifyAns::kRunScenceFieldNumber;
const int QualityLifeHalfYearNotifyAns::kEatNutritionFieldNumber;
const int QualityLifeHalfYearNotifyAns::kPsychologyHealthFieldNumber;
#endif  // !_MSC_VER

QualityLifeHalfYearNotifyAns::QualityLifeHalfYearNotifyAns()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.QualityLifeHalfYearNotifyAns)
}

void QualityLifeHalfYearNotifyAns::InitAsDefaultInstance() {
}

QualityLifeHalfYearNotifyAns::QualityLifeHalfYearNotifyAns(const QualityLifeHalfYearNotifyAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.QualityLifeHalfYearNotifyAns)
}

void QualityLifeHalfYearNotifyAns::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_ = 0;
  sex_ = 0;
  notify_type_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_ = 0;
  health_score_ = 0;
  expert_segestion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regular_act_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_condition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_measure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_scence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eat_nutrition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psychology_health_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QualityLifeHalfYearNotifyAns::~QualityLifeHalfYearNotifyAns() {
  // @@protoc_insertion_point(destructor:YfqProtocol.QualityLifeHalfYearNotifyAns)
  SharedDtor();
}

void QualityLifeHalfYearNotifyAns::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expert_segestion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regular_act_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_condition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_measure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_scence_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eat_nutrition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psychology_health_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QualityLifeHalfYearNotifyAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QualityLifeHalfYearNotifyAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QualityLifeHalfYearNotifyAns_descriptor_;
}

const QualityLifeHalfYearNotifyAns& QualityLifeHalfYearNotifyAns::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

QualityLifeHalfYearNotifyAns* QualityLifeHalfYearNotifyAns::default_instance_ = nullptr;

QualityLifeHalfYearNotifyAns* QualityLifeHalfYearNotifyAns::New(::google::protobuf::Arena* arena) const {
  QualityLifeHalfYearNotifyAns* n = new QualityLifeHalfYearNotifyAns;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void QualityLifeHalfYearNotifyAns::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QualityLifeHalfYearNotifyAns*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(age_, sex_);
    ZR_(notify_type_, order_);
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_user_name()) {
      user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    health_score_ = 0;
  }
  if (_has_bits_[8 / 32] & 32512) {
    if (has_expert_segestion()) {
      expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_regular_act()) {
      regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sleep_condition()) {
      sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_body_measure()) {
      body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_run_scence()) {
      run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_eat_nutrition()) {
      eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_psychology_health()) {
      psychology_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QualityLifeHalfYearNotifyAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.QualityLifeHalfYearNotifyAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeHalfYearNotifyAns.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_name;
        break;
      }

      // optional string user_name = 2;
      case 2: {
        if (tag == 18) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeHalfYearNotifyAns.user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_age;
        break;
      }

      // optional int32 age = 3;
      case 3: {
        if (tag == 24) {
         parse_age:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
          set_has_age();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sex;
        break;
      }

      // optional int32 sex = 4;
      case 4: {
        if (tag == 32) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_notify_type;
        break;
      }

      // optional int32 notify_type = 5;
      case 5: {
        if (tag == 40) {
         parse_notify_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_type_)));
          set_has_notify_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_date;
        break;
      }

      // optional string date = 6;
      case 6: {
        if (tag == 50) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeHalfYearNotifyAns.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_order;
        break;
      }

      // optional int32 order = 7;
      case 7: {
        if (tag == 56) {
         parse_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
          set_has_order();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_health_score;
        break;
      }

      // optional int32 health_score = 8;
      case 8: {
        if (tag == 64) {
         parse_health_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_score_)));
          set_has_health_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_expert_segestion;
        break;
      }

      // optional string expert_segestion = 9;
      case 9: {
        if (tag == 74) {
         parse_expert_segestion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expert_segestion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->expert_segestion().data(), this->expert_segestion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_regular_act;
        break;
      }

      // optional string regular_act = 10;
      case 10: {
        if (tag == 82) {
         parse_regular_act:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regular_act()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regular_act().data(), this->regular_act().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_sleep_condition;
        break;
      }

      // optional string sleep_condition = 11;
      case 11: {
        if (tag == 90) {
         parse_sleep_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sleep_condition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sleep_condition().data(), this->sleep_condition().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_body_measure;
        break;
      }

      // optional string body_measure = 12;
      case 12: {
        if (tag == 98) {
         parse_body_measure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body_measure()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body_measure().data(), this->body_measure().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_run_scence;
        break;
      }

      // optional string run_scence = 13;
      case 13: {
        if (tag == 106) {
         parse_run_scence:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_scence()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_scence().data(), this->run_scence().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_eat_nutrition;
        break;
      }

      // optional string eat_nutrition = 14;
      case 14: {
        if (tag == 114) {
         parse_eat_nutrition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_eat_nutrition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->eat_nutrition().data(), this->eat_nutrition().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_psychology_health;
        break;
      }

      // optional string psychology_health = 15;
      case 15: {
        if (tag == 122) {
         parse_psychology_health:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psychology_health()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->psychology_health().data(), this->psychology_health().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.QualityLifeHalfYearNotifyAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.QualityLifeHalfYearNotifyAns)
  return false;
#undef DO_
}

void QualityLifeHalfYearNotifyAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.QualityLifeHalfYearNotifyAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // optional int32 age = 3;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->age(), output);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sex(), output);
  }

  // optional int32 notify_type = 5;
  if (has_notify_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->notify_type(), output);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->date(), output);
  }

  // optional int32 order = 7;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->order(), output);
  }

  // optional int32 health_score = 8;
  if (has_health_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->health_score(), output);
  }

  // optional string expert_segestion = 9;
  if (has_expert_segestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expert_segestion().data(), this->expert_segestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->expert_segestion(), output);
  }

  // optional string regular_act = 10;
  if (has_regular_act()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regular_act().data(), this->regular_act().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->regular_act(), output);
  }

  // optional string sleep_condition = 11;
  if (has_sleep_condition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sleep_condition().data(), this->sleep_condition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sleep_condition(), output);
  }

  // optional string body_measure = 12;
  if (has_body_measure()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_measure().data(), this->body_measure().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->body_measure(), output);
  }

  // optional string run_scence = 13;
  if (has_run_scence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_scence().data(), this->run_scence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->run_scence(), output);
  }

  // optional string eat_nutrition = 14;
  if (has_eat_nutrition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->eat_nutrition().data(), this->eat_nutrition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->eat_nutrition(), output);
  }

  // optional string psychology_health = 15;
  if (has_psychology_health()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->psychology_health().data(), this->psychology_health().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->psychology_health(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.QualityLifeHalfYearNotifyAns)
}

::google::protobuf::uint8* QualityLifeHalfYearNotifyAns::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.QualityLifeHalfYearNotifyAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // optional int32 age = 3;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->age(), target);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sex(), target);
  }

  // optional int32 notify_type = 5;
  if (has_notify_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->notify_type(), target);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->date(), target);
  }

  // optional int32 order = 7;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->order(), target);
  }

  // optional int32 health_score = 8;
  if (has_health_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->health_score(), target);
  }

  // optional string expert_segestion = 9;
  if (has_expert_segestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expert_segestion().data(), this->expert_segestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->expert_segestion(), target);
  }

  // optional string regular_act = 10;
  if (has_regular_act()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regular_act().data(), this->regular_act().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->regular_act(), target);
  }

  // optional string sleep_condition = 11;
  if (has_sleep_condition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sleep_condition().data(), this->sleep_condition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sleep_condition(), target);
  }

  // optional string body_measure = 12;
  if (has_body_measure()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_measure().data(), this->body_measure().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->body_measure(), target);
  }

  // optional string run_scence = 13;
  if (has_run_scence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_scence().data(), this->run_scence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->run_scence(), target);
  }

  // optional string eat_nutrition = 14;
  if (has_eat_nutrition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->eat_nutrition().data(), this->eat_nutrition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->eat_nutrition(), target);
  }

  // optional string psychology_health = 15;
  if (has_psychology_health()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->psychology_health().data(), this->psychology_health().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->psychology_health(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.QualityLifeHalfYearNotifyAns)
  return target;
}

int QualityLifeHalfYearNotifyAns::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string user_name = 2;
    if (has_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_name());
    }

    // optional int32 age = 3;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional int32 sex = 4;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 notify_type = 5;
    if (has_notify_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify_type());
    }

    // optional string date = 6;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional int32 order = 7;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order());
    }

    // optional int32 health_score = 8;
    if (has_health_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health_score());
    }

  }
  if (_has_bits_[8 / 32] & 32512) {
    // optional string expert_segestion = 9;
    if (has_expert_segestion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expert_segestion());
    }

    // optional string regular_act = 10;
    if (has_regular_act()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regular_act());
    }

    // optional string sleep_condition = 11;
    if (has_sleep_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sleep_condition());
    }

    // optional string body_measure = 12;
    if (has_body_measure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->body_measure());
    }

    // optional string run_scence = 13;
    if (has_run_scence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_scence());
    }

    // optional string eat_nutrition = 14;
    if (has_eat_nutrition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->eat_nutrition());
    }

    // optional string psychology_health = 15;
    if (has_psychology_health()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->psychology_health());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QualityLifeHalfYearNotifyAns::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QualityLifeHalfYearNotifyAns* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QualityLifeHalfYearNotifyAns*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QualityLifeHalfYearNotifyAns::MergeFrom(const QualityLifeHalfYearNotifyAns& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_user_name()) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_notify_type()) {
      set_notify_type(from.notify_type());
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_order()) {
      set_order(from.order());
    }
    if (from.has_health_score()) {
      set_health_score(from.health_score());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_expert_segestion()) {
      set_has_expert_segestion();
      expert_segestion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expert_segestion_);
    }
    if (from.has_regular_act()) {
      set_has_regular_act();
      regular_act_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regular_act_);
    }
    if (from.has_sleep_condition()) {
      set_has_sleep_condition();
      sleep_condition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sleep_condition_);
    }
    if (from.has_body_measure()) {
      set_has_body_measure();
      body_measure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_measure_);
    }
    if (from.has_run_scence()) {
      set_has_run_scence();
      run_scence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_scence_);
    }
    if (from.has_eat_nutrition()) {
      set_has_eat_nutrition();
      eat_nutrition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eat_nutrition_);
    }
    if (from.has_psychology_health()) {
      set_has_psychology_health();
      psychology_health_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psychology_health_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QualityLifeHalfYearNotifyAns::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QualityLifeHalfYearNotifyAns::CopyFrom(const QualityLifeHalfYearNotifyAns& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityLifeHalfYearNotifyAns::IsInitialized() const {

  return true;
}

void QualityLifeHalfYearNotifyAns::Swap(QualityLifeHalfYearNotifyAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityLifeHalfYearNotifyAns::InternalSwap(QualityLifeHalfYearNotifyAns* other) {
  user_id_.Swap(&other->user_id_);
  user_name_.Swap(&other->user_name_);
  std::swap(age_, other->age_);
  std::swap(sex_, other->sex_);
  std::swap(notify_type_, other->notify_type_);
  date_.Swap(&other->date_);
  std::swap(order_, other->order_);
  std::swap(health_score_, other->health_score_);
  expert_segestion_.Swap(&other->expert_segestion_);
  regular_act_.Swap(&other->regular_act_);
  sleep_condition_.Swap(&other->sleep_condition_);
  body_measure_.Swap(&other->body_measure_);
  run_scence_.Swap(&other->run_scence_);
  eat_nutrition_.Swap(&other->eat_nutrition_);
  psychology_health_.Swap(&other->psychology_health_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QualityLifeHalfYearNotifyAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QualityLifeHalfYearNotifyAns_descriptor_;
  metadata.reflection = QualityLifeHalfYearNotifyAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QualityLifeHalfYearNotifyAns

// optional string user_id = 1;
 bool QualityLifeHalfYearNotifyAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void QualityLifeHalfYearNotifyAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& QualityLifeHalfYearNotifyAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.user_id)
}
 void QualityLifeHalfYearNotifyAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.user_id)
}
 void QualityLifeHalfYearNotifyAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.user_id)
}
 ::std::string* QualityLifeHalfYearNotifyAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeHalfYearNotifyAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.user_id)
}

// optional string user_name = 2;
 bool QualityLifeHalfYearNotifyAns::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void QualityLifeHalfYearNotifyAns::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
 const ::std::string& QualityLifeHalfYearNotifyAns::user_name() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.user_name)
}
 void QualityLifeHalfYearNotifyAns::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.user_name)
}
 void QualityLifeHalfYearNotifyAns::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.user_name)
}
 ::std::string* QualityLifeHalfYearNotifyAns::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeHalfYearNotifyAns::release_user_name() {
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.user_name)
}

// optional int32 age = 3;
 bool QualityLifeHalfYearNotifyAns::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
 void QualityLifeHalfYearNotifyAns::clear_age() {
  age_ = 0;
  clear_has_age();
}
 ::google::protobuf::int32 QualityLifeHalfYearNotifyAns::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.age)
  return age_;
}
 void QualityLifeHalfYearNotifyAns::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.age)
}

// optional int32 sex = 4;
 bool QualityLifeHalfYearNotifyAns::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
 void QualityLifeHalfYearNotifyAns::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
 ::google::protobuf::int32 QualityLifeHalfYearNotifyAns::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.sex)
  return sex_;
}
 void QualityLifeHalfYearNotifyAns::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.sex)
}

// optional int32 notify_type = 5;
 bool QualityLifeHalfYearNotifyAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000010u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
 void QualityLifeHalfYearNotifyAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
 ::google::protobuf::int32 QualityLifeHalfYearNotifyAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.notify_type)
  return notify_type_;
}
 void QualityLifeHalfYearNotifyAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.notify_type)
}

// optional string date = 6;
 bool QualityLifeHalfYearNotifyAns::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
 void QualityLifeHalfYearNotifyAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& QualityLifeHalfYearNotifyAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.date)
}
 void QualityLifeHalfYearNotifyAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.date)
}
 void QualityLifeHalfYearNotifyAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.date)
}
 ::std::string* QualityLifeHalfYearNotifyAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeHalfYearNotifyAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.date)
}

// optional int32 order = 7;
 bool QualityLifeHalfYearNotifyAns::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
 void QualityLifeHalfYearNotifyAns::clear_order() {
  order_ = 0;
  clear_has_order();
}
 ::google::protobuf::int32 QualityLifeHalfYearNotifyAns::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.order)
  return order_;
}
 void QualityLifeHalfYearNotifyAns::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.order)
}

// optional int32 health_score = 8;
 bool QualityLifeHalfYearNotifyAns::has_health_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_health_score() {
  _has_bits_[0] |= 0x00000080u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_health_score() {
  _has_bits_[0] &= ~0x00000080u;
}
 void QualityLifeHalfYearNotifyAns::clear_health_score() {
  health_score_ = 0;
  clear_has_health_score();
}
 ::google::protobuf::int32 QualityLifeHalfYearNotifyAns::health_score() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.health_score)
  return health_score_;
}
 void QualityLifeHalfYearNotifyAns::set_health_score(::google::protobuf::int32 value) {
  set_has_health_score();
  health_score_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.health_score)
}

// optional string expert_segestion = 9;
 bool QualityLifeHalfYearNotifyAns::has_expert_segestion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_expert_segestion() {
  _has_bits_[0] |= 0x00000100u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_expert_segestion() {
  _has_bits_[0] &= ~0x00000100u;
}
 void QualityLifeHalfYearNotifyAns::clear_expert_segestion() {
  expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expert_segestion();
}
 const ::std::string& QualityLifeHalfYearNotifyAns::expert_segestion() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion)
  return expert_segestion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_expert_segestion(const ::std::string& value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion)
}
 void QualityLifeHalfYearNotifyAns::set_expert_segestion(const char* value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion)
}
 void QualityLifeHalfYearNotifyAns::set_expert_segestion(const char* value, size_t size) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion)
}
 ::std::string* QualityLifeHalfYearNotifyAns::mutable_expert_segestion() {
  set_has_expert_segestion();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion)
  return expert_segestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeHalfYearNotifyAns::release_expert_segestion() {
  clear_has_expert_segestion();
  return expert_segestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_allocated_expert_segestion(::std::string* expert_segestion) {
  if (expert_segestion != nullptr) {
    set_has_expert_segestion();
  } else {
    clear_has_expert_segestion();
  }
  expert_segestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expert_segestion);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion)
}

// optional string regular_act = 10;
 bool QualityLifeHalfYearNotifyAns::has_regular_act() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_regular_act() {
  _has_bits_[0] |= 0x00000200u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_regular_act() {
  _has_bits_[0] &= ~0x00000200u;
}
 void QualityLifeHalfYearNotifyAns::clear_regular_act() {
  regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regular_act();
}
 const ::std::string& QualityLifeHalfYearNotifyAns::regular_act() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act)
  return regular_act_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_regular_act(const ::std::string& value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act)
}
 void QualityLifeHalfYearNotifyAns::set_regular_act(const char* value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act)
}
 void QualityLifeHalfYearNotifyAns::set_regular_act(const char* value, size_t size) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act)
}
 ::std::string* QualityLifeHalfYearNotifyAns::mutable_regular_act() {
  set_has_regular_act();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act)
  return regular_act_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeHalfYearNotifyAns::release_regular_act() {
  clear_has_regular_act();
  return regular_act_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_allocated_regular_act(::std::string* regular_act) {
  if (regular_act != nullptr) {
    set_has_regular_act();
  } else {
    clear_has_regular_act();
  }
  regular_act_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regular_act);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act)
}

// optional string sleep_condition = 11;
 bool QualityLifeHalfYearNotifyAns::has_sleep_condition() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_sleep_condition() {
  _has_bits_[0] |= 0x00000400u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_sleep_condition() {
  _has_bits_[0] &= ~0x00000400u;
}
 void QualityLifeHalfYearNotifyAns::clear_sleep_condition() {
  sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sleep_condition();
}
 const ::std::string& QualityLifeHalfYearNotifyAns::sleep_condition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition)
  return sleep_condition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_sleep_condition(const ::std::string& value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition)
}
 void QualityLifeHalfYearNotifyAns::set_sleep_condition(const char* value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition)
}
 void QualityLifeHalfYearNotifyAns::set_sleep_condition(const char* value, size_t size) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition)
}
 ::std::string* QualityLifeHalfYearNotifyAns::mutable_sleep_condition() {
  set_has_sleep_condition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition)
  return sleep_condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeHalfYearNotifyAns::release_sleep_condition() {
  clear_has_sleep_condition();
  return sleep_condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_allocated_sleep_condition(::std::string* sleep_condition) {
  if (sleep_condition != nullptr) {
    set_has_sleep_condition();
  } else {
    clear_has_sleep_condition();
  }
  sleep_condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sleep_condition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition)
}

// optional string body_measure = 12;
 bool QualityLifeHalfYearNotifyAns::has_body_measure() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_body_measure() {
  _has_bits_[0] |= 0x00000800u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_body_measure() {
  _has_bits_[0] &= ~0x00000800u;
}
 void QualityLifeHalfYearNotifyAns::clear_body_measure() {
  body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_measure();
}
 const ::std::string& QualityLifeHalfYearNotifyAns::body_measure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure)
  return body_measure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_body_measure(const ::std::string& value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure)
}
 void QualityLifeHalfYearNotifyAns::set_body_measure(const char* value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure)
}
 void QualityLifeHalfYearNotifyAns::set_body_measure(const char* value, size_t size) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure)
}
 ::std::string* QualityLifeHalfYearNotifyAns::mutable_body_measure() {
  set_has_body_measure();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure)
  return body_measure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeHalfYearNotifyAns::release_body_measure() {
  clear_has_body_measure();
  return body_measure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_allocated_body_measure(::std::string* body_measure) {
  if (body_measure != nullptr) {
    set_has_body_measure();
  } else {
    clear_has_body_measure();
  }
  body_measure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_measure);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure)
}

// optional string run_scence = 13;
 bool QualityLifeHalfYearNotifyAns::has_run_scence() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_run_scence() {
  _has_bits_[0] |= 0x00001000u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_run_scence() {
  _has_bits_[0] &= ~0x00001000u;
}
 void QualityLifeHalfYearNotifyAns::clear_run_scence() {
  run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_run_scence();
}
 const ::std::string& QualityLifeHalfYearNotifyAns::run_scence() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence)
  return run_scence_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_run_scence(const ::std::string& value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence)
}
 void QualityLifeHalfYearNotifyAns::set_run_scence(const char* value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence)
}
 void QualityLifeHalfYearNotifyAns::set_run_scence(const char* value, size_t size) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence)
}
 ::std::string* QualityLifeHalfYearNotifyAns::mutable_run_scence() {
  set_has_run_scence();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence)
  return run_scence_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeHalfYearNotifyAns::release_run_scence() {
  clear_has_run_scence();
  return run_scence_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_allocated_run_scence(::std::string* run_scence) {
  if (run_scence != nullptr) {
    set_has_run_scence();
  } else {
    clear_has_run_scence();
  }
  run_scence_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), run_scence);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence)
}

// optional string eat_nutrition = 14;
 bool QualityLifeHalfYearNotifyAns::has_eat_nutrition() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_eat_nutrition() {
  _has_bits_[0] |= 0x00002000u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_eat_nutrition() {
  _has_bits_[0] &= ~0x00002000u;
}
 void QualityLifeHalfYearNotifyAns::clear_eat_nutrition() {
  eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eat_nutrition();
}
 const ::std::string& QualityLifeHalfYearNotifyAns::eat_nutrition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition)
  return eat_nutrition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_eat_nutrition(const ::std::string& value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition)
}
 void QualityLifeHalfYearNotifyAns::set_eat_nutrition(const char* value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition)
}
 void QualityLifeHalfYearNotifyAns::set_eat_nutrition(const char* value, size_t size) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition)
}
 ::std::string* QualityLifeHalfYearNotifyAns::mutable_eat_nutrition() {
  set_has_eat_nutrition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition)
  return eat_nutrition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeHalfYearNotifyAns::release_eat_nutrition() {
  clear_has_eat_nutrition();
  return eat_nutrition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_allocated_eat_nutrition(::std::string* eat_nutrition) {
  if (eat_nutrition != nullptr) {
    set_has_eat_nutrition();
  } else {
    clear_has_eat_nutrition();
  }
  eat_nutrition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eat_nutrition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition)
}

// optional string psychology_health = 15;
 bool QualityLifeHalfYearNotifyAns::has_psychology_health() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
 void QualityLifeHalfYearNotifyAns::set_has_psychology_health() {
  _has_bits_[0] |= 0x00004000u;
}
 void QualityLifeHalfYearNotifyAns::clear_has_psychology_health() {
  _has_bits_[0] &= ~0x00004000u;
}
 void QualityLifeHalfYearNotifyAns::clear_psychology_health() {
  psychology_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psychology_health();
}
 const ::std::string& QualityLifeHalfYearNotifyAns::psychology_health() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health)
  return psychology_health_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_psychology_health(const ::std::string& value) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health)
}
 void QualityLifeHalfYearNotifyAns::set_psychology_health(const char* value) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health)
}
 void QualityLifeHalfYearNotifyAns::set_psychology_health(const char* value, size_t size) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health)
}
 ::std::string* QualityLifeHalfYearNotifyAns::mutable_psychology_health() {
  set_has_psychology_health();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health)
  return psychology_health_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeHalfYearNotifyAns::release_psychology_health() {
  clear_has_psychology_health();
  return psychology_health_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeHalfYearNotifyAns::set_allocated_psychology_health(::std::string* psychology_health) {
  if (psychology_health != nullptr) {
    set_has_psychology_health();
  } else {
    clear_has_psychology_health();
  }
  psychology_health_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psychology_health);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int QualityLifeYearNotifyAns::kUserIdFieldNumber;
const int QualityLifeYearNotifyAns::kUserNameFieldNumber;
const int QualityLifeYearNotifyAns::kAgeFieldNumber;
const int QualityLifeYearNotifyAns::kSexFieldNumber;
const int QualityLifeYearNotifyAns::kNotifyTypeFieldNumber;
const int QualityLifeYearNotifyAns::kDateFieldNumber;
const int QualityLifeYearNotifyAns::kOrderFieldNumber;
const int QualityLifeYearNotifyAns::kHealthScoreFieldNumber;
const int QualityLifeYearNotifyAns::kExpertSegestionFieldNumber;
const int QualityLifeYearNotifyAns::kRegularActFieldNumber;
const int QualityLifeYearNotifyAns::kSleepConditionFieldNumber;
const int QualityLifeYearNotifyAns::kBodyMeasureFieldNumber;
const int QualityLifeYearNotifyAns::kRunScenceFieldNumber;
const int QualityLifeYearNotifyAns::kEatNutritionFieldNumber;
const int QualityLifeYearNotifyAns::kPsychologyHealthFieldNumber;
#endif  // !_MSC_VER

QualityLifeYearNotifyAns::QualityLifeYearNotifyAns()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.QualityLifeYearNotifyAns)
}

void QualityLifeYearNotifyAns::InitAsDefaultInstance() {
}

QualityLifeYearNotifyAns::QualityLifeYearNotifyAns(const QualityLifeYearNotifyAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.QualityLifeYearNotifyAns)
}

void QualityLifeYearNotifyAns::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  age_ = 0;
  sex_ = 0;
  notify_type_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_ = 0;
  health_score_ = 0;
  expert_segestion_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regular_act_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_condition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_measure_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_scence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eat_nutrition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psychology_health_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QualityLifeYearNotifyAns::~QualityLifeYearNotifyAns() {
  // @@protoc_insertion_point(destructor:YfqProtocol.QualityLifeYearNotifyAns)
  SharedDtor();
}

void QualityLifeYearNotifyAns::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expert_segestion_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regular_act_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sleep_condition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_measure_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  run_scence_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eat_nutrition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  psychology_health_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QualityLifeYearNotifyAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QualityLifeYearNotifyAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QualityLifeYearNotifyAns_descriptor_;
}

const QualityLifeYearNotifyAns& QualityLifeYearNotifyAns::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

QualityLifeYearNotifyAns* QualityLifeYearNotifyAns::default_instance_ = nullptr;

QualityLifeYearNotifyAns* QualityLifeYearNotifyAns::New(::google::protobuf::Arena* arena) const {
  QualityLifeYearNotifyAns* n = new QualityLifeYearNotifyAns;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void QualityLifeYearNotifyAns::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QualityLifeYearNotifyAns*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(age_, sex_);
    ZR_(notify_type_, order_);
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_user_name()) {
      user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    health_score_ = 0;
  }
  if (_has_bits_[8 / 32] & 32512) {
    if (has_expert_segestion()) {
      expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_regular_act()) {
      regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_sleep_condition()) {
      sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_body_measure()) {
      body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_run_scence()) {
      run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_eat_nutrition()) {
      eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_psychology_health()) {
      psychology_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QualityLifeYearNotifyAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.QualityLifeYearNotifyAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeYearNotifyAns.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_name;
        break;
      }

      // optional string user_name = 2;
      case 2: {
        if (tag == 18) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeYearNotifyAns.user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_age;
        break;
      }

      // optional int32 age = 3;
      case 3: {
        if (tag == 24) {
         parse_age:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
          set_has_age();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sex;
        break;
      }

      // optional int32 sex = 4;
      case 4: {
        if (tag == 32) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_notify_type;
        break;
      }

      // optional int32 notify_type = 5;
      case 5: {
        if (tag == 40) {
         parse_notify_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_type_)));
          set_has_notify_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_date;
        break;
      }

      // optional string date = 6;
      case 6: {
        if (tag == 50) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeYearNotifyAns.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_order;
        break;
      }

      // optional int32 order = 7;
      case 7: {
        if (tag == 56) {
         parse_order:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_)));
          set_has_order();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_health_score;
        break;
      }

      // optional int32 health_score = 8;
      case 8: {
        if (tag == 64) {
         parse_health_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_score_)));
          set_has_health_score();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_expert_segestion;
        break;
      }

      // optional string expert_segestion = 9;
      case 9: {
        if (tag == 74) {
         parse_expert_segestion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_expert_segestion()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->expert_segestion().data(), this->expert_segestion().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeYearNotifyAns.expert_segestion");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_regular_act;
        break;
      }

      // optional string regular_act = 10;
      case 10: {
        if (tag == 82) {
         parse_regular_act:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regular_act()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regular_act().data(), this->regular_act().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeYearNotifyAns.regular_act");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_sleep_condition;
        break;
      }

      // optional string sleep_condition = 11;
      case 11: {
        if (tag == 90) {
         parse_sleep_condition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sleep_condition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sleep_condition().data(), this->sleep_condition().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeYearNotifyAns.sleep_condition");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_body_measure;
        break;
      }

      // optional string body_measure = 12;
      case 12: {
        if (tag == 98) {
         parse_body_measure:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body_measure()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->body_measure().data(), this->body_measure().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeYearNotifyAns.body_measure");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_run_scence;
        break;
      }

      // optional string run_scence = 13;
      case 13: {
        if (tag == 106) {
         parse_run_scence:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_run_scence()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->run_scence().data(), this->run_scence().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeYearNotifyAns.run_scence");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_eat_nutrition;
        break;
      }

      // optional string eat_nutrition = 14;
      case 14: {
        if (tag == 114) {
         parse_eat_nutrition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_eat_nutrition()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->eat_nutrition().data(), this->eat_nutrition().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_psychology_health;
        break;
      }

      // optional string psychology_health = 15;
      case 15: {
        if (tag == 122) {
         parse_psychology_health:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_psychology_health()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->psychology_health().data(), this->psychology_health().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeYearNotifyAns.psychology_health");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.QualityLifeYearNotifyAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.QualityLifeYearNotifyAns)
  return false;
#undef DO_
}

void QualityLifeYearNotifyAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.QualityLifeYearNotifyAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // optional int32 age = 3;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->age(), output);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sex(), output);
  }

  // optional int32 notify_type = 5;
  if (has_notify_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->notify_type(), output);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->date(), output);
  }

  // optional int32 order = 7;
  if (has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->order(), output);
  }

  // optional int32 health_score = 8;
  if (has_health_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->health_score(), output);
  }

  // optional string expert_segestion = 9;
  if (has_expert_segestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expert_segestion().data(), this->expert_segestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.expert_segestion");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->expert_segestion(), output);
  }

  // optional string regular_act = 10;
  if (has_regular_act()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regular_act().data(), this->regular_act().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.regular_act");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->regular_act(), output);
  }

  // optional string sleep_condition = 11;
  if (has_sleep_condition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sleep_condition().data(), this->sleep_condition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.sleep_condition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->sleep_condition(), output);
  }

  // optional string body_measure = 12;
  if (has_body_measure()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_measure().data(), this->body_measure().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.body_measure");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->body_measure(), output);
  }

  // optional string run_scence = 13;
  if (has_run_scence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_scence().data(), this->run_scence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.run_scence");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->run_scence(), output);
  }

  // optional string eat_nutrition = 14;
  if (has_eat_nutrition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->eat_nutrition().data(), this->eat_nutrition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->eat_nutrition(), output);
  }

  // optional string psychology_health = 15;
  if (has_psychology_health()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->psychology_health().data(), this->psychology_health().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.psychology_health");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->psychology_health(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.QualityLifeYearNotifyAns)
}

::google::protobuf::uint8* QualityLifeYearNotifyAns::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.QualityLifeYearNotifyAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string user_name = 2;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // optional int32 age = 3;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->age(), target);
  }

  // optional int32 sex = 4;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sex(), target);
  }

  // optional int32 notify_type = 5;
  if (has_notify_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->notify_type(), target);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->date(), target);
  }

  // optional int32 order = 7;
  if (has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->order(), target);
  }

  // optional int32 health_score = 8;
  if (has_health_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->health_score(), target);
  }

  // optional string expert_segestion = 9;
  if (has_expert_segestion()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->expert_segestion().data(), this->expert_segestion().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.expert_segestion");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->expert_segestion(), target);
  }

  // optional string regular_act = 10;
  if (has_regular_act()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regular_act().data(), this->regular_act().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.regular_act");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->regular_act(), target);
  }

  // optional string sleep_condition = 11;
  if (has_sleep_condition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sleep_condition().data(), this->sleep_condition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.sleep_condition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->sleep_condition(), target);
  }

  // optional string body_measure = 12;
  if (has_body_measure()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->body_measure().data(), this->body_measure().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.body_measure");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->body_measure(), target);
  }

  // optional string run_scence = 13;
  if (has_run_scence()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->run_scence().data(), this->run_scence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.run_scence");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->run_scence(), target);
  }

  // optional string eat_nutrition = 14;
  if (has_eat_nutrition()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->eat_nutrition().data(), this->eat_nutrition().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->eat_nutrition(), target);
  }

  // optional string psychology_health = 15;
  if (has_psychology_health()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->psychology_health().data(), this->psychology_health().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeYearNotifyAns.psychology_health");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->psychology_health(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.QualityLifeYearNotifyAns)
  return target;
}

int QualityLifeYearNotifyAns::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string user_name = 2;
    if (has_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_name());
    }

    // optional int32 age = 3;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional int32 sex = 4;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 notify_type = 5;
    if (has_notify_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify_type());
    }

    // optional string date = 6;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional int32 order = 7;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order());
    }

    // optional int32 health_score = 8;
    if (has_health_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health_score());
    }

  }
  if (_has_bits_[8 / 32] & 32512) {
    // optional string expert_segestion = 9;
    if (has_expert_segestion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->expert_segestion());
    }

    // optional string regular_act = 10;
    if (has_regular_act()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regular_act());
    }

    // optional string sleep_condition = 11;
    if (has_sleep_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sleep_condition());
    }

    // optional string body_measure = 12;
    if (has_body_measure()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->body_measure());
    }

    // optional string run_scence = 13;
    if (has_run_scence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->run_scence());
    }

    // optional string eat_nutrition = 14;
    if (has_eat_nutrition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->eat_nutrition());
    }

    // optional string psychology_health = 15;
    if (has_psychology_health()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->psychology_health());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QualityLifeYearNotifyAns::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QualityLifeYearNotifyAns* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QualityLifeYearNotifyAns*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QualityLifeYearNotifyAns::MergeFrom(const QualityLifeYearNotifyAns& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_user_name()) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_notify_type()) {
      set_notify_type(from.notify_type());
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_order()) {
      set_order(from.order());
    }
    if (from.has_health_score()) {
      set_health_score(from.health_score());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_expert_segestion()) {
      set_has_expert_segestion();
      expert_segestion_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.expert_segestion_);
    }
    if (from.has_regular_act()) {
      set_has_regular_act();
      regular_act_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regular_act_);
    }
    if (from.has_sleep_condition()) {
      set_has_sleep_condition();
      sleep_condition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sleep_condition_);
    }
    if (from.has_body_measure()) {
      set_has_body_measure();
      body_measure_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_measure_);
    }
    if (from.has_run_scence()) {
      set_has_run_scence();
      run_scence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.run_scence_);
    }
    if (from.has_eat_nutrition()) {
      set_has_eat_nutrition();
      eat_nutrition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.eat_nutrition_);
    }
    if (from.has_psychology_health()) {
      set_has_psychology_health();
      psychology_health_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.psychology_health_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QualityLifeYearNotifyAns::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QualityLifeYearNotifyAns::CopyFrom(const QualityLifeYearNotifyAns& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityLifeYearNotifyAns::IsInitialized() const {

  return true;
}

void QualityLifeYearNotifyAns::Swap(QualityLifeYearNotifyAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityLifeYearNotifyAns::InternalSwap(QualityLifeYearNotifyAns* other) {
  user_id_.Swap(&other->user_id_);
  user_name_.Swap(&other->user_name_);
  std::swap(age_, other->age_);
  std::swap(sex_, other->sex_);
  std::swap(notify_type_, other->notify_type_);
  date_.Swap(&other->date_);
  std::swap(order_, other->order_);
  std::swap(health_score_, other->health_score_);
  expert_segestion_.Swap(&other->expert_segestion_);
  regular_act_.Swap(&other->regular_act_);
  sleep_condition_.Swap(&other->sleep_condition_);
  body_measure_.Swap(&other->body_measure_);
  run_scence_.Swap(&other->run_scence_);
  eat_nutrition_.Swap(&other->eat_nutrition_);
  psychology_health_.Swap(&other->psychology_health_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QualityLifeYearNotifyAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QualityLifeYearNotifyAns_descriptor_;
  metadata.reflection = QualityLifeYearNotifyAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QualityLifeYearNotifyAns

// optional string user_id = 1;
 bool QualityLifeYearNotifyAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void QualityLifeYearNotifyAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void QualityLifeYearNotifyAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& QualityLifeYearNotifyAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.user_id)
}
 void QualityLifeYearNotifyAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.user_id)
}
 void QualityLifeYearNotifyAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.user_id)
}
 ::std::string* QualityLifeYearNotifyAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeYearNotifyAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.user_id)
}

// optional string user_name = 2;
 bool QualityLifeYearNotifyAns::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
 void QualityLifeYearNotifyAns::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
 void QualityLifeYearNotifyAns::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
 const ::std::string& QualityLifeYearNotifyAns::user_name() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.user_name)
}
 void QualityLifeYearNotifyAns::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.user_name)
}
 void QualityLifeYearNotifyAns::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.user_name)
}
 ::std::string* QualityLifeYearNotifyAns::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeYearNotifyAns::release_user_name() {
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.user_name)
}

// optional int32 age = 3;
 bool QualityLifeYearNotifyAns::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
 void QualityLifeYearNotifyAns::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
 void QualityLifeYearNotifyAns::clear_age() {
  age_ = 0;
  clear_has_age();
}
 ::google::protobuf::int32 QualityLifeYearNotifyAns::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.age)
  return age_;
}
 void QualityLifeYearNotifyAns::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.age)
}

// optional int32 sex = 4;
 bool QualityLifeYearNotifyAns::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
 void QualityLifeYearNotifyAns::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
 void QualityLifeYearNotifyAns::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
 ::google::protobuf::int32 QualityLifeYearNotifyAns::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.sex)
  return sex_;
}
 void QualityLifeYearNotifyAns::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.sex)
}

// optional int32 notify_type = 5;
 bool QualityLifeYearNotifyAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000010u;
}
 void QualityLifeYearNotifyAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
 void QualityLifeYearNotifyAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
 ::google::protobuf::int32 QualityLifeYearNotifyAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.notify_type)
  return notify_type_;
}
 void QualityLifeYearNotifyAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.notify_type)
}

// optional string date = 6;
 bool QualityLifeYearNotifyAns::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
 void QualityLifeYearNotifyAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
 void QualityLifeYearNotifyAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& QualityLifeYearNotifyAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.date)
}
 void QualityLifeYearNotifyAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.date)
}
 void QualityLifeYearNotifyAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.date)
}
 ::std::string* QualityLifeYearNotifyAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeYearNotifyAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.date)
}

// optional int32 order = 7;
 bool QualityLifeYearNotifyAns::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
 void QualityLifeYearNotifyAns::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
 void QualityLifeYearNotifyAns::clear_order() {
  order_ = 0;
  clear_has_order();
}
 ::google::protobuf::int32 QualityLifeYearNotifyAns::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.order)
  return order_;
}
 void QualityLifeYearNotifyAns::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.order)
}

// optional int32 health_score = 8;
 bool QualityLifeYearNotifyAns::has_health_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_health_score() {
  _has_bits_[0] |= 0x00000080u;
}
 void QualityLifeYearNotifyAns::clear_has_health_score() {
  _has_bits_[0] &= ~0x00000080u;
}
 void QualityLifeYearNotifyAns::clear_health_score() {
  health_score_ = 0;
  clear_has_health_score();
}
 ::google::protobuf::int32 QualityLifeYearNotifyAns::health_score() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.health_score)
  return health_score_;
}
 void QualityLifeYearNotifyAns::set_health_score(::google::protobuf::int32 value) {
  set_has_health_score();
  health_score_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.health_score)
}

// optional string expert_segestion = 9;
 bool QualityLifeYearNotifyAns::has_expert_segestion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_expert_segestion() {
  _has_bits_[0] |= 0x00000100u;
}
 void QualityLifeYearNotifyAns::clear_has_expert_segestion() {
  _has_bits_[0] &= ~0x00000100u;
}
 void QualityLifeYearNotifyAns::clear_expert_segestion() {
  expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expert_segestion();
}
 const ::std::string& QualityLifeYearNotifyAns::expert_segestion() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.expert_segestion)
  return expert_segestion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_expert_segestion(const ::std::string& value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.expert_segestion)
}
 void QualityLifeYearNotifyAns::set_expert_segestion(const char* value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.expert_segestion)
}
 void QualityLifeYearNotifyAns::set_expert_segestion(const char* value, size_t size) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.expert_segestion)
}
 ::std::string* QualityLifeYearNotifyAns::mutable_expert_segestion() {
  set_has_expert_segestion();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.expert_segestion)
  return expert_segestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeYearNotifyAns::release_expert_segestion() {
  clear_has_expert_segestion();
  return expert_segestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_allocated_expert_segestion(::std::string* expert_segestion) {
  if (expert_segestion != nullptr) {
    set_has_expert_segestion();
  } else {
    clear_has_expert_segestion();
  }
  expert_segestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expert_segestion);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.expert_segestion)
}

// optional string regular_act = 10;
 bool QualityLifeYearNotifyAns::has_regular_act() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_regular_act() {
  _has_bits_[0] |= 0x00000200u;
}
 void QualityLifeYearNotifyAns::clear_has_regular_act() {
  _has_bits_[0] &= ~0x00000200u;
}
 void QualityLifeYearNotifyAns::clear_regular_act() {
  regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regular_act();
}
 const ::std::string& QualityLifeYearNotifyAns::regular_act() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.regular_act)
  return regular_act_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_regular_act(const ::std::string& value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.regular_act)
}
 void QualityLifeYearNotifyAns::set_regular_act(const char* value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.regular_act)
}
 void QualityLifeYearNotifyAns::set_regular_act(const char* value, size_t size) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.regular_act)
}
 ::std::string* QualityLifeYearNotifyAns::mutable_regular_act() {
  set_has_regular_act();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.regular_act)
  return regular_act_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeYearNotifyAns::release_regular_act() {
  clear_has_regular_act();
  return regular_act_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_allocated_regular_act(::std::string* regular_act) {
  if (regular_act != nullptr) {
    set_has_regular_act();
  } else {
    clear_has_regular_act();
  }
  regular_act_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regular_act);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.regular_act)
}

// optional string sleep_condition = 11;
 bool QualityLifeYearNotifyAns::has_sleep_condition() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_sleep_condition() {
  _has_bits_[0] |= 0x00000400u;
}
 void QualityLifeYearNotifyAns::clear_has_sleep_condition() {
  _has_bits_[0] &= ~0x00000400u;
}
 void QualityLifeYearNotifyAns::clear_sleep_condition() {
  sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sleep_condition();
}
 const ::std::string& QualityLifeYearNotifyAns::sleep_condition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.sleep_condition)
  return sleep_condition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_sleep_condition(const ::std::string& value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.sleep_condition)
}
 void QualityLifeYearNotifyAns::set_sleep_condition(const char* value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.sleep_condition)
}
 void QualityLifeYearNotifyAns::set_sleep_condition(const char* value, size_t size) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.sleep_condition)
}
 ::std::string* QualityLifeYearNotifyAns::mutable_sleep_condition() {
  set_has_sleep_condition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.sleep_condition)
  return sleep_condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeYearNotifyAns::release_sleep_condition() {
  clear_has_sleep_condition();
  return sleep_condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_allocated_sleep_condition(::std::string* sleep_condition) {
  if (sleep_condition != nullptr) {
    set_has_sleep_condition();
  } else {
    clear_has_sleep_condition();
  }
  sleep_condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sleep_condition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.sleep_condition)
}

// optional string body_measure = 12;
 bool QualityLifeYearNotifyAns::has_body_measure() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_body_measure() {
  _has_bits_[0] |= 0x00000800u;
}
 void QualityLifeYearNotifyAns::clear_has_body_measure() {
  _has_bits_[0] &= ~0x00000800u;
}
 void QualityLifeYearNotifyAns::clear_body_measure() {
  body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_measure();
}
 const ::std::string& QualityLifeYearNotifyAns::body_measure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.body_measure)
  return body_measure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_body_measure(const ::std::string& value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.body_measure)
}
 void QualityLifeYearNotifyAns::set_body_measure(const char* value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.body_measure)
}
 void QualityLifeYearNotifyAns::set_body_measure(const char* value, size_t size) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.body_measure)
}
 ::std::string* QualityLifeYearNotifyAns::mutable_body_measure() {
  set_has_body_measure();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.body_measure)
  return body_measure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeYearNotifyAns::release_body_measure() {
  clear_has_body_measure();
  return body_measure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_allocated_body_measure(::std::string* body_measure) {
  if (body_measure != nullptr) {
    set_has_body_measure();
  } else {
    clear_has_body_measure();
  }
  body_measure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_measure);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.body_measure)
}

// optional string run_scence = 13;
 bool QualityLifeYearNotifyAns::has_run_scence() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_run_scence() {
  _has_bits_[0] |= 0x00001000u;
}
 void QualityLifeYearNotifyAns::clear_has_run_scence() {
  _has_bits_[0] &= ~0x00001000u;
}
 void QualityLifeYearNotifyAns::clear_run_scence() {
  run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_run_scence();
}
 const ::std::string& QualityLifeYearNotifyAns::run_scence() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.run_scence)
  return run_scence_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_run_scence(const ::std::string& value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.run_scence)
}
 void QualityLifeYearNotifyAns::set_run_scence(const char* value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.run_scence)
}
 void QualityLifeYearNotifyAns::set_run_scence(const char* value, size_t size) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.run_scence)
}
 ::std::string* QualityLifeYearNotifyAns::mutable_run_scence() {
  set_has_run_scence();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.run_scence)
  return run_scence_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeYearNotifyAns::release_run_scence() {
  clear_has_run_scence();
  return run_scence_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_allocated_run_scence(::std::string* run_scence) {
  if (run_scence != nullptr) {
    set_has_run_scence();
  } else {
    clear_has_run_scence();
  }
  run_scence_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), run_scence);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.run_scence)
}

// optional string eat_nutrition = 14;
 bool QualityLifeYearNotifyAns::has_eat_nutrition() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_eat_nutrition() {
  _has_bits_[0] |= 0x00002000u;
}
 void QualityLifeYearNotifyAns::clear_has_eat_nutrition() {
  _has_bits_[0] &= ~0x00002000u;
}
 void QualityLifeYearNotifyAns::clear_eat_nutrition() {
  eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eat_nutrition();
}
 const ::std::string& QualityLifeYearNotifyAns::eat_nutrition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition)
  return eat_nutrition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_eat_nutrition(const ::std::string& value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition)
}
 void QualityLifeYearNotifyAns::set_eat_nutrition(const char* value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition)
}
 void QualityLifeYearNotifyAns::set_eat_nutrition(const char* value, size_t size) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition)
}
 ::std::string* QualityLifeYearNotifyAns::mutable_eat_nutrition() {
  set_has_eat_nutrition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition)
  return eat_nutrition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeYearNotifyAns::release_eat_nutrition() {
  clear_has_eat_nutrition();
  return eat_nutrition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_allocated_eat_nutrition(::std::string* eat_nutrition) {
  if (eat_nutrition != nullptr) {
    set_has_eat_nutrition();
  } else {
    clear_has_eat_nutrition();
  }
  eat_nutrition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eat_nutrition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition)
}

// optional string psychology_health = 15;
 bool QualityLifeYearNotifyAns::has_psychology_health() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
 void QualityLifeYearNotifyAns::set_has_psychology_health() {
  _has_bits_[0] |= 0x00004000u;
}
 void QualityLifeYearNotifyAns::clear_has_psychology_health() {
  _has_bits_[0] &= ~0x00004000u;
}
 void QualityLifeYearNotifyAns::clear_psychology_health() {
  psychology_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psychology_health();
}
 const ::std::string& QualityLifeYearNotifyAns::psychology_health() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.psychology_health)
  return psychology_health_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_psychology_health(const ::std::string& value) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.psychology_health)
}
 void QualityLifeYearNotifyAns::set_psychology_health(const char* value) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.psychology_health)
}
 void QualityLifeYearNotifyAns::set_psychology_health(const char* value, size_t size) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.psychology_health)
}
 ::std::string* QualityLifeYearNotifyAns::mutable_psychology_health() {
  set_has_psychology_health();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.psychology_health)
  return psychology_health_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeYearNotifyAns::release_psychology_health() {
  clear_has_psychology_health();
  return psychology_health_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeYearNotifyAns::set_allocated_psychology_health(::std::string* psychology_health) {
  if (psychology_health != nullptr) {
    set_has_psychology_health();
  } else {
    clear_has_psychology_health();
  }
  psychology_health_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psychology_health);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.psychology_health)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int TransHSKLHisData::kUserIdFieldNumber;
const int TransHSKLHisData::kHostIdFieldNumber;
const int TransHSKLHisData::kDateFieldNumber;
const int TransHSKLHisData::kClearSleepFieldNumber;
const int TransHSKLHisData::kLowSleepFieldNumber;
const int TransHSKLHisData::kMidSleepFieldNumber;
const int TransHSKLHisData::kDeepSleepFieldNumber;
const int TransHSKLHisData::kClearPgeFieldNumber;
const int TransHSKLHisData::kLowPgeFieldNumber;
const int TransHSKLHisData::kMidPgeFieldNumber;
const int TransHSKLHisData::kDeepPgeFieldNumber;
#endif  // !_MSC_VER

TransHSKLHisData::TransHSKLHisData()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.TransHSKLHisData)
}

void TransHSKLHisData::InitAsDefaultInstance() {
}

TransHSKLHisData::TransHSKLHisData(const TransHSKLHisData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.TransHSKLHisData)
}

void TransHSKLHisData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_sleep_ = 0;
  low_sleep_ = 0;
  mid_sleep_ = 0;
  deep_sleep_ = 0;
  clear_pge_ = 0;
  low_pge_ = 0;
  mid_pge_ = 0;
  deep_pge_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TransHSKLHisData::~TransHSKLHisData() {
  // @@protoc_insertion_point(destructor:YfqProtocol.TransHSKLHisData)
  SharedDtor();
}

void TransHSKLHisData::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TransHSKLHisData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransHSKLHisData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransHSKLHisData_descriptor_;
}

const TransHSKLHisData& TransHSKLHisData::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

TransHSKLHisData* TransHSKLHisData::default_instance_ = nullptr;

TransHSKLHisData* TransHSKLHisData::New(::google::protobuf::Arena* arena) const {
  TransHSKLHisData* n = new TransHSKLHisData;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void TransHSKLHisData::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TransHSKLHisData*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(clear_sleep_, clear_pge_);
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_host_id()) {
      host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ZR_(low_pge_, deep_pge_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TransHSKLHisData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.TransHSKLHisData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransHSKLHisData.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_host_id;
        break;
      }

      // optional string host_id = 2;
      case 2: {
        if (tag == 18) {
         parse_host_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_id().data(), this->host_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransHSKLHisData.host_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_date;
        break;
      }

      // optional string date = 3;
      case 3: {
        if (tag == 26) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransHSKLHisData.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_clear_sleep;
        break;
      }

      // optional int32 clear_sleep = 4;
      case 4: {
        if (tag == 32) {
         parse_clear_sleep:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clear_sleep_)));
          set_has_clear_sleep();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_low_sleep;
        break;
      }

      // optional int32 low_sleep = 5;
      case 5: {
        if (tag == 40) {
         parse_low_sleep:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &low_sleep_)));
          set_has_low_sleep();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_mid_sleep;
        break;
      }

      // optional int32 mid_sleep = 6;
      case 6: {
        if (tag == 48) {
         parse_mid_sleep:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mid_sleep_)));
          set_has_mid_sleep();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_deep_sleep;
        break;
      }

      // optional int32 deep_sleep = 7;
      case 7: {
        if (tag == 56) {
         parse_deep_sleep:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deep_sleep_)));
          set_has_deep_sleep();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_clear_pge;
        break;
      }

      // optional float clear_pge = 8;
      case 8: {
        if (tag == 69) {
         parse_clear_pge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &clear_pge_)));
          set_has_clear_pge();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_low_pge;
        break;
      }

      // optional float low_pge = 9;
      case 9: {
        if (tag == 77) {
         parse_low_pge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &low_pge_)));
          set_has_low_pge();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_mid_pge;
        break;
      }

      // optional float mid_pge = 10;
      case 10: {
        if (tag == 85) {
         parse_mid_pge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mid_pge_)));
          set_has_mid_pge();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(93)) goto parse_deep_pge;
        break;
      }

      // optional float deep_pge = 11;
      case 11: {
        if (tag == 93) {
         parse_deep_pge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &deep_pge_)));
          set_has_deep_pge();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.TransHSKLHisData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.TransHSKLHisData)
  return false;
#undef DO_
}

void TransHSKLHisData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.TransHSKLHisData)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransHSKLHisData.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransHSKLHisData.host_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_id(), output);
  }

  // optional string date = 3;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransHSKLHisData.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->date(), output);
  }

  // optional int32 clear_sleep = 4;
  if (has_clear_sleep()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->clear_sleep(), output);
  }

  // optional int32 low_sleep = 5;
  if (has_low_sleep()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->low_sleep(), output);
  }

  // optional int32 mid_sleep = 6;
  if (has_mid_sleep()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->mid_sleep(), output);
  }

  // optional int32 deep_sleep = 7;
  if (has_deep_sleep()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->deep_sleep(), output);
  }

  // optional float clear_pge = 8;
  if (has_clear_pge()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->clear_pge(), output);
  }

  // optional float low_pge = 9;
  if (has_low_pge()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->low_pge(), output);
  }

  // optional float mid_pge = 10;
  if (has_mid_pge()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->mid_pge(), output);
  }

  // optional float deep_pge = 11;
  if (has_deep_pge()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->deep_pge(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.TransHSKLHisData)
}

::google::protobuf::uint8* TransHSKLHisData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.TransHSKLHisData)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransHSKLHisData.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransHSKLHisData.host_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_id(), target);
  }

  // optional string date = 3;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransHSKLHisData.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->date(), target);
  }

  // optional int32 clear_sleep = 4;
  if (has_clear_sleep()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->clear_sleep(), target);
  }

  // optional int32 low_sleep = 5;
  if (has_low_sleep()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->low_sleep(), target);
  }

  // optional int32 mid_sleep = 6;
  if (has_mid_sleep()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->mid_sleep(), target);
  }

  // optional int32 deep_sleep = 7;
  if (has_deep_sleep()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->deep_sleep(), target);
  }

  // optional float clear_pge = 8;
  if (has_clear_pge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->clear_pge(), target);
  }

  // optional float low_pge = 9;
  if (has_low_pge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->low_pge(), target);
  }

  // optional float mid_pge = 10;
  if (has_mid_pge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->mid_pge(), target);
  }

  // optional float deep_pge = 11;
  if (has_deep_pge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->deep_pge(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.TransHSKLHisData)
  return target;
}

int TransHSKLHisData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string host_id = 2;
    if (has_host_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_id());
    }

    // optional string date = 3;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional int32 clear_sleep = 4;
    if (has_clear_sleep()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clear_sleep());
    }

    // optional int32 low_sleep = 5;
    if (has_low_sleep()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->low_sleep());
    }

    // optional int32 mid_sleep = 6;
    if (has_mid_sleep()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mid_sleep());
    }

    // optional int32 deep_sleep = 7;
    if (has_deep_sleep()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->deep_sleep());
    }

    // optional float clear_pge = 8;
    if (has_clear_pge()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 1792) {
    // optional float low_pge = 9;
    if (has_low_pge()) {
      total_size += 1 + 4;
    }

    // optional float mid_pge = 10;
    if (has_mid_pge()) {
      total_size += 1 + 4;
    }

    // optional float deep_pge = 11;
    if (has_deep_pge()) {
      total_size += 1 + 4;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransHSKLHisData::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransHSKLHisData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TransHSKLHisData*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TransHSKLHisData::MergeFrom(const TransHSKLHisData& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_host_id()) {
      set_has_host_id();
      host_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_id_);
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_clear_sleep()) {
      set_clear_sleep(from.clear_sleep());
    }
    if (from.has_low_sleep()) {
      set_low_sleep(from.low_sleep());
    }
    if (from.has_mid_sleep()) {
      set_mid_sleep(from.mid_sleep());
    }
    if (from.has_deep_sleep()) {
      set_deep_sleep(from.deep_sleep());
    }
    if (from.has_clear_pge()) {
      set_clear_pge(from.clear_pge());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_low_pge()) {
      set_low_pge(from.low_pge());
    }
    if (from.has_mid_pge()) {
      set_mid_pge(from.mid_pge());
    }
    if (from.has_deep_pge()) {
      set_deep_pge(from.deep_pge());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TransHSKLHisData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransHSKLHisData::CopyFrom(const TransHSKLHisData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransHSKLHisData::IsInitialized() const {

  return true;
}

void TransHSKLHisData::Swap(TransHSKLHisData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransHSKLHisData::InternalSwap(TransHSKLHisData* other) {
  user_id_.Swap(&other->user_id_);
  host_id_.Swap(&other->host_id_);
  date_.Swap(&other->date_);
  std::swap(clear_sleep_, other->clear_sleep_);
  std::swap(low_sleep_, other->low_sleep_);
  std::swap(mid_sleep_, other->mid_sleep_);
  std::swap(deep_sleep_, other->deep_sleep_);
  std::swap(clear_pge_, other->clear_pge_);
  std::swap(low_pge_, other->low_pge_);
  std::swap(mid_pge_, other->mid_pge_);
  std::swap(deep_pge_, other->deep_pge_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransHSKLHisData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransHSKLHisData_descriptor_;
  metadata.reflection = TransHSKLHisData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransHSKLHisData

// optional string user_id = 1;
 bool TransHSKLHisData::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void TransHSKLHisData::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void TransHSKLHisData::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void TransHSKLHisData::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& TransHSKLHisData::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransHSKLHisData::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.user_id)
}
 void TransHSKLHisData::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransHSKLHisData.user_id)
}
 void TransHSKLHisData::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransHSKLHisData.user_id)
}
 ::std::string* TransHSKLHisData::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransHSKLHisData.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransHSKLHisData::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransHSKLHisData::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransHSKLHisData.user_id)
}

// optional string host_id = 2;
 bool TransHSKLHisData::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void TransHSKLHisData::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void TransHSKLHisData::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void TransHSKLHisData::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
 const ::std::string& TransHSKLHisData::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransHSKLHisData::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.host_id)
}
 void TransHSKLHisData::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransHSKLHisData.host_id)
}
 void TransHSKLHisData::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransHSKLHisData.host_id)
}
 ::std::string* TransHSKLHisData::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransHSKLHisData.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransHSKLHisData::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransHSKLHisData::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransHSKLHisData.host_id)
}

// optional string date = 3;
 bool TransHSKLHisData::has_date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void TransHSKLHisData::set_has_date() {
  _has_bits_[0] |= 0x00000004u;
}
 void TransHSKLHisData::clear_has_date() {
  _has_bits_[0] &= ~0x00000004u;
}
 void TransHSKLHisData::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& TransHSKLHisData::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransHSKLHisData::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.date)
}
 void TransHSKLHisData::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransHSKLHisData.date)
}
 void TransHSKLHisData::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransHSKLHisData.date)
}
 ::std::string* TransHSKLHisData::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransHSKLHisData.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransHSKLHisData::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransHSKLHisData::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransHSKLHisData.date)
}

// optional int32 clear_sleep = 4;
 bool TransHSKLHisData::has_clear_sleep() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void TransHSKLHisData::set_has_clear_sleep() {
  _has_bits_[0] |= 0x00000008u;
}
 void TransHSKLHisData::clear_has_clear_sleep() {
  _has_bits_[0] &= ~0x00000008u;
}
 void TransHSKLHisData::clear_clear_sleep() {
  clear_sleep_ = 0;
  clear_has_clear_sleep();
}
 ::google::protobuf::int32 TransHSKLHisData::clear_sleep() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.clear_sleep)
  return clear_sleep_;
}
 void TransHSKLHisData::set_clear_sleep(::google::protobuf::int32 value) {
  set_has_clear_sleep();
  clear_sleep_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.clear_sleep)
}

// optional int32 low_sleep = 5;
 bool TransHSKLHisData::has_low_sleep() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void TransHSKLHisData::set_has_low_sleep() {
  _has_bits_[0] |= 0x00000010u;
}
 void TransHSKLHisData::clear_has_low_sleep() {
  _has_bits_[0] &= ~0x00000010u;
}
 void TransHSKLHisData::clear_low_sleep() {
  low_sleep_ = 0;
  clear_has_low_sleep();
}
 ::google::protobuf::int32 TransHSKLHisData::low_sleep() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.low_sleep)
  return low_sleep_;
}
 void TransHSKLHisData::set_low_sleep(::google::protobuf::int32 value) {
  set_has_low_sleep();
  low_sleep_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.low_sleep)
}

// optional int32 mid_sleep = 6;
 bool TransHSKLHisData::has_mid_sleep() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void TransHSKLHisData::set_has_mid_sleep() {
  _has_bits_[0] |= 0x00000020u;
}
 void TransHSKLHisData::clear_has_mid_sleep() {
  _has_bits_[0] &= ~0x00000020u;
}
 void TransHSKLHisData::clear_mid_sleep() {
  mid_sleep_ = 0;
  clear_has_mid_sleep();
}
 ::google::protobuf::int32 TransHSKLHisData::mid_sleep() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.mid_sleep)
  return mid_sleep_;
}
 void TransHSKLHisData::set_mid_sleep(::google::protobuf::int32 value) {
  set_has_mid_sleep();
  mid_sleep_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.mid_sleep)
}

// optional int32 deep_sleep = 7;
 bool TransHSKLHisData::has_deep_sleep() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void TransHSKLHisData::set_has_deep_sleep() {
  _has_bits_[0] |= 0x00000040u;
}
 void TransHSKLHisData::clear_has_deep_sleep() {
  _has_bits_[0] &= ~0x00000040u;
}
 void TransHSKLHisData::clear_deep_sleep() {
  deep_sleep_ = 0;
  clear_has_deep_sleep();
}
 ::google::protobuf::int32 TransHSKLHisData::deep_sleep() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.deep_sleep)
  return deep_sleep_;
}
 void TransHSKLHisData::set_deep_sleep(::google::protobuf::int32 value) {
  set_has_deep_sleep();
  deep_sleep_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.deep_sleep)
}

// optional float clear_pge = 8;
 bool TransHSKLHisData::has_clear_pge() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void TransHSKLHisData::set_has_clear_pge() {
  _has_bits_[0] |= 0x00000080u;
}
 void TransHSKLHisData::clear_has_clear_pge() {
  _has_bits_[0] &= ~0x00000080u;
}
 void TransHSKLHisData::clear_clear_pge() {
  clear_pge_ = 0;
  clear_has_clear_pge();
}
 float TransHSKLHisData::clear_pge() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.clear_pge)
  return clear_pge_;
}
 void TransHSKLHisData::set_clear_pge(float value) {
  set_has_clear_pge();
  clear_pge_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.clear_pge)
}

// optional float low_pge = 9;
 bool TransHSKLHisData::has_low_pge() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void TransHSKLHisData::set_has_low_pge() {
  _has_bits_[0] |= 0x00000100u;
}
 void TransHSKLHisData::clear_has_low_pge() {
  _has_bits_[0] &= ~0x00000100u;
}
 void TransHSKLHisData::clear_low_pge() {
  low_pge_ = 0;
  clear_has_low_pge();
}
 float TransHSKLHisData::low_pge() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.low_pge)
  return low_pge_;
}
 void TransHSKLHisData::set_low_pge(float value) {
  set_has_low_pge();
  low_pge_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.low_pge)
}

// optional float mid_pge = 10;
 bool TransHSKLHisData::has_mid_pge() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void TransHSKLHisData::set_has_mid_pge() {
  _has_bits_[0] |= 0x00000200u;
}
 void TransHSKLHisData::clear_has_mid_pge() {
  _has_bits_[0] &= ~0x00000200u;
}
 void TransHSKLHisData::clear_mid_pge() {
  mid_pge_ = 0;
  clear_has_mid_pge();
}
 float TransHSKLHisData::mid_pge() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.mid_pge)
  return mid_pge_;
}
 void TransHSKLHisData::set_mid_pge(float value) {
  set_has_mid_pge();
  mid_pge_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.mid_pge)
}

// optional float deep_pge = 11;
 bool TransHSKLHisData::has_deep_pge() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void TransHSKLHisData::set_has_deep_pge() {
  _has_bits_[0] |= 0x00000400u;
}
 void TransHSKLHisData::clear_has_deep_pge() {
  _has_bits_[0] &= ~0x00000400u;
}
 void TransHSKLHisData::clear_deep_pge() {
  deep_pge_ = 0;
  clear_has_deep_pge();
}
 float TransHSKLHisData::deep_pge() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.deep_pge)
  return deep_pge_;
}
 void TransHSKLHisData::set_deep_pge(float value) {
  set_has_deep_pge();
  deep_pge_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.deep_pge)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int TransNightGuide_NightGuideNode::kDomainIdFieldNumber;
const int TransNightGuide_NightGuideNode::kNodeIdFieldNumber;
const int TransNightGuide_NightGuideNode::kCreateTimeFieldNumber;
const int TransNightGuide_NightGuideNode::kNightDurationFieldNumber;
const int TransNightGuide_NightGuideNode::kNightIntervalFieldNumber;
#endif  // !_MSC_VER

TransNightGuide_NightGuideNode::TransNightGuide_NightGuideNode()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.TransNightGuide.NightGuideNode)
}

void TransNightGuide_NightGuideNode::InitAsDefaultInstance() {
}

TransNightGuide_NightGuideNode::TransNightGuide_NightGuideNode(const TransNightGuide_NightGuideNode& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.TransNightGuide.NightGuideNode)
}

void TransNightGuide_NightGuideNode::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  domain_id_ = 0;
  node_id_ = 0;
  create_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  night_duration_ = 0;
  night_interval_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TransNightGuide_NightGuideNode::~TransNightGuide_NightGuideNode() {
  // @@protoc_insertion_point(destructor:YfqProtocol.TransNightGuide.NightGuideNode)
  SharedDtor();
}

void TransNightGuide_NightGuideNode::SharedDtor() {
  create_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TransNightGuide_NightGuideNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransNightGuide_NightGuideNode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransNightGuide_NightGuideNode_descriptor_;
}

const TransNightGuide_NightGuideNode& TransNightGuide_NightGuideNode::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

TransNightGuide_NightGuideNode* TransNightGuide_NightGuideNode::default_instance_ = nullptr;

TransNightGuide_NightGuideNode* TransNightGuide_NightGuideNode::New(::google::protobuf::Arena* arena) const {
  TransNightGuide_NightGuideNode* n = new TransNightGuide_NightGuideNode;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void TransNightGuide_NightGuideNode::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TransNightGuide_NightGuideNode*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(domain_id_, node_id_);
    ZR_(night_duration_, night_interval_);
    if (has_create_time()) {
      create_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TransNightGuide_NightGuideNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.TransNightGuide.NightGuideNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 domain_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &domain_id_)));
          set_has_domain_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_node_id;
        break;
      }

      // optional int32 node_id = 2;
      case 2: {
        if (tag == 16) {
         parse_node_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &node_id_)));
          set_has_node_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_create_time;
        break;
      }

      // optional string create_time = 3;
      case 3: {
        if (tag == 26) {
         parse_create_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_create_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->create_time().data(), this->create_time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransNightGuide.NightGuideNode.create_time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_night_duration;
        break;
      }

      // optional int32 night_duration = 4;
      case 4: {
        if (tag == 32) {
         parse_night_duration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &night_duration_)));
          set_has_night_duration();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_night_interval;
        break;
      }

      // optional int32 night_interval = 5;
      case 5: {
        if (tag == 40) {
         parse_night_interval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &night_interval_)));
          set_has_night_interval();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.TransNightGuide.NightGuideNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.TransNightGuide.NightGuideNode)
  return false;
#undef DO_
}

void TransNightGuide_NightGuideNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.TransNightGuide.NightGuideNode)
  // optional int32 domain_id = 1;
  if (has_domain_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->domain_id(), output);
  }

  // optional int32 node_id = 2;
  if (has_node_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->node_id(), output);
  }

  // optional string create_time = 3;
  if (has_create_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->create_time().data(), this->create_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransNightGuide.NightGuideNode.create_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->create_time(), output);
  }

  // optional int32 night_duration = 4;
  if (has_night_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->night_duration(), output);
  }

  // optional int32 night_interval = 5;
  if (has_night_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->night_interval(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.TransNightGuide.NightGuideNode)
}

::google::protobuf::uint8* TransNightGuide_NightGuideNode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.TransNightGuide.NightGuideNode)
  // optional int32 domain_id = 1;
  if (has_domain_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->domain_id(), target);
  }

  // optional int32 node_id = 2;
  if (has_node_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->node_id(), target);
  }

  // optional string create_time = 3;
  if (has_create_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->create_time().data(), this->create_time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransNightGuide.NightGuideNode.create_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->create_time(), target);
  }

  // optional int32 night_duration = 4;
  if (has_night_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->night_duration(), target);
  }

  // optional int32 night_interval = 5;
  if (has_night_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->night_interval(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.TransNightGuide.NightGuideNode)
  return target;
}

int TransNightGuide_NightGuideNode::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional int32 domain_id = 1;
    if (has_domain_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->domain_id());
    }

    // optional int32 node_id = 2;
    if (has_node_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->node_id());
    }

    // optional string create_time = 3;
    if (has_create_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->create_time());
    }

    // optional int32 night_duration = 4;
    if (has_night_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->night_duration());
    }

    // optional int32 night_interval = 5;
    if (has_night_interval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->night_interval());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransNightGuide_NightGuideNode::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransNightGuide_NightGuideNode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TransNightGuide_NightGuideNode*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TransNightGuide_NightGuideNode::MergeFrom(const TransNightGuide_NightGuideNode& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_domain_id()) {
      set_domain_id(from.domain_id());
    }
    if (from.has_node_id()) {
      set_node_id(from.node_id());
    }
    if (from.has_create_time()) {
      set_has_create_time();
      create_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_time_);
    }
    if (from.has_night_duration()) {
      set_night_duration(from.night_duration());
    }
    if (from.has_night_interval()) {
      set_night_interval(from.night_interval());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TransNightGuide_NightGuideNode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransNightGuide_NightGuideNode::CopyFrom(const TransNightGuide_NightGuideNode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransNightGuide_NightGuideNode::IsInitialized() const {

  return true;
}

void TransNightGuide_NightGuideNode::Swap(TransNightGuide_NightGuideNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransNightGuide_NightGuideNode::InternalSwap(TransNightGuide_NightGuideNode* other) {
  std::swap(domain_id_, other->domain_id_);
  std::swap(node_id_, other->node_id_);
  create_time_.Swap(&other->create_time_);
  std::swap(night_duration_, other->night_duration_);
  std::swap(night_interval_, other->night_interval_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransNightGuide_NightGuideNode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransNightGuide_NightGuideNode_descriptor_;
  metadata.reflection = TransNightGuide_NightGuideNode_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TransNightGuide::kUserIdFieldNumber;
const int TransNightGuide::kHostIdFieldNumber;
const int TransNightGuide::kRecordNumFieldNumber;
const int TransNightGuide::kNightGuideNodeFieldNumber;
#endif  // !_MSC_VER

TransNightGuide::TransNightGuide()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.TransNightGuide)
}

void TransNightGuide::InitAsDefaultInstance() {
}

TransNightGuide::TransNightGuide(const TransNightGuide& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.TransNightGuide)
}

void TransNightGuide::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  record_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TransNightGuide::~TransNightGuide() {
  // @@protoc_insertion_point(destructor:YfqProtocol.TransNightGuide)
  SharedDtor();
}

void TransNightGuide::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TransNightGuide::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransNightGuide::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransNightGuide_descriptor_;
}

const TransNightGuide& TransNightGuide::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

TransNightGuide* TransNightGuide::default_instance_ = nullptr;

TransNightGuide* TransNightGuide::New(::google::protobuf::Arena* arena) const {
  TransNightGuide* n = new TransNightGuide;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void TransNightGuide::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_host_id()) {
      host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    record_num_ = 0;
  }
  night_guide_node_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TransNightGuide::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.TransNightGuide)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransNightGuide.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_host_id;
        break;
      }

      // optional string host_id = 2;
      case 2: {
        if (tag == 18) {
         parse_host_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_id().data(), this->host_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransNightGuide.host_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_record_num;
        break;
      }

      // optional int32 record_num = 3;
      case 3: {
        if (tag == 24) {
         parse_record_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &record_num_)));
          set_has_record_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_night_guide_node;
        break;
      }

      // repeated .YfqProtocol.TransNightGuide.NightGuideNode night_guide_node = 4;
      case 4: {
        if (tag == 34) {
         parse_night_guide_node:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_night_guide_node()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_night_guide_node;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.TransNightGuide)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.TransNightGuide)
  return false;
#undef DO_
}

void TransNightGuide::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.TransNightGuide)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransNightGuide.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransNightGuide.host_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_id(), output);
  }

  // optional int32 record_num = 3;
  if (has_record_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->record_num(), output);
  }

  // repeated .YfqProtocol.TransNightGuide.NightGuideNode night_guide_node = 4;
  for (unsigned int i = 0, n = this->night_guide_node_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->night_guide_node(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.TransNightGuide)
}

::google::protobuf::uint8* TransNightGuide::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.TransNightGuide)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransNightGuide.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransNightGuide.host_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_id(), target);
  }

  // optional int32 record_num = 3;
  if (has_record_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->record_num(), target);
  }

  // repeated .YfqProtocol.TransNightGuide.NightGuideNode night_guide_node = 4;
  for (unsigned int i = 0, n = this->night_guide_node_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->night_guide_node(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.TransNightGuide)
  return target;
}

int TransNightGuide::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string host_id = 2;
    if (has_host_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_id());
    }

    // optional int32 record_num = 3;
    if (has_record_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->record_num());
    }

  }
  // repeated .YfqProtocol.TransNightGuide.NightGuideNode night_guide_node = 4;
  total_size += 1 * this->night_guide_node_size();
  for (int i = 0; i < this->night_guide_node_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->night_guide_node(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransNightGuide::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransNightGuide* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TransNightGuide*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TransNightGuide::MergeFrom(const TransNightGuide& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  night_guide_node_.MergeFrom(from.night_guide_node_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_host_id()) {
      set_has_host_id();
      host_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_id_);
    }
    if (from.has_record_num()) {
      set_record_num(from.record_num());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TransNightGuide::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransNightGuide::CopyFrom(const TransNightGuide& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransNightGuide::IsInitialized() const {

  return true;
}

void TransNightGuide::Swap(TransNightGuide* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransNightGuide::InternalSwap(TransNightGuide* other) {
  user_id_.Swap(&other->user_id_);
  host_id_.Swap(&other->host_id_);
  std::swap(record_num_, other->record_num_);
  night_guide_node_.UnsafeArenaSwap(&other->night_guide_node_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransNightGuide::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransNightGuide_descriptor_;
  metadata.reflection = TransNightGuide_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransNightGuide_NightGuideNode

// optional int32 domain_id = 1;
 bool TransNightGuide_NightGuideNode::has_domain_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void TransNightGuide_NightGuideNode::set_has_domain_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void TransNightGuide_NightGuideNode::clear_has_domain_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void TransNightGuide_NightGuideNode::clear_domain_id() {
  domain_id_ = 0;
  clear_has_domain_id();
}
 ::google::protobuf::int32 TransNightGuide_NightGuideNode::domain_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.NightGuideNode.domain_id)
  return domain_id_;
}
 void TransNightGuide_NightGuideNode::set_domain_id(::google::protobuf::int32 value) {
  set_has_domain_id();
  domain_id_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.NightGuideNode.domain_id)
}

// optional int32 node_id = 2;
 bool TransNightGuide_NightGuideNode::has_node_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void TransNightGuide_NightGuideNode::set_has_node_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void TransNightGuide_NightGuideNode::clear_has_node_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void TransNightGuide_NightGuideNode::clear_node_id() {
  node_id_ = 0;
  clear_has_node_id();
}
 ::google::protobuf::int32 TransNightGuide_NightGuideNode::node_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.NightGuideNode.node_id)
  return node_id_;
}
 void TransNightGuide_NightGuideNode::set_node_id(::google::protobuf::int32 value) {
  set_has_node_id();
  node_id_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.NightGuideNode.node_id)
}

// optional string create_time = 3;
 bool TransNightGuide_NightGuideNode::has_create_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void TransNightGuide_NightGuideNode::set_has_create_time() {
  _has_bits_[0] |= 0x00000004u;
}
 void TransNightGuide_NightGuideNode::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000004u;
}
 void TransNightGuide_NightGuideNode::clear_create_time() {
  create_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_create_time();
}
 const ::std::string& TransNightGuide_NightGuideNode::create_time() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.NightGuideNode.create_time)
  return create_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransNightGuide_NightGuideNode::set_create_time(const ::std::string& value) {
  set_has_create_time();
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.NightGuideNode.create_time)
}
 void TransNightGuide_NightGuideNode::set_create_time(const char* value) {
  set_has_create_time();
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransNightGuide.NightGuideNode.create_time)
}
 void TransNightGuide_NightGuideNode::set_create_time(const char* value, size_t size) {
  set_has_create_time();
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransNightGuide.NightGuideNode.create_time)
}
 ::std::string* TransNightGuide_NightGuideNode::mutable_create_time() {
  set_has_create_time();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransNightGuide.NightGuideNode.create_time)
  return create_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransNightGuide_NightGuideNode::release_create_time() {
  clear_has_create_time();
  return create_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransNightGuide_NightGuideNode::set_allocated_create_time(::std::string* create_time) {
  if (create_time != nullptr) {
    set_has_create_time();
  } else {
    clear_has_create_time();
  }
  create_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), create_time);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransNightGuide.NightGuideNode.create_time)
}

// optional int32 night_duration = 4;
 bool TransNightGuide_NightGuideNode::has_night_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void TransNightGuide_NightGuideNode::set_has_night_duration() {
  _has_bits_[0] |= 0x00000008u;
}
 void TransNightGuide_NightGuideNode::clear_has_night_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
 void TransNightGuide_NightGuideNode::clear_night_duration() {
  night_duration_ = 0;
  clear_has_night_duration();
}
 ::google::protobuf::int32 TransNightGuide_NightGuideNode::night_duration() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.NightGuideNode.night_duration)
  return night_duration_;
}
 void TransNightGuide_NightGuideNode::set_night_duration(::google::protobuf::int32 value) {
  set_has_night_duration();
  night_duration_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.NightGuideNode.night_duration)
}

// optional int32 night_interval = 5;
 bool TransNightGuide_NightGuideNode::has_night_interval() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void TransNightGuide_NightGuideNode::set_has_night_interval() {
  _has_bits_[0] |= 0x00000010u;
}
 void TransNightGuide_NightGuideNode::clear_has_night_interval() {
  _has_bits_[0] &= ~0x00000010u;
}
 void TransNightGuide_NightGuideNode::clear_night_interval() {
  night_interval_ = 0;
  clear_has_night_interval();
}
 ::google::protobuf::int32 TransNightGuide_NightGuideNode::night_interval() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.NightGuideNode.night_interval)
  return night_interval_;
}
 void TransNightGuide_NightGuideNode::set_night_interval(::google::protobuf::int32 value) {
  set_has_night_interval();
  night_interval_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.NightGuideNode.night_interval)
}

// -------------------------------------------------------------------

// TransNightGuide

// optional string user_id = 1;
 bool TransNightGuide::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void TransNightGuide::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void TransNightGuide::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void TransNightGuide::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& TransNightGuide::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransNightGuide::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.user_id)
}
 void TransNightGuide::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransNightGuide.user_id)
}
 void TransNightGuide::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransNightGuide.user_id)
}
 ::std::string* TransNightGuide::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransNightGuide.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransNightGuide::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransNightGuide::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransNightGuide.user_id)
}

// optional string host_id = 2;
 bool TransNightGuide::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void TransNightGuide::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void TransNightGuide::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void TransNightGuide::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
 const ::std::string& TransNightGuide::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransNightGuide::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.host_id)
}
 void TransNightGuide::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransNightGuide.host_id)
}
 void TransNightGuide::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransNightGuide.host_id)
}
 ::std::string* TransNightGuide::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransNightGuide.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransNightGuide::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransNightGuide::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransNightGuide.host_id)
}

// optional int32 record_num = 3;
 bool TransNightGuide::has_record_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void TransNightGuide::set_has_record_num() {
  _has_bits_[0] |= 0x00000004u;
}
 void TransNightGuide::clear_has_record_num() {
  _has_bits_[0] &= ~0x00000004u;
}
 void TransNightGuide::clear_record_num() {
  record_num_ = 0;
  clear_has_record_num();
}
 ::google::protobuf::int32 TransNightGuide::record_num() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.record_num)
  return record_num_;
}
 void TransNightGuide::set_record_num(::google::protobuf::int32 value) {
  set_has_record_num();
  record_num_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.record_num)
}

// repeated .YfqProtocol.TransNightGuide.NightGuideNode night_guide_node = 4;
 int TransNightGuide::night_guide_node_size() const {
  return night_guide_node_.size();
}
 void TransNightGuide::clear_night_guide_node() {
  night_guide_node_.Clear();
}
 const ::YfqProtocol::TransNightGuide_NightGuideNode& TransNightGuide::night_guide_node(int index) const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.night_guide_node)
  return night_guide_node_.Get(index);
}
 ::YfqProtocol::TransNightGuide_NightGuideNode* TransNightGuide::mutable_night_guide_node(int index) {
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransNightGuide.night_guide_node)
  return night_guide_node_.Mutable(index);
}
 ::YfqProtocol::TransNightGuide_NightGuideNode* TransNightGuide::add_night_guide_node() {
  // @@protoc_insertion_point(field_add:YfqProtocol.TransNightGuide.night_guide_node)
  return night_guide_node_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransNightGuide_NightGuideNode >&
TransNightGuide::night_guide_node() const {
  // @@protoc_insertion_point(field_list:YfqProtocol.TransNightGuide.night_guide_node)
  return night_guide_node_;
}
 ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransNightGuide_NightGuideNode >*
TransNightGuide::mutable_night_guide_node() {
  // @@protoc_insertion_point(field_mutable_list:YfqProtocol.TransNightGuide.night_guide_node)
  return &night_guide_node_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int TransBloodPressure::kUserIdFieldNumber;
const int TransBloodPressure::kHostIdFieldNumber;
const int TransBloodPressure::kSystolicPressureFieldNumber;
const int TransBloodPressure::kDiastolicPressureFieldNumber;
const int TransBloodPressure::kHeartBeatFieldNumber;
const int TransBloodPressure::kDateFieldNumber;
#endif  // !_MSC_VER

TransBloodPressure::TransBloodPressure()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.TransBloodPressure)
}

void TransBloodPressure::InitAsDefaultInstance() {
}

TransBloodPressure::TransBloodPressure(const TransBloodPressure& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.TransBloodPressure)
}

void TransBloodPressure::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  systolic_pressure_ = 0;
  diastolic_pressure_ = 0;
  heart_beat_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TransBloodPressure::~TransBloodPressure() {
  // @@protoc_insertion_point(destructor:YfqProtocol.TransBloodPressure)
  SharedDtor();
}

void TransBloodPressure::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TransBloodPressure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransBloodPressure::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransBloodPressure_descriptor_;
}

const TransBloodPressure& TransBloodPressure::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

TransBloodPressure* TransBloodPressure::default_instance_ = nullptr;

TransBloodPressure* TransBloodPressure::New(::google::protobuf::Arena* arena) const {
  TransBloodPressure* n = new TransBloodPressure;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void TransBloodPressure::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TransBloodPressure*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(systolic_pressure_, diastolic_pressure_);
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_host_id()) {
      host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    heart_beat_ = 0;
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TransBloodPressure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.TransBloodPressure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransBloodPressure.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_host_id;
        break;
      }

      // optional string host_id = 2;
      case 2: {
        if (tag == 18) {
         parse_host_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_id().data(), this->host_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransBloodPressure.host_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_systolic_pressure;
        break;
      }

      // optional float systolic_pressure = 3;
      case 3: {
        if (tag == 29) {
         parse_systolic_pressure:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &systolic_pressure_)));
          set_has_systolic_pressure();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_diastolic_pressure;
        break;
      }

      // optional float diastolic_pressure = 4;
      case 4: {
        if (tag == 37) {
         parse_diastolic_pressure:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &diastolic_pressure_)));
          set_has_diastolic_pressure();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_heart_beat;
        break;
      }

      // optional float heart_beat = 5;
      case 5: {
        if (tag == 45) {
         parse_heart_beat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &heart_beat_)));
          set_has_heart_beat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_date;
        break;
      }

      // optional string date = 6;
      case 6: {
        if (tag == 50) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransBloodPressure.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.TransBloodPressure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.TransBloodPressure)
  return false;
#undef DO_
}

void TransBloodPressure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.TransBloodPressure)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransBloodPressure.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransBloodPressure.host_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_id(), output);
  }

  // optional float systolic_pressure = 3;
  if (has_systolic_pressure()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->systolic_pressure(), output);
  }

  // optional float diastolic_pressure = 4;
  if (has_diastolic_pressure()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->diastolic_pressure(), output);
  }

  // optional float heart_beat = 5;
  if (has_heart_beat()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->heart_beat(), output);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransBloodPressure.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->date(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.TransBloodPressure)
}

::google::protobuf::uint8* TransBloodPressure::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.TransBloodPressure)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransBloodPressure.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransBloodPressure.host_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_id(), target);
  }

  // optional float systolic_pressure = 3;
  if (has_systolic_pressure()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->systolic_pressure(), target);
  }

  // optional float diastolic_pressure = 4;
  if (has_diastolic_pressure()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->diastolic_pressure(), target);
  }

  // optional float heart_beat = 5;
  if (has_heart_beat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->heart_beat(), target);
  }

  // optional string date = 6;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransBloodPressure.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->date(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.TransBloodPressure)
  return target;
}

int TransBloodPressure::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 63) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string host_id = 2;
    if (has_host_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_id());
    }

    // optional float systolic_pressure = 3;
    if (has_systolic_pressure()) {
      total_size += 1 + 4;
    }

    // optional float diastolic_pressure = 4;
    if (has_diastolic_pressure()) {
      total_size += 1 + 4;
    }

    // optional float heart_beat = 5;
    if (has_heart_beat()) {
      total_size += 1 + 4;
    }

    // optional string date = 6;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransBloodPressure::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransBloodPressure* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TransBloodPressure*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TransBloodPressure::MergeFrom(const TransBloodPressure& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_host_id()) {
      set_has_host_id();
      host_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_id_);
    }
    if (from.has_systolic_pressure()) {
      set_systolic_pressure(from.systolic_pressure());
    }
    if (from.has_diastolic_pressure()) {
      set_diastolic_pressure(from.diastolic_pressure());
    }
    if (from.has_heart_beat()) {
      set_heart_beat(from.heart_beat());
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TransBloodPressure::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransBloodPressure::CopyFrom(const TransBloodPressure& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransBloodPressure::IsInitialized() const {

  return true;
}

void TransBloodPressure::Swap(TransBloodPressure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransBloodPressure::InternalSwap(TransBloodPressure* other) {
  user_id_.Swap(&other->user_id_);
  host_id_.Swap(&other->host_id_);
  std::swap(systolic_pressure_, other->systolic_pressure_);
  std::swap(diastolic_pressure_, other->diastolic_pressure_);
  std::swap(heart_beat_, other->heart_beat_);
  date_.Swap(&other->date_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransBloodPressure::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransBloodPressure_descriptor_;
  metadata.reflection = TransBloodPressure_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransBloodPressure

// optional string user_id = 1;
 bool TransBloodPressure::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void TransBloodPressure::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void TransBloodPressure::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void TransBloodPressure::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& TransBloodPressure::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBloodPressure.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransBloodPressure::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBloodPressure.user_id)
}
 void TransBloodPressure::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransBloodPressure.user_id)
}
 void TransBloodPressure::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransBloodPressure.user_id)
}
 ::std::string* TransBloodPressure::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBloodPressure.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransBloodPressure::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransBloodPressure::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransBloodPressure.user_id)
}

// optional string host_id = 2;
 bool TransBloodPressure::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void TransBloodPressure::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void TransBloodPressure::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void TransBloodPressure::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
 const ::std::string& TransBloodPressure::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBloodPressure.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransBloodPressure::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBloodPressure.host_id)
}
 void TransBloodPressure::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransBloodPressure.host_id)
}
 void TransBloodPressure::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransBloodPressure.host_id)
}
 ::std::string* TransBloodPressure::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBloodPressure.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransBloodPressure::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransBloodPressure::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransBloodPressure.host_id)
}

// optional float systolic_pressure = 3;
 bool TransBloodPressure::has_systolic_pressure() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void TransBloodPressure::set_has_systolic_pressure() {
  _has_bits_[0] |= 0x00000004u;
}
 void TransBloodPressure::clear_has_systolic_pressure() {
  _has_bits_[0] &= ~0x00000004u;
}
 void TransBloodPressure::clear_systolic_pressure() {
  systolic_pressure_ = 0;
  clear_has_systolic_pressure();
}
 float TransBloodPressure::systolic_pressure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBloodPressure.systolic_pressure)
  return systolic_pressure_;
}
 void TransBloodPressure::set_systolic_pressure(float value) {
  set_has_systolic_pressure();
  systolic_pressure_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBloodPressure.systolic_pressure)
}

// optional float diastolic_pressure = 4;
 bool TransBloodPressure::has_diastolic_pressure() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void TransBloodPressure::set_has_diastolic_pressure() {
  _has_bits_[0] |= 0x00000008u;
}
 void TransBloodPressure::clear_has_diastolic_pressure() {
  _has_bits_[0] &= ~0x00000008u;
}
 void TransBloodPressure::clear_diastolic_pressure() {
  diastolic_pressure_ = 0;
  clear_has_diastolic_pressure();
}
 float TransBloodPressure::diastolic_pressure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBloodPressure.diastolic_pressure)
  return diastolic_pressure_;
}
 void TransBloodPressure::set_diastolic_pressure(float value) {
  set_has_diastolic_pressure();
  diastolic_pressure_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBloodPressure.diastolic_pressure)
}

// optional float heart_beat = 5;
 bool TransBloodPressure::has_heart_beat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void TransBloodPressure::set_has_heart_beat() {
  _has_bits_[0] |= 0x00000010u;
}
 void TransBloodPressure::clear_has_heart_beat() {
  _has_bits_[0] &= ~0x00000010u;
}
 void TransBloodPressure::clear_heart_beat() {
  heart_beat_ = 0;
  clear_has_heart_beat();
}
 float TransBloodPressure::heart_beat() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBloodPressure.heart_beat)
  return heart_beat_;
}
 void TransBloodPressure::set_heart_beat(float value) {
  set_has_heart_beat();
  heart_beat_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBloodPressure.heart_beat)
}

// optional string date = 6;
 bool TransBloodPressure::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void TransBloodPressure::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
 void TransBloodPressure::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
 void TransBloodPressure::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& TransBloodPressure::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBloodPressure.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransBloodPressure::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBloodPressure.date)
}
 void TransBloodPressure::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransBloodPressure.date)
}
 void TransBloodPressure::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransBloodPressure.date)
}
 ::std::string* TransBloodPressure::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBloodPressure.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransBloodPressure::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransBloodPressure::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransBloodPressure.date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int TransBodyComposition_BodyComposition::kSexFieldNumber;
const int TransBodyComposition_BodyComposition::kAgeFieldNumber;
const int TransBodyComposition_BodyComposition::kHeightFieldNumber;
const int TransBodyComposition_BodyComposition::kWeightFieldNumber;
const int TransBodyComposition_BodyComposition::kSportLevelFieldNumber;
const int TransBodyComposition_BodyComposition::kBmiFieldNumber;
const int TransBodyComposition_BodyComposition::kFatLevelFieldNumber;
const int TransBodyComposition_BodyComposition::kWaterLevelFieldNumber;
const int TransBodyComposition_BodyComposition::kMuscleFieldNumber;
const int TransBodyComposition_BodyComposition::kBonesFieldNumber;
const int TransBodyComposition_BodyComposition::kViscusFieldNumber;
const int TransBodyComposition_BodyComposition::kHeatFieldNumber;
const int TransBodyComposition_BodyComposition::kBodyResistiveFieldNumber;
const int TransBodyComposition_BodyComposition::kDateFieldNumber;
#endif  // !_MSC_VER

TransBodyComposition_BodyComposition::TransBodyComposition_BodyComposition()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.TransBodyComposition.BodyComposition)
}

void TransBodyComposition_BodyComposition::InitAsDefaultInstance() {
}

TransBodyComposition_BodyComposition::TransBodyComposition_BodyComposition(const TransBodyComposition_BodyComposition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.TransBodyComposition.BodyComposition)
}

void TransBodyComposition_BodyComposition::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  sex_ = 0;
  age_ = 0;
  height_ = 0;
  weight_ = 0;
  sport_level_ = 0;
  bmi_ = 0;
  fat_level_ = 0;
  water_level_ = 0;
  muscle_ = 0;
  bones_ = 0;
  viscus_ = 0;
  heat_ = 0;
  body_resistive_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TransBodyComposition_BodyComposition::~TransBodyComposition_BodyComposition() {
  // @@protoc_insertion_point(destructor:YfqProtocol.TransBodyComposition.BodyComposition)
  SharedDtor();
}

void TransBodyComposition_BodyComposition::SharedDtor() {
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TransBodyComposition_BodyComposition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransBodyComposition_BodyComposition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransBodyComposition_BodyComposition_descriptor_;
}

const TransBodyComposition_BodyComposition& TransBodyComposition_BodyComposition::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

TransBodyComposition_BodyComposition* TransBodyComposition_BodyComposition::default_instance_ = nullptr;

TransBodyComposition_BodyComposition* TransBodyComposition_BodyComposition::New(::google::protobuf::Arena* arena) const {
  TransBodyComposition_BodyComposition* n = new TransBodyComposition_BodyComposition;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void TransBodyComposition_BodyComposition::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TransBodyComposition_BodyComposition*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(sex_, water_level_);
  }
  if (_has_bits_[8 / 32] & 16128) {
    ZR_(muscle_, heat_);
    body_resistive_ = 0;
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TransBodyComposition_BodyComposition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.TransBodyComposition.BodyComposition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_age;
        break;
      }

      // optional int32 age = 2;
      case 2: {
        if (tag == 16) {
         parse_age:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
          set_has_age();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_height;
        break;
      }

      // optional int32 height = 3;
      case 3: {
        if (tag == 24) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_weight;
        break;
      }

      // optional float weight = 4;
      case 4: {
        if (tag == 37) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_sport_level;
        break;
      }

      // optional int32 sport_level = 5;
      case 5: {
        if (tag == 40) {
         parse_sport_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sport_level_)));
          set_has_sport_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_bmi;
        break;
      }

      // optional float bmi = 6;
      case 6: {
        if (tag == 53) {
         parse_bmi:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bmi_)));
          set_has_bmi();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_fat_level;
        break;
      }

      // optional float fat_level = 7;
      case 7: {
        if (tag == 61) {
         parse_fat_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fat_level_)));
          set_has_fat_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_water_level;
        break;
      }

      // optional float water_level = 8;
      case 8: {
        if (tag == 69) {
         parse_water_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &water_level_)));
          set_has_water_level();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(77)) goto parse_muscle;
        break;
      }

      // optional float muscle = 9;
      case 9: {
        if (tag == 77) {
         parse_muscle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &muscle_)));
          set_has_muscle();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(85)) goto parse_bones;
        break;
      }

      // optional float bones = 10;
      case 10: {
        if (tag == 85) {
         parse_bones:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bones_)));
          set_has_bones();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_viscus;
        break;
      }

      // optional int32 viscus = 11;
      case 11: {
        if (tag == 88) {
         parse_viscus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viscus_)));
          set_has_viscus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_heat;
        break;
      }

      // optional int32 heat = 12;
      case 12: {
        if (tag == 96) {
         parse_heat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &heat_)));
          set_has_heat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_body_resistive;
        break;
      }

      // optional int32 body_resistive = 13;
      case 13: {
        if (tag == 104) {
         parse_body_resistive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &body_resistive_)));
          set_has_body_resistive();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_date;
        break;
      }

      // optional string date = 14;
      case 14: {
        if (tag == 114) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransBodyComposition.BodyComposition.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.TransBodyComposition.BodyComposition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.TransBodyComposition.BodyComposition)
  return false;
#undef DO_
}

void TransBodyComposition_BodyComposition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.TransBodyComposition.BodyComposition)
  // optional int32 sex = 1;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sex(), output);
  }

  // optional int32 age = 2;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->age(), output);
  }

  // optional int32 height = 3;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height(), output);
  }

  // optional float weight = 4;
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->weight(), output);
  }

  // optional int32 sport_level = 5;
  if (has_sport_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sport_level(), output);
  }

  // optional float bmi = 6;
  if (has_bmi()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->bmi(), output);
  }

  // optional float fat_level = 7;
  if (has_fat_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->fat_level(), output);
  }

  // optional float water_level = 8;
  if (has_water_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->water_level(), output);
  }

  // optional float muscle = 9;
  if (has_muscle()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->muscle(), output);
  }

  // optional float bones = 10;
  if (has_bones()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->bones(), output);
  }

  // optional int32 viscus = 11;
  if (has_viscus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->viscus(), output);
  }

  // optional int32 heat = 12;
  if (has_heat()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->heat(), output);
  }

  // optional int32 body_resistive = 13;
  if (has_body_resistive()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->body_resistive(), output);
  }

  // optional string date = 14;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransBodyComposition.BodyComposition.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->date(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.TransBodyComposition.BodyComposition)
}

::google::protobuf::uint8* TransBodyComposition_BodyComposition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.TransBodyComposition.BodyComposition)
  // optional int32 sex = 1;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sex(), target);
  }

  // optional int32 age = 2;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->age(), target);
  }

  // optional int32 height = 3;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->height(), target);
  }

  // optional float weight = 4;
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->weight(), target);
  }

  // optional int32 sport_level = 5;
  if (has_sport_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sport_level(), target);
  }

  // optional float bmi = 6;
  if (has_bmi()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->bmi(), target);
  }

  // optional float fat_level = 7;
  if (has_fat_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->fat_level(), target);
  }

  // optional float water_level = 8;
  if (has_water_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->water_level(), target);
  }

  // optional float muscle = 9;
  if (has_muscle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->muscle(), target);
  }

  // optional float bones = 10;
  if (has_bones()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->bones(), target);
  }

  // optional int32 viscus = 11;
  if (has_viscus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->viscus(), target);
  }

  // optional int32 heat = 12;
  if (has_heat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->heat(), target);
  }

  // optional int32 body_resistive = 13;
  if (has_body_resistive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->body_resistive(), target);
  }

  // optional string date = 14;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransBodyComposition.BodyComposition.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->date(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.TransBodyComposition.BodyComposition)
  return target;
}

int TransBodyComposition_BodyComposition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional int32 sex = 1;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }

    // optional int32 age = 2;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

    // optional int32 height = 3;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }

    // optional float weight = 4;
    if (has_weight()) {
      total_size += 1 + 4;
    }

    // optional int32 sport_level = 5;
    if (has_sport_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sport_level());
    }

    // optional float bmi = 6;
    if (has_bmi()) {
      total_size += 1 + 4;
    }

    // optional float fat_level = 7;
    if (has_fat_level()) {
      total_size += 1 + 4;
    }

    // optional float water_level = 8;
    if (has_water_level()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[8 / 32] & 16128) {
    // optional float muscle = 9;
    if (has_muscle()) {
      total_size += 1 + 4;
    }

    // optional float bones = 10;
    if (has_bones()) {
      total_size += 1 + 4;
    }

    // optional int32 viscus = 11;
    if (has_viscus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viscus());
    }

    // optional int32 heat = 12;
    if (has_heat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->heat());
    }

    // optional int32 body_resistive = 13;
    if (has_body_resistive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->body_resistive());
    }

    // optional string date = 14;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransBodyComposition_BodyComposition::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransBodyComposition_BodyComposition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TransBodyComposition_BodyComposition*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TransBodyComposition_BodyComposition::MergeFrom(const TransBodyComposition_BodyComposition& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_weight()) {
      set_weight(from.weight());
    }
    if (from.has_sport_level()) {
      set_sport_level(from.sport_level());
    }
    if (from.has_bmi()) {
      set_bmi(from.bmi());
    }
    if (from.has_fat_level()) {
      set_fat_level(from.fat_level());
    }
    if (from.has_water_level()) {
      set_water_level(from.water_level());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_muscle()) {
      set_muscle(from.muscle());
    }
    if (from.has_bones()) {
      set_bones(from.bones());
    }
    if (from.has_viscus()) {
      set_viscus(from.viscus());
    }
    if (from.has_heat()) {
      set_heat(from.heat());
    }
    if (from.has_body_resistive()) {
      set_body_resistive(from.body_resistive());
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TransBodyComposition_BodyComposition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransBodyComposition_BodyComposition::CopyFrom(const TransBodyComposition_BodyComposition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransBodyComposition_BodyComposition::IsInitialized() const {

  return true;
}

void TransBodyComposition_BodyComposition::Swap(TransBodyComposition_BodyComposition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransBodyComposition_BodyComposition::InternalSwap(TransBodyComposition_BodyComposition* other) {
  std::swap(sex_, other->sex_);
  std::swap(age_, other->age_);
  std::swap(height_, other->height_);
  std::swap(weight_, other->weight_);
  std::swap(sport_level_, other->sport_level_);
  std::swap(bmi_, other->bmi_);
  std::swap(fat_level_, other->fat_level_);
  std::swap(water_level_, other->water_level_);
  std::swap(muscle_, other->muscle_);
  std::swap(bones_, other->bones_);
  std::swap(viscus_, other->viscus_);
  std::swap(heat_, other->heat_);
  std::swap(body_resistive_, other->body_resistive_);
  date_.Swap(&other->date_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransBodyComposition_BodyComposition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransBodyComposition_BodyComposition_descriptor_;
  metadata.reflection = TransBodyComposition_BodyComposition_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TransBodyComposition::kUserIdFieldNumber;
const int TransBodyComposition::kHostIdFieldNumber;
const int TransBodyComposition::kRecordNumFieldNumber;
const int TransBodyComposition::kBodyListFieldNumber;
#endif  // !_MSC_VER

TransBodyComposition::TransBodyComposition()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.TransBodyComposition)
}

void TransBodyComposition::InitAsDefaultInstance() {
}

TransBodyComposition::TransBodyComposition(const TransBodyComposition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.TransBodyComposition)
}

void TransBodyComposition::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  record_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TransBodyComposition::~TransBodyComposition() {
  // @@protoc_insertion_point(destructor:YfqProtocol.TransBodyComposition)
  SharedDtor();
}

void TransBodyComposition::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TransBodyComposition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransBodyComposition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransBodyComposition_descriptor_;
}

const TransBodyComposition& TransBodyComposition::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

TransBodyComposition* TransBodyComposition::default_instance_ = nullptr;

TransBodyComposition* TransBodyComposition::New(::google::protobuf::Arena* arena) const {
  TransBodyComposition* n = new TransBodyComposition;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void TransBodyComposition::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_host_id()) {
      host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    record_num_ = 0;
  }
  body_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TransBodyComposition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.TransBodyComposition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransBodyComposition.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_host_id;
        break;
      }

      // optional string host_id = 2;
      case 2: {
        if (tag == 18) {
         parse_host_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_id().data(), this->host_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransBodyComposition.host_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_record_num;
        break;
      }

      // optional int32 record_num = 3;
      case 3: {
        if (tag == 24) {
         parse_record_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &record_num_)));
          set_has_record_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_body_list;
        break;
      }

      // repeated .YfqProtocol.TransBodyComposition.BodyComposition body_list = 4;
      case 4: {
        if (tag == 34) {
         parse_body_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_body_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_body_list;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.TransBodyComposition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.TransBodyComposition)
  return false;
#undef DO_
}

void TransBodyComposition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.TransBodyComposition)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransBodyComposition.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransBodyComposition.host_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_id(), output);
  }

  // optional int32 record_num = 3;
  if (has_record_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->record_num(), output);
  }

  // repeated .YfqProtocol.TransBodyComposition.BodyComposition body_list = 4;
  for (unsigned int i = 0, n = this->body_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->body_list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.TransBodyComposition)
}

::google::protobuf::uint8* TransBodyComposition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.TransBodyComposition)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransBodyComposition.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransBodyComposition.host_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_id(), target);
  }

  // optional int32 record_num = 3;
  if (has_record_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->record_num(), target);
  }

  // repeated .YfqProtocol.TransBodyComposition.BodyComposition body_list = 4;
  for (unsigned int i = 0, n = this->body_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->body_list(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.TransBodyComposition)
  return target;
}

int TransBodyComposition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string host_id = 2;
    if (has_host_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_id());
    }

    // optional int32 record_num = 3;
    if (has_record_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->record_num());
    }

  }
  // repeated .YfqProtocol.TransBodyComposition.BodyComposition body_list = 4;
  total_size += 1 * this->body_list_size();
  for (int i = 0; i < this->body_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->body_list(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransBodyComposition::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransBodyComposition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TransBodyComposition*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TransBodyComposition::MergeFrom(const TransBodyComposition& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  body_list_.MergeFrom(from.body_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_host_id()) {
      set_has_host_id();
      host_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_id_);
    }
    if (from.has_record_num()) {
      set_record_num(from.record_num());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TransBodyComposition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransBodyComposition::CopyFrom(const TransBodyComposition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransBodyComposition::IsInitialized() const {

  return true;
}

void TransBodyComposition::Swap(TransBodyComposition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransBodyComposition::InternalSwap(TransBodyComposition* other) {
  user_id_.Swap(&other->user_id_);
  host_id_.Swap(&other->host_id_);
  std::swap(record_num_, other->record_num_);
  body_list_.UnsafeArenaSwap(&other->body_list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransBodyComposition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransBodyComposition_descriptor_;
  metadata.reflection = TransBodyComposition_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransBodyComposition_BodyComposition

// optional int32 sex = 1;
 bool TransBodyComposition_BodyComposition::has_sex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_sex() {
  _has_bits_[0] |= 0x00000001u;
}
 void TransBodyComposition_BodyComposition::clear_has_sex() {
  _has_bits_[0] &= ~0x00000001u;
}
 void TransBodyComposition_BodyComposition::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
 ::google::protobuf::int32 TransBodyComposition_BodyComposition::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.sex)
  return sex_;
}
 void TransBodyComposition_BodyComposition::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.sex)
}

// optional int32 age = 2;
 bool TransBodyComposition_BodyComposition::has_age() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_age() {
  _has_bits_[0] |= 0x00000002u;
}
 void TransBodyComposition_BodyComposition::clear_has_age() {
  _has_bits_[0] &= ~0x00000002u;
}
 void TransBodyComposition_BodyComposition::clear_age() {
  age_ = 0;
  clear_has_age();
}
 ::google::protobuf::int32 TransBodyComposition_BodyComposition::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.age)
  return age_;
}
 void TransBodyComposition_BodyComposition::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.age)
}

// optional int32 height = 3;
 bool TransBodyComposition_BodyComposition::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
 void TransBodyComposition_BodyComposition::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
 void TransBodyComposition_BodyComposition::clear_height() {
  height_ = 0;
  clear_has_height();
}
 ::google::protobuf::int32 TransBodyComposition_BodyComposition::height() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.height)
  return height_;
}
 void TransBodyComposition_BodyComposition::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.height)
}

// optional float weight = 4;
 bool TransBodyComposition_BodyComposition::has_weight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_weight() {
  _has_bits_[0] |= 0x00000008u;
}
 void TransBodyComposition_BodyComposition::clear_has_weight() {
  _has_bits_[0] &= ~0x00000008u;
}
 void TransBodyComposition_BodyComposition::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
 float TransBodyComposition_BodyComposition::weight() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.weight)
  return weight_;
}
 void TransBodyComposition_BodyComposition::set_weight(float value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.weight)
}

// optional int32 sport_level = 5;
 bool TransBodyComposition_BodyComposition::has_sport_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_sport_level() {
  _has_bits_[0] |= 0x00000010u;
}
 void TransBodyComposition_BodyComposition::clear_has_sport_level() {
  _has_bits_[0] &= ~0x00000010u;
}
 void TransBodyComposition_BodyComposition::clear_sport_level() {
  sport_level_ = 0;
  clear_has_sport_level();
}
 ::google::protobuf::int32 TransBodyComposition_BodyComposition::sport_level() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.sport_level)
  return sport_level_;
}
 void TransBodyComposition_BodyComposition::set_sport_level(::google::protobuf::int32 value) {
  set_has_sport_level();
  sport_level_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.sport_level)
}

// optional float bmi = 6;
 bool TransBodyComposition_BodyComposition::has_bmi() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_bmi() {
  _has_bits_[0] |= 0x00000020u;
}
 void TransBodyComposition_BodyComposition::clear_has_bmi() {
  _has_bits_[0] &= ~0x00000020u;
}
 void TransBodyComposition_BodyComposition::clear_bmi() {
  bmi_ = 0;
  clear_has_bmi();
}
 float TransBodyComposition_BodyComposition::bmi() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.bmi)
  return bmi_;
}
 void TransBodyComposition_BodyComposition::set_bmi(float value) {
  set_has_bmi();
  bmi_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.bmi)
}

// optional float fat_level = 7;
 bool TransBodyComposition_BodyComposition::has_fat_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_fat_level() {
  _has_bits_[0] |= 0x00000040u;
}
 void TransBodyComposition_BodyComposition::clear_has_fat_level() {
  _has_bits_[0] &= ~0x00000040u;
}
 void TransBodyComposition_BodyComposition::clear_fat_level() {
  fat_level_ = 0;
  clear_has_fat_level();
}
 float TransBodyComposition_BodyComposition::fat_level() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.fat_level)
  return fat_level_;
}
 void TransBodyComposition_BodyComposition::set_fat_level(float value) {
  set_has_fat_level();
  fat_level_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.fat_level)
}

// optional float water_level = 8;
 bool TransBodyComposition_BodyComposition::has_water_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_water_level() {
  _has_bits_[0] |= 0x00000080u;
}
 void TransBodyComposition_BodyComposition::clear_has_water_level() {
  _has_bits_[0] &= ~0x00000080u;
}
 void TransBodyComposition_BodyComposition::clear_water_level() {
  water_level_ = 0;
  clear_has_water_level();
}
 float TransBodyComposition_BodyComposition::water_level() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.water_level)
  return water_level_;
}
 void TransBodyComposition_BodyComposition::set_water_level(float value) {
  set_has_water_level();
  water_level_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.water_level)
}

// optional float muscle = 9;
 bool TransBodyComposition_BodyComposition::has_muscle() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_muscle() {
  _has_bits_[0] |= 0x00000100u;
}
 void TransBodyComposition_BodyComposition::clear_has_muscle() {
  _has_bits_[0] &= ~0x00000100u;
}
 void TransBodyComposition_BodyComposition::clear_muscle() {
  muscle_ = 0;
  clear_has_muscle();
}
 float TransBodyComposition_BodyComposition::muscle() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.muscle)
  return muscle_;
}
 void TransBodyComposition_BodyComposition::set_muscle(float value) {
  set_has_muscle();
  muscle_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.muscle)
}

// optional float bones = 10;
 bool TransBodyComposition_BodyComposition::has_bones() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_bones() {
  _has_bits_[0] |= 0x00000200u;
}
 void TransBodyComposition_BodyComposition::clear_has_bones() {
  _has_bits_[0] &= ~0x00000200u;
}
 void TransBodyComposition_BodyComposition::clear_bones() {
  bones_ = 0;
  clear_has_bones();
}
 float TransBodyComposition_BodyComposition::bones() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.bones)
  return bones_;
}
 void TransBodyComposition_BodyComposition::set_bones(float value) {
  set_has_bones();
  bones_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.bones)
}

// optional int32 viscus = 11;
 bool TransBodyComposition_BodyComposition::has_viscus() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_viscus() {
  _has_bits_[0] |= 0x00000400u;
}
 void TransBodyComposition_BodyComposition::clear_has_viscus() {
  _has_bits_[0] &= ~0x00000400u;
}
 void TransBodyComposition_BodyComposition::clear_viscus() {
  viscus_ = 0;
  clear_has_viscus();
}
 ::google::protobuf::int32 TransBodyComposition_BodyComposition::viscus() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.viscus)
  return viscus_;
}
 void TransBodyComposition_BodyComposition::set_viscus(::google::protobuf::int32 value) {
  set_has_viscus();
  viscus_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.viscus)
}

// optional int32 heat = 12;
 bool TransBodyComposition_BodyComposition::has_heat() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_heat() {
  _has_bits_[0] |= 0x00000800u;
}
 void TransBodyComposition_BodyComposition::clear_has_heat() {
  _has_bits_[0] &= ~0x00000800u;
}
 void TransBodyComposition_BodyComposition::clear_heat() {
  heat_ = 0;
  clear_has_heat();
}
 ::google::protobuf::int32 TransBodyComposition_BodyComposition::heat() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.heat)
  return heat_;
}
 void TransBodyComposition_BodyComposition::set_heat(::google::protobuf::int32 value) {
  set_has_heat();
  heat_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.heat)
}

// optional int32 body_resistive = 13;
 bool TransBodyComposition_BodyComposition::has_body_resistive() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_body_resistive() {
  _has_bits_[0] |= 0x00001000u;
}
 void TransBodyComposition_BodyComposition::clear_has_body_resistive() {
  _has_bits_[0] &= ~0x00001000u;
}
 void TransBodyComposition_BodyComposition::clear_body_resistive() {
  body_resistive_ = 0;
  clear_has_body_resistive();
}
 ::google::protobuf::int32 TransBodyComposition_BodyComposition::body_resistive() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.body_resistive)
  return body_resistive_;
}
 void TransBodyComposition_BodyComposition::set_body_resistive(::google::protobuf::int32 value) {
  set_has_body_resistive();
  body_resistive_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.body_resistive)
}

// optional string date = 14;
 bool TransBodyComposition_BodyComposition::has_date() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
 void TransBodyComposition_BodyComposition::set_has_date() {
  _has_bits_[0] |= 0x00002000u;
}
 void TransBodyComposition_BodyComposition::clear_has_date() {
  _has_bits_[0] &= ~0x00002000u;
}
 void TransBodyComposition_BodyComposition::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& TransBodyComposition_BodyComposition::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransBodyComposition_BodyComposition::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.date)
}
 void TransBodyComposition_BodyComposition::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransBodyComposition.BodyComposition.date)
}
 void TransBodyComposition_BodyComposition::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransBodyComposition.BodyComposition.date)
}
 ::std::string* TransBodyComposition_BodyComposition::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBodyComposition.BodyComposition.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransBodyComposition_BodyComposition::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransBodyComposition_BodyComposition::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransBodyComposition.BodyComposition.date)
}

// -------------------------------------------------------------------

// TransBodyComposition

// optional string user_id = 1;
 bool TransBodyComposition::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void TransBodyComposition::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void TransBodyComposition::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void TransBodyComposition::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& TransBodyComposition::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransBodyComposition::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.user_id)
}
 void TransBodyComposition::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransBodyComposition.user_id)
}
 void TransBodyComposition::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransBodyComposition.user_id)
}
 ::std::string* TransBodyComposition::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBodyComposition.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransBodyComposition::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransBodyComposition::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransBodyComposition.user_id)
}

// optional string host_id = 2;
 bool TransBodyComposition::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void TransBodyComposition::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void TransBodyComposition::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void TransBodyComposition::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
 const ::std::string& TransBodyComposition::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransBodyComposition::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.host_id)
}
 void TransBodyComposition::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransBodyComposition.host_id)
}
 void TransBodyComposition::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransBodyComposition.host_id)
}
 ::std::string* TransBodyComposition::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBodyComposition.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransBodyComposition::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransBodyComposition::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransBodyComposition.host_id)
}

// optional int32 record_num = 3;
 bool TransBodyComposition::has_record_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void TransBodyComposition::set_has_record_num() {
  _has_bits_[0] |= 0x00000004u;
}
 void TransBodyComposition::clear_has_record_num() {
  _has_bits_[0] &= ~0x00000004u;
}
 void TransBodyComposition::clear_record_num() {
  record_num_ = 0;
  clear_has_record_num();
}
 ::google::protobuf::int32 TransBodyComposition::record_num() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.record_num)
  return record_num_;
}
 void TransBodyComposition::set_record_num(::google::protobuf::int32 value) {
  set_has_record_num();
  record_num_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.record_num)
}

// repeated .YfqProtocol.TransBodyComposition.BodyComposition body_list = 4;
 int TransBodyComposition::body_list_size() const {
  return body_list_.size();
}
 void TransBodyComposition::clear_body_list() {
  body_list_.Clear();
}
 const ::YfqProtocol::TransBodyComposition_BodyComposition& TransBodyComposition::body_list(int index) const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.body_list)
  return body_list_.Get(index);
}
 ::YfqProtocol::TransBodyComposition_BodyComposition* TransBodyComposition::mutable_body_list(int index) {
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBodyComposition.body_list)
  return body_list_.Mutable(index);
}
 ::YfqProtocol::TransBodyComposition_BodyComposition* TransBodyComposition::add_body_list() {
  // @@protoc_insertion_point(field_add:YfqProtocol.TransBodyComposition.body_list)
  return body_list_.Add();
}
 const ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransBodyComposition_BodyComposition >&
TransBodyComposition::body_list() const {
  // @@protoc_insertion_point(field_list:YfqProtocol.TransBodyComposition.body_list)
  return body_list_;
}
 ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransBodyComposition_BodyComposition >*
TransBodyComposition::mutable_body_list() {
  // @@protoc_insertion_point(field_mutable_list:YfqProtocol.TransBodyComposition.body_list)
  return &body_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int TransThermometer::kUserIdFieldNumber;
const int TransThermometer::kHostIdFieldNumber;
const int TransThermometer::kThermomValueFieldNumber;
const int TransThermometer::kDateFieldNumber;
#endif  // !_MSC_VER

TransThermometer::TransThermometer()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.TransThermometer)
}

void TransThermometer::InitAsDefaultInstance() {
}

TransThermometer::TransThermometer(const TransThermometer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.TransThermometer)
}

void TransThermometer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thermom_value_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TransThermometer::~TransThermometer() {
  // @@protoc_insertion_point(destructor:YfqProtocol.TransThermometer)
  SharedDtor();
}

void TransThermometer::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TransThermometer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransThermometer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransThermometer_descriptor_;
}

const TransThermometer& TransThermometer::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

TransThermometer* TransThermometer::default_instance_ = nullptr;

TransThermometer* TransThermometer::New(::google::protobuf::Arena* arena) const {
  TransThermometer* n = new TransThermometer;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void TransThermometer::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_host_id()) {
      host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    thermom_value_ = 0;
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TransThermometer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.TransThermometer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransThermometer.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_host_id;
        break;
      }

      // optional string host_id = 2;
      case 2: {
        if (tag == 18) {
         parse_host_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_id().data(), this->host_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransThermometer.host_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_thermom_value;
        break;
      }

      // optional float thermom_value = 3;
      case 3: {
        if (tag == 29) {
         parse_thermom_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &thermom_value_)));
          set_has_thermom_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_date;
        break;
      }

      // optional string date = 4;
      case 4: {
        if (tag == 34) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.TransThermometer.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.TransThermometer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.TransThermometer)
  return false;
#undef DO_
}

void TransThermometer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.TransThermometer)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransThermometer.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransThermometer.host_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_id(), output);
  }

  // optional float thermom_value = 3;
  if (has_thermom_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->thermom_value(), output);
  }

  // optional string date = 4;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransThermometer.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->date(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.TransThermometer)
}

::google::protobuf::uint8* TransThermometer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.TransThermometer)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransThermometer.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransThermometer.host_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_id(), target);
  }

  // optional float thermom_value = 3;
  if (has_thermom_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->thermom_value(), target);
  }

  // optional string date = 4;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.TransThermometer.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->date(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.TransThermometer)
  return target;
}

int TransThermometer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string host_id = 2;
    if (has_host_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_id());
    }

    // optional float thermom_value = 3;
    if (has_thermom_value()) {
      total_size += 1 + 4;
    }

    // optional string date = 4;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransThermometer::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransThermometer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TransThermometer*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TransThermometer::MergeFrom(const TransThermometer& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_host_id()) {
      set_has_host_id();
      host_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_id_);
    }
    if (from.has_thermom_value()) {
      set_thermom_value(from.thermom_value());
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TransThermometer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransThermometer::CopyFrom(const TransThermometer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransThermometer::IsInitialized() const {

  return true;
}

void TransThermometer::Swap(TransThermometer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransThermometer::InternalSwap(TransThermometer* other) {
  user_id_.Swap(&other->user_id_);
  host_id_.Swap(&other->host_id_);
  std::swap(thermom_value_, other->thermom_value_);
  date_.Swap(&other->date_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransThermometer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransThermometer_descriptor_;
  metadata.reflection = TransThermometer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransThermometer

// optional string user_id = 1;
 bool TransThermometer::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void TransThermometer::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void TransThermometer::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void TransThermometer::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& TransThermometer::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransThermometer.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransThermometer::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransThermometer.user_id)
}
 void TransThermometer::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransThermometer.user_id)
}
 void TransThermometer::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransThermometer.user_id)
}
 ::std::string* TransThermometer::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransThermometer.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransThermometer::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransThermometer::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransThermometer.user_id)
}

// optional string host_id = 2;
 bool TransThermometer::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void TransThermometer::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void TransThermometer::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void TransThermometer::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
 const ::std::string& TransThermometer::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransThermometer.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransThermometer::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransThermometer.host_id)
}
 void TransThermometer::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransThermometer.host_id)
}
 void TransThermometer::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransThermometer.host_id)
}
 ::std::string* TransThermometer::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransThermometer.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransThermometer::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransThermometer::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransThermometer.host_id)
}

// optional float thermom_value = 3;
 bool TransThermometer::has_thermom_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void TransThermometer::set_has_thermom_value() {
  _has_bits_[0] |= 0x00000004u;
}
 void TransThermometer::clear_has_thermom_value() {
  _has_bits_[0] &= ~0x00000004u;
}
 void TransThermometer::clear_thermom_value() {
  thermom_value_ = 0;
  clear_has_thermom_value();
}
 float TransThermometer::thermom_value() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransThermometer.thermom_value)
  return thermom_value_;
}
 void TransThermometer::set_thermom_value(float value) {
  set_has_thermom_value();
  thermom_value_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransThermometer.thermom_value)
}

// optional string date = 4;
 bool TransThermometer::has_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void TransThermometer::set_has_date() {
  _has_bits_[0] |= 0x00000008u;
}
 void TransThermometer::clear_has_date() {
  _has_bits_[0] &= ~0x00000008u;
}
 void TransThermometer::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& TransThermometer::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransThermometer.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransThermometer::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransThermometer.date)
}
 void TransThermometer::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransThermometer.date)
}
 void TransThermometer::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransThermometer.date)
}
 ::std::string* TransThermometer::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransThermometer.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TransThermometer::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TransThermometer::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransThermometer.date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int QualityLifeOrderLoadReq::kUserIdFieldNumber;
const int QualityLifeOrderLoadReq::kHostIdFieldNumber;
const int QualityLifeOrderLoadReq::kNotifyTypeFieldNumber;
#endif  // !_MSC_VER

QualityLifeOrderLoadReq::QualityLifeOrderLoadReq()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.QualityLifeOrderLoadReq)
}

void QualityLifeOrderLoadReq::InitAsDefaultInstance() {
}

QualityLifeOrderLoadReq::QualityLifeOrderLoadReq(const QualityLifeOrderLoadReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.QualityLifeOrderLoadReq)
}

void QualityLifeOrderLoadReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notify_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QualityLifeOrderLoadReq::~QualityLifeOrderLoadReq() {
  // @@protoc_insertion_point(destructor:YfqProtocol.QualityLifeOrderLoadReq)
  SharedDtor();
}

void QualityLifeOrderLoadReq::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QualityLifeOrderLoadReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QualityLifeOrderLoadReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QualityLifeOrderLoadReq_descriptor_;
}

const QualityLifeOrderLoadReq& QualityLifeOrderLoadReq::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

QualityLifeOrderLoadReq* QualityLifeOrderLoadReq::default_instance_ = nullptr;

QualityLifeOrderLoadReq* QualityLifeOrderLoadReq::New(::google::protobuf::Arena* arena) const {
  QualityLifeOrderLoadReq* n = new QualityLifeOrderLoadReq;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void QualityLifeOrderLoadReq::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_host_id()) {
      host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    notify_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QualityLifeOrderLoadReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.QualityLifeOrderLoadReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeOrderLoadReq.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_host_id;
        break;
      }

      // optional string host_id = 2;
      case 2: {
        if (tag == 18) {
         parse_host_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_id().data(), this->host_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeOrderLoadReq.host_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_notify_type;
        break;
      }

      // optional int32 notify_type = 3;
      case 3: {
        if (tag == 24) {
         parse_notify_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_type_)));
          set_has_notify_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.QualityLifeOrderLoadReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.QualityLifeOrderLoadReq)
  return false;
#undef DO_
}

void QualityLifeOrderLoadReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.QualityLifeOrderLoadReq)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeOrderLoadReq.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeOrderLoadReq.host_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_id(), output);
  }

  // optional int32 notify_type = 3;
  if (has_notify_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->notify_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.QualityLifeOrderLoadReq)
}

::google::protobuf::uint8* QualityLifeOrderLoadReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.QualityLifeOrderLoadReq)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeOrderLoadReq.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string host_id = 2;
  if (has_host_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_id().data(), this->host_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeOrderLoadReq.host_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_id(), target);
  }

  // optional int32 notify_type = 3;
  if (has_notify_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->notify_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.QualityLifeOrderLoadReq)
  return target;
}

int QualityLifeOrderLoadReq::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional string host_id = 2;
    if (has_host_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_id());
    }

    // optional int32 notify_type = 3;
    if (has_notify_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify_type());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QualityLifeOrderLoadReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QualityLifeOrderLoadReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QualityLifeOrderLoadReq*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QualityLifeOrderLoadReq::MergeFrom(const QualityLifeOrderLoadReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_host_id()) {
      set_has_host_id();
      host_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_id_);
    }
    if (from.has_notify_type()) {
      set_notify_type(from.notify_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QualityLifeOrderLoadReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QualityLifeOrderLoadReq::CopyFrom(const QualityLifeOrderLoadReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityLifeOrderLoadReq::IsInitialized() const {

  return true;
}

void QualityLifeOrderLoadReq::Swap(QualityLifeOrderLoadReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityLifeOrderLoadReq::InternalSwap(QualityLifeOrderLoadReq* other) {
  user_id_.Swap(&other->user_id_);
  host_id_.Swap(&other->host_id_);
  std::swap(notify_type_, other->notify_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QualityLifeOrderLoadReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QualityLifeOrderLoadReq_descriptor_;
  metadata.reflection = QualityLifeOrderLoadReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QualityLifeOrderLoadReq

// optional string user_id = 1;
 bool QualityLifeOrderLoadReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void QualityLifeOrderLoadReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void QualityLifeOrderLoadReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void QualityLifeOrderLoadReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& QualityLifeOrderLoadReq::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadReq.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeOrderLoadReq::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadReq.user_id)
}
 void QualityLifeOrderLoadReq::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeOrderLoadReq.user_id)
}
 void QualityLifeOrderLoadReq::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeOrderLoadReq.user_id)
}
 ::std::string* QualityLifeOrderLoadReq::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeOrderLoadReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeOrderLoadReq::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeOrderLoadReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeOrderLoadReq.user_id)
}

// optional string host_id = 2;
 bool QualityLifeOrderLoadReq::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void QualityLifeOrderLoadReq::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
 void QualityLifeOrderLoadReq::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
 void QualityLifeOrderLoadReq::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
 const ::std::string& QualityLifeOrderLoadReq::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadReq.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeOrderLoadReq::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadReq.host_id)
}
 void QualityLifeOrderLoadReq::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeOrderLoadReq.host_id)
}
 void QualityLifeOrderLoadReq::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeOrderLoadReq.host_id)
}
 ::std::string* QualityLifeOrderLoadReq::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeOrderLoadReq.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeOrderLoadReq::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeOrderLoadReq::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeOrderLoadReq.host_id)
}

// optional int32 notify_type = 3;
 bool QualityLifeOrderLoadReq::has_notify_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void QualityLifeOrderLoadReq::set_has_notify_type() {
  _has_bits_[0] |= 0x00000004u;
}
 void QualityLifeOrderLoadReq::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000004u;
}
 void QualityLifeOrderLoadReq::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
 ::google::protobuf::int32 QualityLifeOrderLoadReq::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadReq.notify_type)
  return notify_type_;
}
 void QualityLifeOrderLoadReq::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadReq.notify_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int QualityLifeOrderLoadAns::kUserIdFieldNumber;
const int QualityLifeOrderLoadAns::kNotifyTypeFieldNumber;
const int QualityLifeOrderLoadAns::kDateFieldNumber;
const int QualityLifeOrderLoadAns::kMaxOrderFieldNumber;
#endif  // !_MSC_VER

QualityLifeOrderLoadAns::QualityLifeOrderLoadAns()
  : ::google::protobuf::Message() , _internal_metadata_(nullptr)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:YfqProtocol.QualityLifeOrderLoadAns)
}

void QualityLifeOrderLoadAns::InitAsDefaultInstance() {
}

QualityLifeOrderLoadAns::QualityLifeOrderLoadAns(const QualityLifeOrderLoadAns& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(nullptr) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:YfqProtocol.QualityLifeOrderLoadAns)
}

void QualityLifeOrderLoadAns::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notify_type_ = 0;
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maxorder_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QualityLifeOrderLoadAns::~QualityLifeOrderLoadAns() {
  // @@protoc_insertion_point(destructor:YfqProtocol.QualityLifeOrderLoadAns)
  SharedDtor();
}

void QualityLifeOrderLoadAns::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void QualityLifeOrderLoadAns::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QualityLifeOrderLoadAns::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QualityLifeOrderLoadAns_descriptor_;
}

const QualityLifeOrderLoadAns& QualityLifeOrderLoadAns::default_instance() {
  if (default_instance_ == nullptr) protobuf_AddDesc_yfqprotoserver3_2eproto();
  return *default_instance_;
}

QualityLifeOrderLoadAns* QualityLifeOrderLoadAns::default_instance_ = nullptr;

QualityLifeOrderLoadAns* QualityLifeOrderLoadAns::New(::google::protobuf::Arena* arena) const {
  QualityLifeOrderLoadAns* n = new QualityLifeOrderLoadAns;
  if (arena != nullptr) {
    arena->Own(n);
  }
  return n;
}

void QualityLifeOrderLoadAns::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QualityLifeOrderLoadAns*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(notify_type_, maxorder_);
    if (has_user_id()) {
      user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_date()) {
      date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QualityLifeOrderLoadAns::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:YfqProtocol.QualityLifeOrderLoadAns)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeOrderLoadAns.user_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_notify_type;
        break;
      }

      // optional int32 notify_type = 2;
      case 2: {
        if (tag == 16) {
         parse_notify_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_type_)));
          set_has_notify_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_date;
        break;
      }

      // optional string date = 3;
      case 3: {
        if (tag == 26) {
         parse_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "YfqProtocol.QualityLifeOrderLoadAns.date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_maxOrder;
        break;
      }

      // optional int32 maxOrder = 4;
      case 4: {
        if (tag == 32) {
         parse_maxOrder:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxorder_)));
          set_has_maxorder();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:YfqProtocol.QualityLifeOrderLoadAns)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:YfqProtocol.QualityLifeOrderLoadAns)
  return false;
#undef DO_
}

void QualityLifeOrderLoadAns::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:YfqProtocol.QualityLifeOrderLoadAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeOrderLoadAns.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional int32 notify_type = 2;
  if (has_notify_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->notify_type(), output);
  }

  // optional string date = 3;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeOrderLoadAns.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->date(), output);
  }

  // optional int32 maxOrder = 4;
  if (has_maxorder()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->maxorder(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:YfqProtocol.QualityLifeOrderLoadAns)
}

::google::protobuf::uint8* QualityLifeOrderLoadAns::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:YfqProtocol.QualityLifeOrderLoadAns)
  // optional string user_id = 1;
  if (has_user_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeOrderLoadAns.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional int32 notify_type = 2;
  if (has_notify_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->notify_type(), target);
  }

  // optional string date = 3;
  if (has_date()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "YfqProtocol.QualityLifeOrderLoadAns.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->date(), target);
  }

  // optional int32 maxOrder = 4;
  if (has_maxorder()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->maxorder(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:YfqProtocol.QualityLifeOrderLoadAns)
  return target;
}

int QualityLifeOrderLoadAns::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15) {
    // optional string user_id = 1;
    if (has_user_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_id());
    }

    // optional int32 notify_type = 2;
    if (has_notify_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify_type());
    }

    // optional string date = 3;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->date());
    }

    // optional int32 maxOrder = 4;
    if (has_maxorder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxorder());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QualityLifeOrderLoadAns::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QualityLifeOrderLoadAns* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const QualityLifeOrderLoadAns*>(
      &from);
  if (source == nullptr) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QualityLifeOrderLoadAns::MergeFrom(const QualityLifeOrderLoadAns& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_id()) {
      set_has_user_id();
      user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
    }
    if (from.has_notify_type()) {
      set_notify_type(from.notify_type());
    }
    if (from.has_date()) {
      set_has_date();
      date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
    }
    if (from.has_maxorder()) {
      set_maxorder(from.maxorder());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QualityLifeOrderLoadAns::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QualityLifeOrderLoadAns::CopyFrom(const QualityLifeOrderLoadAns& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QualityLifeOrderLoadAns::IsInitialized() const {

  return true;
}

void QualityLifeOrderLoadAns::Swap(QualityLifeOrderLoadAns* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QualityLifeOrderLoadAns::InternalSwap(QualityLifeOrderLoadAns* other) {
  user_id_.Swap(&other->user_id_);
  std::swap(notify_type_, other->notify_type_);
  date_.Swap(&other->date_);
  std::swap(maxorder_, other->maxorder_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QualityLifeOrderLoadAns::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QualityLifeOrderLoadAns_descriptor_;
  metadata.reflection = QualityLifeOrderLoadAns_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QualityLifeOrderLoadAns

// optional string user_id = 1;
 bool QualityLifeOrderLoadAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void QualityLifeOrderLoadAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
 void QualityLifeOrderLoadAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
 void QualityLifeOrderLoadAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
 const ::std::string& QualityLifeOrderLoadAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeOrderLoadAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadAns.user_id)
}
 void QualityLifeOrderLoadAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeOrderLoadAns.user_id)
}
 void QualityLifeOrderLoadAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeOrderLoadAns.user_id)
}
 ::std::string* QualityLifeOrderLoadAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeOrderLoadAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeOrderLoadAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeOrderLoadAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeOrderLoadAns.user_id)
}

// optional int32 notify_type = 2;
 bool QualityLifeOrderLoadAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void QualityLifeOrderLoadAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000002u;
}
 void QualityLifeOrderLoadAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000002u;
}
 void QualityLifeOrderLoadAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
 ::google::protobuf::int32 QualityLifeOrderLoadAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadAns.notify_type)
  return notify_type_;
}
 void QualityLifeOrderLoadAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadAns.notify_type)
}

// optional string date = 3;
 bool QualityLifeOrderLoadAns::has_date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
 void QualityLifeOrderLoadAns::set_has_date() {
  _has_bits_[0] |= 0x00000004u;
}
 void QualityLifeOrderLoadAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000004u;
}
 void QualityLifeOrderLoadAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
 const ::std::string& QualityLifeOrderLoadAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeOrderLoadAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadAns.date)
}
 void QualityLifeOrderLoadAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeOrderLoadAns.date)
}
 void QualityLifeOrderLoadAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeOrderLoadAns.date)
}
 ::std::string* QualityLifeOrderLoadAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeOrderLoadAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* QualityLifeOrderLoadAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void QualityLifeOrderLoadAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeOrderLoadAns.date)
}

// optional int32 maxOrder = 4;
 bool QualityLifeOrderLoadAns::has_maxorder() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
 void QualityLifeOrderLoadAns::set_has_maxorder() {
  _has_bits_[0] |= 0x00000008u;
}
 void QualityLifeOrderLoadAns::clear_has_maxorder() {
  _has_bits_[0] &= ~0x00000008u;
}
 void QualityLifeOrderLoadAns::clear_maxorder() {
  maxorder_ = 0;
  clear_has_maxorder();
}
 ::google::protobuf::int32 QualityLifeOrderLoadAns::maxorder() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadAns.maxOrder)
  return maxorder_;
}
 void QualityLifeOrderLoadAns::set_maxorder(::google::protobuf::int32 value) {
  set_has_maxorder();
  maxorder_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadAns.maxOrder)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace YfqProtocol

// @@protoc_insertion_point(global_scope)
