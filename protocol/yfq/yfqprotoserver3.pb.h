// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yfqprotoserver3.proto

#ifndef PROTOBUF_yfqprotoserver3_2eproto__INCLUDED
#define PROTOBUF_yfqprotoserver3_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace YfqProtocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_yfqprotoserver3_2eproto();
void protobuf_AssignDesc_yfqprotoserver3_2eproto();
void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

class HeartBeat;
class CommonAns;
class LoginedUserInfo;
class QualityLifeNotifyReq;
class QualityLifeDayNotifyAns;
class QualityLifeWeekNotifyAns;
class QualityLifeMonthNotifyAns;
class QualityLifeSeasonNotifyAns;
class QualityLifeHalfYearNotifyAns;
class QualityLifeYearNotifyAns;
class TransHSKLHisData;
class TransNightGuide;
class TransNightGuide_NightGuideNode;
class TransBloodPressure;
class TransBodyComposition;
class TransBodyComposition_BodyComposition;
class TransThermometer;
class QualityLifeOrderLoadReq;
class QualityLifeOrderLoadAns;

enum CommonAns_Progress {
  CommonAns_Progress_Pending = 0,
  CommonAns_Progress_DOING = 1,
  CommonAns_Progress_DONE = 2
};
bool CommonAns_Progress_IsValid(int value);
const CommonAns_Progress CommonAns_Progress_Progress_MIN = CommonAns_Progress_Pending;
const CommonAns_Progress CommonAns_Progress_Progress_MAX = CommonAns_Progress_DONE;
const int CommonAns_Progress_Progress_ARRAYSIZE = CommonAns_Progress_Progress_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommonAns_Progress_descriptor();
inline const ::std::string& CommonAns_Progress_Name(CommonAns_Progress value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommonAns_Progress_descriptor(), value);
}
inline bool CommonAns_Progress_Parse(
    const ::std::string& name, CommonAns_Progress* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommonAns_Progress>(
    CommonAns_Progress_descriptor(), name, value);
}
// ===================================================================

class HeartBeat : public ::google::protobuf::Message {
 public:
  HeartBeat();
  virtual ~HeartBeat();

  HeartBeat(const HeartBeat& from);

  inline HeartBeat& operator=(const HeartBeat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeat& default_instance();

  void Swap(HeartBeat* other);

  // implements Message ----------------------------------------------

  inline HeartBeat* New() const { return New(nullptr); }

  HeartBeat* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeat& from);
  void MergeFrom(const HeartBeat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartBeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 date_time = 1;
  bool has_date_time() const;
  void clear_date_time();
  static const int kDateTimeFieldNumber = 1;
  ::google::protobuf::int64 date_time() const;
  void set_date_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:YfqProtocol.HeartBeat)
 private:
  inline void set_has_date_time();
  inline void clear_has_date_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 date_time_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static HeartBeat* default_instance_;
};
// -------------------------------------------------------------------

class CommonAns : public ::google::protobuf::Message {
 public:
  CommonAns();
  virtual ~CommonAns();

  CommonAns(const CommonAns& from);

  inline CommonAns& operator=(const CommonAns& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommonAns& default_instance();

  void Swap(CommonAns* other);

  // implements Message ----------------------------------------------

  inline CommonAns* New() const { return New(nullptr); }

  CommonAns* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommonAns& from);
  void MergeFrom(const CommonAns& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CommonAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CommonAns_Progress Progress;
  static const Progress Pending = CommonAns_Progress_Pending;
  static const Progress DOING = CommonAns_Progress_DOING;
  static const Progress DONE = CommonAns_Progress_DONE;
  static inline bool Progress_IsValid(int value) {
    return CommonAns_Progress_IsValid(value);
  }
  static const Progress Progress_MIN =
    CommonAns_Progress_Progress_MIN;
  static const Progress Progress_MAX =
    CommonAns_Progress_Progress_MAX;
  static const int Progress_ARRAYSIZE =
    CommonAns_Progress_Progress_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Progress_descriptor() {
    return CommonAns_Progress_descriptor();
  }
  static inline const ::std::string& Progress_Name(Progress value) {
    return CommonAns_Progress_Name(value);
  }
  static inline bool Progress_Parse(const ::std::string& name,
      Progress* value) {
    return CommonAns_Progress_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional int32 error_code = 1;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 1;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // optional int32 request_id = 2;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  ::google::protobuf::int32 request_id() const;
  void set_request_id(::google::protobuf::int32 value);

  // optional .YfqProtocol.CommonAns.Progress progress = 3;
  bool has_progress() const;
  void clear_progress();
  static const int kProgressFieldNumber = 3;
  ::YfqProtocol::CommonAns_Progress progress() const;
  void set_progress(::YfqProtocol::CommonAns_Progress value);

  // @@protoc_insertion_point(class_scope:YfqProtocol.CommonAns)
 private:
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_request_id();
  inline void clear_has_request_id();
  inline void set_has_progress();
  inline void clear_has_progress();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 error_code_;
  ::google::protobuf::int32 request_id_;
  int progress_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static CommonAns* default_instance_;
};
// -------------------------------------------------------------------

class LoginedUserInfo : public ::google::protobuf::Message {
 public:
  LoginedUserInfo();
  virtual ~LoginedUserInfo();

  LoginedUserInfo(const LoginedUserInfo& from);

  inline LoginedUserInfo& operator=(const LoginedUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginedUserInfo& default_instance();

  void Swap(LoginedUserInfo* other);

  // implements Message ----------------------------------------------

  inline LoginedUserInfo* New() const { return New(nullptr); }

  LoginedUserInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginedUserInfo& from);
  void MergeFrom(const LoginedUserInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginedUserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // @@protoc_insertion_point(class_scope:YfqProtocol.LoginedUserInfo)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static LoginedUserInfo* default_instance_;
};
// -------------------------------------------------------------------

class QualityLifeNotifyReq : public ::google::protobuf::Message {
 public:
  QualityLifeNotifyReq();
  virtual ~QualityLifeNotifyReq();

  QualityLifeNotifyReq(const QualityLifeNotifyReq& from);

  inline QualityLifeNotifyReq& operator=(const QualityLifeNotifyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QualityLifeNotifyReq& default_instance();

  void Swap(QualityLifeNotifyReq* other);

  // implements Message ----------------------------------------------

  inline QualityLifeNotifyReq* New() const { return New(nullptr); }

  QualityLifeNotifyReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QualityLifeNotifyReq& from);
  void MergeFrom(const QualityLifeNotifyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityLifeNotifyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string host_id = 2;
  bool has_host_id() const;
  void clear_host_id();
  static const int kHostIdFieldNumber = 2;
  const ::std::string& host_id() const;
  void set_host_id(const ::std::string& value);
  void set_host_id(const char* value);
  void set_host_id(const char* value, size_t size);
  ::std::string* mutable_host_id();
  ::std::string* release_host_id();
  void set_allocated_host_id(::std::string* host_id);

  // optional int32 notify_type = 3;
  bool has_notify_type() const;
  void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 3;
  ::google::protobuf::int32 notify_type() const;
  void set_notify_type(::google::protobuf::int32 value);

  // optional string date = 4;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 4;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional int32 order = 5;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 5;
  ::google::protobuf::int32 order() const;
  void set_order(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YfqProtocol.QualityLifeNotifyReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_host_id();
  inline void clear_has_host_id();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_order();
  inline void clear_has_order();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr host_id_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::int32 notify_type_;
  ::google::protobuf::int32 order_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static QualityLifeNotifyReq* default_instance_;
};
// -------------------------------------------------------------------

class QualityLifeDayNotifyAns : public ::google::protobuf::Message {
 public:
  QualityLifeDayNotifyAns();
  virtual ~QualityLifeDayNotifyAns();

  QualityLifeDayNotifyAns(const QualityLifeDayNotifyAns& from);

  inline QualityLifeDayNotifyAns& operator=(const QualityLifeDayNotifyAns& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QualityLifeDayNotifyAns& default_instance();

  void Swap(QualityLifeDayNotifyAns* other);

  // implements Message ----------------------------------------------

  inline QualityLifeDayNotifyAns* New() const { return New(nullptr); }

  QualityLifeDayNotifyAns* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QualityLifeDayNotifyAns& from);
  void MergeFrom(const QualityLifeDayNotifyAns& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityLifeDayNotifyAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string user_name = 2;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional int32 age = 3;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 3;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // optional int32 sex = 4;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 4;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 notify_type = 5;
  bool has_notify_type() const;
  void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 5;
  ::google::protobuf::int32 notify_type() const;
  void set_notify_type(::google::protobuf::int32 value);

  // optional string date = 6;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 6;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional int32 order = 7;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 7;
  ::google::protobuf::int32 order() const;
  void set_order(::google::protobuf::int32 value);

  // optional int32 health_score = 8;
  bool has_health_score() const;
  void clear_health_score();
  static const int kHealthScoreFieldNumber = 8;
  ::google::protobuf::int32 health_score() const;
  void set_health_score(::google::protobuf::int32 value);

  // optional string weather_relate = 9;
  bool has_weather_relate() const;
  void clear_weather_relate();
  static const int kWeatherRelateFieldNumber = 9;
  const ::std::string& weather_relate() const;
  void set_weather_relate(const ::std::string& value);
  void set_weather_relate(const char* value);
  void set_weather_relate(const char* value, size_t size);
  ::std::string* mutable_weather_relate();
  ::std::string* release_weather_relate();
  void set_allocated_weather_relate(::std::string* weather_relate);

  // optional string expert_segestion = 10;
  bool has_expert_segestion() const;
  void clear_expert_segestion();
  static const int kExpertSegestionFieldNumber = 10;
  const ::std::string& expert_segestion() const;
  void set_expert_segestion(const ::std::string& value);
  void set_expert_segestion(const char* value);
  void set_expert_segestion(const char* value, size_t size);
  ::std::string* mutable_expert_segestion();
  ::std::string* release_expert_segestion();
  void set_allocated_expert_segestion(::std::string* expert_segestion);

  // @@protoc_insertion_point(class_scope:YfqProtocol.QualityLifeDayNotifyAns)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_health_score();
  inline void clear_has_health_score();
  inline void set_has_weather_relate();
  inline void clear_has_weather_relate();
  inline void set_has_expert_segestion();
  inline void clear_has_expert_segestion();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::int32 notify_type_;
  ::google::protobuf::int32 order_;
  ::google::protobuf::internal::ArenaStringPtr weather_relate_;
  ::google::protobuf::internal::ArenaStringPtr expert_segestion_;
  ::google::protobuf::int32 health_score_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static QualityLifeDayNotifyAns* default_instance_;
};
// -------------------------------------------------------------------

class QualityLifeWeekNotifyAns : public ::google::protobuf::Message {
 public:
  QualityLifeWeekNotifyAns();
  virtual ~QualityLifeWeekNotifyAns();

  QualityLifeWeekNotifyAns(const QualityLifeWeekNotifyAns& from);

  inline QualityLifeWeekNotifyAns& operator=(const QualityLifeWeekNotifyAns& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QualityLifeWeekNotifyAns& default_instance();

  void Swap(QualityLifeWeekNotifyAns* other);

  // implements Message ----------------------------------------------

  inline QualityLifeWeekNotifyAns* New() const { return New(nullptr); }

  QualityLifeWeekNotifyAns* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QualityLifeWeekNotifyAns& from);
  void MergeFrom(const QualityLifeWeekNotifyAns& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityLifeWeekNotifyAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string user_name = 2;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional int32 age = 3;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 3;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // optional int32 sex = 4;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 4;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 notify_type = 5;
  bool has_notify_type() const;
  void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 5;
  ::google::protobuf::int32 notify_type() const;
  void set_notify_type(::google::protobuf::int32 value);

  // optional string date = 6;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 6;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional int32 order = 7;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 7;
  ::google::protobuf::int32 order() const;
  void set_order(::google::protobuf::int32 value);

  // optional int32 health_score = 8;
  bool has_health_score() const;
  void clear_health_score();
  static const int kHealthScoreFieldNumber = 8;
  ::google::protobuf::int32 health_score() const;
  void set_health_score(::google::protobuf::int32 value);

  // optional string expert_segestion = 9;
  bool has_expert_segestion() const;
  void clear_expert_segestion();
  static const int kExpertSegestionFieldNumber = 9;
  const ::std::string& expert_segestion() const;
  void set_expert_segestion(const ::std::string& value);
  void set_expert_segestion(const char* value);
  void set_expert_segestion(const char* value, size_t size);
  ::std::string* mutable_expert_segestion();
  ::std::string* release_expert_segestion();
  void set_allocated_expert_segestion(::std::string* expert_segestion);

  // optional string regular_act = 10;
  bool has_regular_act() const;
  void clear_regular_act();
  static const int kRegularActFieldNumber = 10;
  const ::std::string& regular_act() const;
  void set_regular_act(const ::std::string& value);
  void set_regular_act(const char* value);
  void set_regular_act(const char* value, size_t size);
  ::std::string* mutable_regular_act();
  ::std::string* release_regular_act();
  void set_allocated_regular_act(::std::string* regular_act);

  // optional string sleep_condition = 11;
  bool has_sleep_condition() const;
  void clear_sleep_condition();
  static const int kSleepConditionFieldNumber = 11;
  const ::std::string& sleep_condition() const;
  void set_sleep_condition(const ::std::string& value);
  void set_sleep_condition(const char* value);
  void set_sleep_condition(const char* value, size_t size);
  ::std::string* mutable_sleep_condition();
  ::std::string* release_sleep_condition();
  void set_allocated_sleep_condition(::std::string* sleep_condition);

  // optional string body_measure = 12;
  bool has_body_measure() const;
  void clear_body_measure();
  static const int kBodyMeasureFieldNumber = 12;
  const ::std::string& body_measure() const;
  void set_body_measure(const ::std::string& value);
  void set_body_measure(const char* value);
  void set_body_measure(const char* value, size_t size);
  ::std::string* mutable_body_measure();
  ::std::string* release_body_measure();
  void set_allocated_body_measure(::std::string* body_measure);

  // optional string run_scence = 13;
  bool has_run_scence() const;
  void clear_run_scence();
  static const int kRunScenceFieldNumber = 13;
  const ::std::string& run_scence() const;
  void set_run_scence(const ::std::string& value);
  void set_run_scence(const char* value);
  void set_run_scence(const char* value, size_t size);
  ::std::string* mutable_run_scence();
  ::std::string* release_run_scence();
  void set_allocated_run_scence(::std::string* run_scence);

  // optional string eat_nutrition = 14;
  bool has_eat_nutrition() const;
  void clear_eat_nutrition();
  static const int kEatNutritionFieldNumber = 14;
  const ::std::string& eat_nutrition() const;
  void set_eat_nutrition(const ::std::string& value);
  void set_eat_nutrition(const char* value);
  void set_eat_nutrition(const char* value, size_t size);
  ::std::string* mutable_eat_nutrition();
  ::std::string* release_eat_nutrition();
  void set_allocated_eat_nutrition(::std::string* eat_nutrition);

  // @@protoc_insertion_point(class_scope:YfqProtocol.QualityLifeWeekNotifyAns)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_health_score();
  inline void clear_has_health_score();
  inline void set_has_expert_segestion();
  inline void clear_has_expert_segestion();
  inline void set_has_regular_act();
  inline void clear_has_regular_act();
  inline void set_has_sleep_condition();
  inline void clear_has_sleep_condition();
  inline void set_has_body_measure();
  inline void clear_has_body_measure();
  inline void set_has_run_scence();
  inline void clear_has_run_scence();
  inline void set_has_eat_nutrition();
  inline void clear_has_eat_nutrition();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::int32 notify_type_;
  ::google::protobuf::int32 order_;
  ::google::protobuf::internal::ArenaStringPtr expert_segestion_;
  ::google::protobuf::internal::ArenaStringPtr regular_act_;
  ::google::protobuf::internal::ArenaStringPtr sleep_condition_;
  ::google::protobuf::internal::ArenaStringPtr body_measure_;
  ::google::protobuf::internal::ArenaStringPtr run_scence_;
  ::google::protobuf::internal::ArenaStringPtr eat_nutrition_;
  ::google::protobuf::int32 health_score_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static QualityLifeWeekNotifyAns* default_instance_;
};
// -------------------------------------------------------------------

class QualityLifeMonthNotifyAns : public ::google::protobuf::Message {
 public:
  QualityLifeMonthNotifyAns();
  virtual ~QualityLifeMonthNotifyAns();

  QualityLifeMonthNotifyAns(const QualityLifeMonthNotifyAns& from);

  inline QualityLifeMonthNotifyAns& operator=(const QualityLifeMonthNotifyAns& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QualityLifeMonthNotifyAns& default_instance();

  void Swap(QualityLifeMonthNotifyAns* other);

  // implements Message ----------------------------------------------

  inline QualityLifeMonthNotifyAns* New() const { return New(nullptr); }

  QualityLifeMonthNotifyAns* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QualityLifeMonthNotifyAns& from);
  void MergeFrom(const QualityLifeMonthNotifyAns& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityLifeMonthNotifyAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string user_name = 2;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional int32 age = 3;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 3;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // optional int32 sex = 4;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 4;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 notify_type = 5;
  bool has_notify_type() const;
  void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 5;
  ::google::protobuf::int32 notify_type() const;
  void set_notify_type(::google::protobuf::int32 value);

  // optional string date = 6;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 6;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional int32 order = 7;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 7;
  ::google::protobuf::int32 order() const;
  void set_order(::google::protobuf::int32 value);

  // optional int32 health_score = 8;
  bool has_health_score() const;
  void clear_health_score();
  static const int kHealthScoreFieldNumber = 8;
  ::google::protobuf::int32 health_score() const;
  void set_health_score(::google::protobuf::int32 value);

  // optional string expert_segestion = 9;
  bool has_expert_segestion() const;
  void clear_expert_segestion();
  static const int kExpertSegestionFieldNumber = 9;
  const ::std::string& expert_segestion() const;
  void set_expert_segestion(const ::std::string& value);
  void set_expert_segestion(const char* value);
  void set_expert_segestion(const char* value, size_t size);
  ::std::string* mutable_expert_segestion();
  ::std::string* release_expert_segestion();
  void set_allocated_expert_segestion(::std::string* expert_segestion);

  // optional string regular_act = 10;
  bool has_regular_act() const;
  void clear_regular_act();
  static const int kRegularActFieldNumber = 10;
  const ::std::string& regular_act() const;
  void set_regular_act(const ::std::string& value);
  void set_regular_act(const char* value);
  void set_regular_act(const char* value, size_t size);
  ::std::string* mutable_regular_act();
  ::std::string* release_regular_act();
  void set_allocated_regular_act(::std::string* regular_act);

  // optional string sleep_condition = 11;
  bool has_sleep_condition() const;
  void clear_sleep_condition();
  static const int kSleepConditionFieldNumber = 11;
  const ::std::string& sleep_condition() const;
  void set_sleep_condition(const ::std::string& value);
  void set_sleep_condition(const char* value);
  void set_sleep_condition(const char* value, size_t size);
  ::std::string* mutable_sleep_condition();
  ::std::string* release_sleep_condition();
  void set_allocated_sleep_condition(::std::string* sleep_condition);

  // optional string body_measure = 12;
  bool has_body_measure() const;
  void clear_body_measure();
  static const int kBodyMeasureFieldNumber = 12;
  const ::std::string& body_measure() const;
  void set_body_measure(const ::std::string& value);
  void set_body_measure(const char* value);
  void set_body_measure(const char* value, size_t size);
  ::std::string* mutable_body_measure();
  ::std::string* release_body_measure();
  void set_allocated_body_measure(::std::string* body_measure);

  // optional string run_scence = 13;
  bool has_run_scence() const;
  void clear_run_scence();
  static const int kRunScenceFieldNumber = 13;
  const ::std::string& run_scence() const;
  void set_run_scence(const ::std::string& value);
  void set_run_scence(const char* value);
  void set_run_scence(const char* value, size_t size);
  ::std::string* mutable_run_scence();
  ::std::string* release_run_scence();
  void set_allocated_run_scence(::std::string* run_scence);

  // optional string eat_nutrition = 14;
  bool has_eat_nutrition() const;
  void clear_eat_nutrition();
  static const int kEatNutritionFieldNumber = 14;
  const ::std::string& eat_nutrition() const;
  void set_eat_nutrition(const ::std::string& value);
  void set_eat_nutrition(const char* value);
  void set_eat_nutrition(const char* value, size_t size);
  ::std::string* mutable_eat_nutrition();
  ::std::string* release_eat_nutrition();
  void set_allocated_eat_nutrition(::std::string* eat_nutrition);

  // @@protoc_insertion_point(class_scope:YfqProtocol.QualityLifeMonthNotifyAns)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_health_score();
  inline void clear_has_health_score();
  inline void set_has_expert_segestion();
  inline void clear_has_expert_segestion();
  inline void set_has_regular_act();
  inline void clear_has_regular_act();
  inline void set_has_sleep_condition();
  inline void clear_has_sleep_condition();
  inline void set_has_body_measure();
  inline void clear_has_body_measure();
  inline void set_has_run_scence();
  inline void clear_has_run_scence();
  inline void set_has_eat_nutrition();
  inline void clear_has_eat_nutrition();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::int32 notify_type_;
  ::google::protobuf::int32 order_;
  ::google::protobuf::internal::ArenaStringPtr expert_segestion_;
  ::google::protobuf::internal::ArenaStringPtr regular_act_;
  ::google::protobuf::internal::ArenaStringPtr sleep_condition_;
  ::google::protobuf::internal::ArenaStringPtr body_measure_;
  ::google::protobuf::internal::ArenaStringPtr run_scence_;
  ::google::protobuf::internal::ArenaStringPtr eat_nutrition_;
  ::google::protobuf::int32 health_score_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static QualityLifeMonthNotifyAns* default_instance_;
};
// -------------------------------------------------------------------

class QualityLifeSeasonNotifyAns : public ::google::protobuf::Message {
 public:
  QualityLifeSeasonNotifyAns();
  virtual ~QualityLifeSeasonNotifyAns();

  QualityLifeSeasonNotifyAns(const QualityLifeSeasonNotifyAns& from);

  inline QualityLifeSeasonNotifyAns& operator=(const QualityLifeSeasonNotifyAns& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QualityLifeSeasonNotifyAns& default_instance();

  void Swap(QualityLifeSeasonNotifyAns* other);

  // implements Message ----------------------------------------------

  inline QualityLifeSeasonNotifyAns* New() const { return New(nullptr); }

  QualityLifeSeasonNotifyAns* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QualityLifeSeasonNotifyAns& from);
  void MergeFrom(const QualityLifeSeasonNotifyAns& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityLifeSeasonNotifyAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string user_name = 2;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional int32 age = 3;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 3;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // optional int32 sex = 4;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 4;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 notify_type = 5;
  bool has_notify_type() const;
  void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 5;
  ::google::protobuf::int32 notify_type() const;
  void set_notify_type(::google::protobuf::int32 value);

  // optional string date = 6;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 6;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional int32 order = 7;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 7;
  ::google::protobuf::int32 order() const;
  void set_order(::google::protobuf::int32 value);

  // optional int32 health_score = 8;
  bool has_health_score() const;
  void clear_health_score();
  static const int kHealthScoreFieldNumber = 8;
  ::google::protobuf::int32 health_score() const;
  void set_health_score(::google::protobuf::int32 value);

  // optional string expert_segestion = 9;
  bool has_expert_segestion() const;
  void clear_expert_segestion();
  static const int kExpertSegestionFieldNumber = 9;
  const ::std::string& expert_segestion() const;
  void set_expert_segestion(const ::std::string& value);
  void set_expert_segestion(const char* value);
  void set_expert_segestion(const char* value, size_t size);
  ::std::string* mutable_expert_segestion();
  ::std::string* release_expert_segestion();
  void set_allocated_expert_segestion(::std::string* expert_segestion);

  // optional string regular_act = 10;
  bool has_regular_act() const;
  void clear_regular_act();
  static const int kRegularActFieldNumber = 10;
  const ::std::string& regular_act() const;
  void set_regular_act(const ::std::string& value);
  void set_regular_act(const char* value);
  void set_regular_act(const char* value, size_t size);
  ::std::string* mutable_regular_act();
  ::std::string* release_regular_act();
  void set_allocated_regular_act(::std::string* regular_act);

  // optional string sleep_condition = 11;
  bool has_sleep_condition() const;
  void clear_sleep_condition();
  static const int kSleepConditionFieldNumber = 11;
  const ::std::string& sleep_condition() const;
  void set_sleep_condition(const ::std::string& value);
  void set_sleep_condition(const char* value);
  void set_sleep_condition(const char* value, size_t size);
  ::std::string* mutable_sleep_condition();
  ::std::string* release_sleep_condition();
  void set_allocated_sleep_condition(::std::string* sleep_condition);

  // optional string body_measure = 12;
  bool has_body_measure() const;
  void clear_body_measure();
  static const int kBodyMeasureFieldNumber = 12;
  const ::std::string& body_measure() const;
  void set_body_measure(const ::std::string& value);
  void set_body_measure(const char* value);
  void set_body_measure(const char* value, size_t size);
  ::std::string* mutable_body_measure();
  ::std::string* release_body_measure();
  void set_allocated_body_measure(::std::string* body_measure);

  // optional string run_scence = 13;
  bool has_run_scence() const;
  void clear_run_scence();
  static const int kRunScenceFieldNumber = 13;
  const ::std::string& run_scence() const;
  void set_run_scence(const ::std::string& value);
  void set_run_scence(const char* value);
  void set_run_scence(const char* value, size_t size);
  ::std::string* mutable_run_scence();
  ::std::string* release_run_scence();
  void set_allocated_run_scence(::std::string* run_scence);

  // optional string eat_nutrition = 14;
  bool has_eat_nutrition() const;
  void clear_eat_nutrition();
  static const int kEatNutritionFieldNumber = 14;
  const ::std::string& eat_nutrition() const;
  void set_eat_nutrition(const ::std::string& value);
  void set_eat_nutrition(const char* value);
  void set_eat_nutrition(const char* value, size_t size);
  ::std::string* mutable_eat_nutrition();
  ::std::string* release_eat_nutrition();
  void set_allocated_eat_nutrition(::std::string* eat_nutrition);

  // optional string psychology_health = 15;
  bool has_psychology_health() const;
  void clear_psychology_health();
  static const int kPsychologyHealthFieldNumber = 15;
  const ::std::string& psychology_health() const;
  void set_psychology_health(const ::std::string& value);
  void set_psychology_health(const char* value);
  void set_psychology_health(const char* value, size_t size);
  ::std::string* mutable_psychology_health();
  ::std::string* release_psychology_health();
  void set_allocated_psychology_health(::std::string* psychology_health);

  // @@protoc_insertion_point(class_scope:YfqProtocol.QualityLifeSeasonNotifyAns)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_health_score();
  inline void clear_has_health_score();
  inline void set_has_expert_segestion();
  inline void clear_has_expert_segestion();
  inline void set_has_regular_act();
  inline void clear_has_regular_act();
  inline void set_has_sleep_condition();
  inline void clear_has_sleep_condition();
  inline void set_has_body_measure();
  inline void clear_has_body_measure();
  inline void set_has_run_scence();
  inline void clear_has_run_scence();
  inline void set_has_eat_nutrition();
  inline void clear_has_eat_nutrition();
  inline void set_has_psychology_health();
  inline void clear_has_psychology_health();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::int32 notify_type_;
  ::google::protobuf::int32 order_;
  ::google::protobuf::internal::ArenaStringPtr expert_segestion_;
  ::google::protobuf::internal::ArenaStringPtr regular_act_;
  ::google::protobuf::internal::ArenaStringPtr sleep_condition_;
  ::google::protobuf::internal::ArenaStringPtr body_measure_;
  ::google::protobuf::internal::ArenaStringPtr run_scence_;
  ::google::protobuf::internal::ArenaStringPtr eat_nutrition_;
  ::google::protobuf::internal::ArenaStringPtr psychology_health_;
  ::google::protobuf::int32 health_score_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static QualityLifeSeasonNotifyAns* default_instance_;
};
// -------------------------------------------------------------------

class QualityLifeHalfYearNotifyAns : public ::google::protobuf::Message {
 public:
  QualityLifeHalfYearNotifyAns();
  virtual ~QualityLifeHalfYearNotifyAns();

  QualityLifeHalfYearNotifyAns(const QualityLifeHalfYearNotifyAns& from);

  inline QualityLifeHalfYearNotifyAns& operator=(const QualityLifeHalfYearNotifyAns& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QualityLifeHalfYearNotifyAns& default_instance();

  void Swap(QualityLifeHalfYearNotifyAns* other);

  // implements Message ----------------------------------------------

  inline QualityLifeHalfYearNotifyAns* New() const { return New(nullptr); }

  QualityLifeHalfYearNotifyAns* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QualityLifeHalfYearNotifyAns& from);
  void MergeFrom(const QualityLifeHalfYearNotifyAns& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityLifeHalfYearNotifyAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string user_name = 2;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional int32 age = 3;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 3;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // optional int32 sex = 4;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 4;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 notify_type = 5;
  bool has_notify_type() const;
  void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 5;
  ::google::protobuf::int32 notify_type() const;
  void set_notify_type(::google::protobuf::int32 value);

  // optional string date = 6;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 6;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional int32 order = 7;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 7;
  ::google::protobuf::int32 order() const;
  void set_order(::google::protobuf::int32 value);

  // optional int32 health_score = 8;
  bool has_health_score() const;
  void clear_health_score();
  static const int kHealthScoreFieldNumber = 8;
  ::google::protobuf::int32 health_score() const;
  void set_health_score(::google::protobuf::int32 value);

  // optional string expert_segestion = 9;
  bool has_expert_segestion() const;
  void clear_expert_segestion();
  static const int kExpertSegestionFieldNumber = 9;
  const ::std::string& expert_segestion() const;
  void set_expert_segestion(const ::std::string& value);
  void set_expert_segestion(const char* value);
  void set_expert_segestion(const char* value, size_t size);
  ::std::string* mutable_expert_segestion();
  ::std::string* release_expert_segestion();
  void set_allocated_expert_segestion(::std::string* expert_segestion);

  // optional string regular_act = 10;
  bool has_regular_act() const;
  void clear_regular_act();
  static const int kRegularActFieldNumber = 10;
  const ::std::string& regular_act() const;
  void set_regular_act(const ::std::string& value);
  void set_regular_act(const char* value);
  void set_regular_act(const char* value, size_t size);
  ::std::string* mutable_regular_act();
  ::std::string* release_regular_act();
  void set_allocated_regular_act(::std::string* regular_act);

  // optional string sleep_condition = 11;
  bool has_sleep_condition() const;
  void clear_sleep_condition();
  static const int kSleepConditionFieldNumber = 11;
  const ::std::string& sleep_condition() const;
  void set_sleep_condition(const ::std::string& value);
  void set_sleep_condition(const char* value);
  void set_sleep_condition(const char* value, size_t size);
  ::std::string* mutable_sleep_condition();
  ::std::string* release_sleep_condition();
  void set_allocated_sleep_condition(::std::string* sleep_condition);

  // optional string body_measure = 12;
  bool has_body_measure() const;
  void clear_body_measure();
  static const int kBodyMeasureFieldNumber = 12;
  const ::std::string& body_measure() const;
  void set_body_measure(const ::std::string& value);
  void set_body_measure(const char* value);
  void set_body_measure(const char* value, size_t size);
  ::std::string* mutable_body_measure();
  ::std::string* release_body_measure();
  void set_allocated_body_measure(::std::string* body_measure);

  // optional string run_scence = 13;
  bool has_run_scence() const;
  void clear_run_scence();
  static const int kRunScenceFieldNumber = 13;
  const ::std::string& run_scence() const;
  void set_run_scence(const ::std::string& value);
  void set_run_scence(const char* value);
  void set_run_scence(const char* value, size_t size);
  ::std::string* mutable_run_scence();
  ::std::string* release_run_scence();
  void set_allocated_run_scence(::std::string* run_scence);

  // optional string eat_nutrition = 14;
  bool has_eat_nutrition() const;
  void clear_eat_nutrition();
  static const int kEatNutritionFieldNumber = 14;
  const ::std::string& eat_nutrition() const;
  void set_eat_nutrition(const ::std::string& value);
  void set_eat_nutrition(const char* value);
  void set_eat_nutrition(const char* value, size_t size);
  ::std::string* mutable_eat_nutrition();
  ::std::string* release_eat_nutrition();
  void set_allocated_eat_nutrition(::std::string* eat_nutrition);

  // optional string psychology_health = 15;
  bool has_psychology_health() const;
  void clear_psychology_health();
  static const int kPsychologyHealthFieldNumber = 15;
  const ::std::string& psychology_health() const;
  void set_psychology_health(const ::std::string& value);
  void set_psychology_health(const char* value);
  void set_psychology_health(const char* value, size_t size);
  ::std::string* mutable_psychology_health();
  ::std::string* release_psychology_health();
  void set_allocated_psychology_health(::std::string* psychology_health);

  // @@protoc_insertion_point(class_scope:YfqProtocol.QualityLifeHalfYearNotifyAns)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_health_score();
  inline void clear_has_health_score();
  inline void set_has_expert_segestion();
  inline void clear_has_expert_segestion();
  inline void set_has_regular_act();
  inline void clear_has_regular_act();
  inline void set_has_sleep_condition();
  inline void clear_has_sleep_condition();
  inline void set_has_body_measure();
  inline void clear_has_body_measure();
  inline void set_has_run_scence();
  inline void clear_has_run_scence();
  inline void set_has_eat_nutrition();
  inline void clear_has_eat_nutrition();
  inline void set_has_psychology_health();
  inline void clear_has_psychology_health();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::int32 notify_type_;
  ::google::protobuf::int32 order_;
  ::google::protobuf::internal::ArenaStringPtr expert_segestion_;
  ::google::protobuf::internal::ArenaStringPtr regular_act_;
  ::google::protobuf::internal::ArenaStringPtr sleep_condition_;
  ::google::protobuf::internal::ArenaStringPtr body_measure_;
  ::google::protobuf::internal::ArenaStringPtr run_scence_;
  ::google::protobuf::internal::ArenaStringPtr eat_nutrition_;
  ::google::protobuf::internal::ArenaStringPtr psychology_health_;
  ::google::protobuf::int32 health_score_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static QualityLifeHalfYearNotifyAns* default_instance_;
};
// -------------------------------------------------------------------

class QualityLifeYearNotifyAns : public ::google::protobuf::Message {
 public:
  QualityLifeYearNotifyAns();
  virtual ~QualityLifeYearNotifyAns();

  QualityLifeYearNotifyAns(const QualityLifeYearNotifyAns& from);

  inline QualityLifeYearNotifyAns& operator=(const QualityLifeYearNotifyAns& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QualityLifeYearNotifyAns& default_instance();

  void Swap(QualityLifeYearNotifyAns* other);

  // implements Message ----------------------------------------------

  inline QualityLifeYearNotifyAns* New() const { return New(nullptr); }

  QualityLifeYearNotifyAns* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QualityLifeYearNotifyAns& from);
  void MergeFrom(const QualityLifeYearNotifyAns& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityLifeYearNotifyAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string user_name = 2;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional int32 age = 3;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 3;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // optional int32 sex = 4;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 4;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 notify_type = 5;
  bool has_notify_type() const;
  void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 5;
  ::google::protobuf::int32 notify_type() const;
  void set_notify_type(::google::protobuf::int32 value);

  // optional string date = 6;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 6;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional int32 order = 7;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 7;
  ::google::protobuf::int32 order() const;
  void set_order(::google::protobuf::int32 value);

  // optional int32 health_score = 8;
  bool has_health_score() const;
  void clear_health_score();
  static const int kHealthScoreFieldNumber = 8;
  ::google::protobuf::int32 health_score() const;
  void set_health_score(::google::protobuf::int32 value);

  // optional string expert_segestion = 9;
  bool has_expert_segestion() const;
  void clear_expert_segestion();
  static const int kExpertSegestionFieldNumber = 9;
  const ::std::string& expert_segestion() const;
  void set_expert_segestion(const ::std::string& value);
  void set_expert_segestion(const char* value);
  void set_expert_segestion(const char* value, size_t size);
  ::std::string* mutable_expert_segestion();
  ::std::string* release_expert_segestion();
  void set_allocated_expert_segestion(::std::string* expert_segestion);

  // optional string regular_act = 10;
  bool has_regular_act() const;
  void clear_regular_act();
  static const int kRegularActFieldNumber = 10;
  const ::std::string& regular_act() const;
  void set_regular_act(const ::std::string& value);
  void set_regular_act(const char* value);
  void set_regular_act(const char* value, size_t size);
  ::std::string* mutable_regular_act();
  ::std::string* release_regular_act();
  void set_allocated_regular_act(::std::string* regular_act);

  // optional string sleep_condition = 11;
  bool has_sleep_condition() const;
  void clear_sleep_condition();
  static const int kSleepConditionFieldNumber = 11;
  const ::std::string& sleep_condition() const;
  void set_sleep_condition(const ::std::string& value);
  void set_sleep_condition(const char* value);
  void set_sleep_condition(const char* value, size_t size);
  ::std::string* mutable_sleep_condition();
  ::std::string* release_sleep_condition();
  void set_allocated_sleep_condition(::std::string* sleep_condition);

  // optional string body_measure = 12;
  bool has_body_measure() const;
  void clear_body_measure();
  static const int kBodyMeasureFieldNumber = 12;
  const ::std::string& body_measure() const;
  void set_body_measure(const ::std::string& value);
  void set_body_measure(const char* value);
  void set_body_measure(const char* value, size_t size);
  ::std::string* mutable_body_measure();
  ::std::string* release_body_measure();
  void set_allocated_body_measure(::std::string* body_measure);

  // optional string run_scence = 13;
  bool has_run_scence() const;
  void clear_run_scence();
  static const int kRunScenceFieldNumber = 13;
  const ::std::string& run_scence() const;
  void set_run_scence(const ::std::string& value);
  void set_run_scence(const char* value);
  void set_run_scence(const char* value, size_t size);
  ::std::string* mutable_run_scence();
  ::std::string* release_run_scence();
  void set_allocated_run_scence(::std::string* run_scence);

  // optional string eat_nutrition = 14;
  bool has_eat_nutrition() const;
  void clear_eat_nutrition();
  static const int kEatNutritionFieldNumber = 14;
  const ::std::string& eat_nutrition() const;
  void set_eat_nutrition(const ::std::string& value);
  void set_eat_nutrition(const char* value);
  void set_eat_nutrition(const char* value, size_t size);
  ::std::string* mutable_eat_nutrition();
  ::std::string* release_eat_nutrition();
  void set_allocated_eat_nutrition(::std::string* eat_nutrition);

  // optional string psychology_health = 15;
  bool has_psychology_health() const;
  void clear_psychology_health();
  static const int kPsychologyHealthFieldNumber = 15;
  const ::std::string& psychology_health() const;
  void set_psychology_health(const ::std::string& value);
  void set_psychology_health(const char* value);
  void set_psychology_health(const char* value, size_t size);
  ::std::string* mutable_psychology_health();
  ::std::string* release_psychology_health();
  void set_allocated_psychology_health(::std::string* psychology_health);

  // @@protoc_insertion_point(class_scope:YfqProtocol.QualityLifeYearNotifyAns)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_health_score();
  inline void clear_has_health_score();
  inline void set_has_expert_segestion();
  inline void clear_has_expert_segestion();
  inline void set_has_regular_act();
  inline void clear_has_regular_act();
  inline void set_has_sleep_condition();
  inline void clear_has_sleep_condition();
  inline void set_has_body_measure();
  inline void clear_has_body_measure();
  inline void set_has_run_scence();
  inline void clear_has_run_scence();
  inline void set_has_eat_nutrition();
  inline void clear_has_eat_nutrition();
  inline void set_has_psychology_health();
  inline void clear_has_psychology_health();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::int32 notify_type_;
  ::google::protobuf::int32 order_;
  ::google::protobuf::internal::ArenaStringPtr expert_segestion_;
  ::google::protobuf::internal::ArenaStringPtr regular_act_;
  ::google::protobuf::internal::ArenaStringPtr sleep_condition_;
  ::google::protobuf::internal::ArenaStringPtr body_measure_;
  ::google::protobuf::internal::ArenaStringPtr run_scence_;
  ::google::protobuf::internal::ArenaStringPtr eat_nutrition_;
  ::google::protobuf::internal::ArenaStringPtr psychology_health_;
  ::google::protobuf::int32 health_score_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static QualityLifeYearNotifyAns* default_instance_;
};
// -------------------------------------------------------------------

class TransHSKLHisData : public ::google::protobuf::Message {
 public:
  TransHSKLHisData();
  virtual ~TransHSKLHisData();

  TransHSKLHisData(const TransHSKLHisData& from);

  inline TransHSKLHisData& operator=(const TransHSKLHisData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransHSKLHisData& default_instance();

  void Swap(TransHSKLHisData* other);

  // implements Message ----------------------------------------------

  inline TransHSKLHisData* New() const { return New(nullptr); }

  TransHSKLHisData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransHSKLHisData& from);
  void MergeFrom(const TransHSKLHisData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransHSKLHisData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string host_id = 2;
  bool has_host_id() const;
  void clear_host_id();
  static const int kHostIdFieldNumber = 2;
  const ::std::string& host_id() const;
  void set_host_id(const ::std::string& value);
  void set_host_id(const char* value);
  void set_host_id(const char* value, size_t size);
  ::std::string* mutable_host_id();
  ::std::string* release_host_id();
  void set_allocated_host_id(::std::string* host_id);

  // optional string date = 3;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 3;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional int32 clear_sleep = 4;
  bool has_clear_sleep() const;
  void clear_clear_sleep();
  static const int kClearSleepFieldNumber = 4;
  ::google::protobuf::int32 clear_sleep() const;
  void set_clear_sleep(::google::protobuf::int32 value);

  // optional int32 low_sleep = 5;
  bool has_low_sleep() const;
  void clear_low_sleep();
  static const int kLowSleepFieldNumber = 5;
  ::google::protobuf::int32 low_sleep() const;
  void set_low_sleep(::google::protobuf::int32 value);

  // optional int32 mid_sleep = 6;
  bool has_mid_sleep() const;
  void clear_mid_sleep();
  static const int kMidSleepFieldNumber = 6;
  ::google::protobuf::int32 mid_sleep() const;
  void set_mid_sleep(::google::protobuf::int32 value);

  // optional int32 deep_sleep = 7;
  bool has_deep_sleep() const;
  void clear_deep_sleep();
  static const int kDeepSleepFieldNumber = 7;
  ::google::protobuf::int32 deep_sleep() const;
  void set_deep_sleep(::google::protobuf::int32 value);

  // optional float clear_pge = 8;
  bool has_clear_pge() const;
  void clear_clear_pge();
  static const int kClearPgeFieldNumber = 8;
  float clear_pge() const;
  void set_clear_pge(float value);

  // optional float low_pge = 9;
  bool has_low_pge() const;
  void clear_low_pge();
  static const int kLowPgeFieldNumber = 9;
  float low_pge() const;
  void set_low_pge(float value);

  // optional float mid_pge = 10;
  bool has_mid_pge() const;
  void clear_mid_pge();
  static const int kMidPgeFieldNumber = 10;
  float mid_pge() const;
  void set_mid_pge(float value);

  // optional float deep_pge = 11;
  bool has_deep_pge() const;
  void clear_deep_pge();
  static const int kDeepPgeFieldNumber = 11;
  float deep_pge() const;
  void set_deep_pge(float value);

  // @@protoc_insertion_point(class_scope:YfqProtocol.TransHSKLHisData)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_host_id();
  inline void clear_has_host_id();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_clear_sleep();
  inline void clear_has_clear_sleep();
  inline void set_has_low_sleep();
  inline void clear_has_low_sleep();
  inline void set_has_mid_sleep();
  inline void clear_has_mid_sleep();
  inline void set_has_deep_sleep();
  inline void clear_has_deep_sleep();
  inline void set_has_clear_pge();
  inline void clear_has_clear_pge();
  inline void set_has_low_pge();
  inline void clear_has_low_pge();
  inline void set_has_mid_pge();
  inline void clear_has_mid_pge();
  inline void set_has_deep_pge();
  inline void clear_has_deep_pge();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr host_id_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::int32 clear_sleep_;
  ::google::protobuf::int32 low_sleep_;
  ::google::protobuf::int32 mid_sleep_;
  ::google::protobuf::int32 deep_sleep_;
  float clear_pge_;
  float low_pge_;
  float mid_pge_;
  float deep_pge_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static TransHSKLHisData* default_instance_;
};
// -------------------------------------------------------------------

class TransNightGuide_NightGuideNode : public ::google::protobuf::Message {
 public:
  TransNightGuide_NightGuideNode();
  virtual ~TransNightGuide_NightGuideNode();

  TransNightGuide_NightGuideNode(const TransNightGuide_NightGuideNode& from);

  inline TransNightGuide_NightGuideNode& operator=(const TransNightGuide_NightGuideNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransNightGuide_NightGuideNode& default_instance();

  void Swap(TransNightGuide_NightGuideNode* other);

  // implements Message ----------------------------------------------

  inline TransNightGuide_NightGuideNode* New() const { return New(nullptr); }

  TransNightGuide_NightGuideNode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransNightGuide_NightGuideNode& from);
  void MergeFrom(const TransNightGuide_NightGuideNode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransNightGuide_NightGuideNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 domain_id = 1;
  bool has_domain_id() const;
  void clear_domain_id();
  static const int kDomainIdFieldNumber = 1;
  ::google::protobuf::int32 domain_id() const;
  void set_domain_id(::google::protobuf::int32 value);

  // optional int32 node_id = 2;
  bool has_node_id() const;
  void clear_node_id();
  static const int kNodeIdFieldNumber = 2;
  ::google::protobuf::int32 node_id() const;
  void set_node_id(::google::protobuf::int32 value);

  // optional string create_time = 3;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 3;
  const ::std::string& create_time() const;
  void set_create_time(const ::std::string& value);
  void set_create_time(const char* value);
  void set_create_time(const char* value, size_t size);
  ::std::string* mutable_create_time();
  ::std::string* release_create_time();
  void set_allocated_create_time(::std::string* create_time);

  // optional int32 night_duration = 4;
  bool has_night_duration() const;
  void clear_night_duration();
  static const int kNightDurationFieldNumber = 4;
  ::google::protobuf::int32 night_duration() const;
  void set_night_duration(::google::protobuf::int32 value);

  // optional int32 night_interval = 5;
  bool has_night_interval() const;
  void clear_night_interval();
  static const int kNightIntervalFieldNumber = 5;
  ::google::protobuf::int32 night_interval() const;
  void set_night_interval(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YfqProtocol.TransNightGuide.NightGuideNode)
 private:
  inline void set_has_domain_id();
  inline void clear_has_domain_id();
  inline void set_has_node_id();
  inline void clear_has_node_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_night_duration();
  inline void clear_has_night_duration();
  inline void set_has_night_interval();
  inline void clear_has_night_interval();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 domain_id_;
  ::google::protobuf::int32 node_id_;
  ::google::protobuf::internal::ArenaStringPtr create_time_;
  ::google::protobuf::int32 night_duration_;
  ::google::protobuf::int32 night_interval_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static TransNightGuide_NightGuideNode* default_instance_;
};
// -------------------------------------------------------------------

class TransNightGuide : public ::google::protobuf::Message {
 public:
  TransNightGuide();
  virtual ~TransNightGuide();

  TransNightGuide(const TransNightGuide& from);

  inline TransNightGuide& operator=(const TransNightGuide& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransNightGuide& default_instance();

  void Swap(TransNightGuide* other);

  // implements Message ----------------------------------------------

  inline TransNightGuide* New() const { return New(nullptr); }

  TransNightGuide* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransNightGuide& from);
  void MergeFrom(const TransNightGuide& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransNightGuide* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TransNightGuide_NightGuideNode NightGuideNode;

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string host_id = 2;
  bool has_host_id() const;
  void clear_host_id();
  static const int kHostIdFieldNumber = 2;
  const ::std::string& host_id() const;
  void set_host_id(const ::std::string& value);
  void set_host_id(const char* value);
  void set_host_id(const char* value, size_t size);
  ::std::string* mutable_host_id();
  ::std::string* release_host_id();
  void set_allocated_host_id(::std::string* host_id);

  // optional int32 record_num = 3;
  bool has_record_num() const;
  void clear_record_num();
  static const int kRecordNumFieldNumber = 3;
  ::google::protobuf::int32 record_num() const;
  void set_record_num(::google::protobuf::int32 value);

  // repeated .YfqProtocol.TransNightGuide.NightGuideNode night_guide_node = 4;
  int night_guide_node_size() const;
  void clear_night_guide_node();
  static const int kNightGuideNodeFieldNumber = 4;
  const ::YfqProtocol::TransNightGuide_NightGuideNode& night_guide_node(int index) const;
  ::YfqProtocol::TransNightGuide_NightGuideNode* mutable_night_guide_node(int index);
  ::YfqProtocol::TransNightGuide_NightGuideNode* add_night_guide_node();
  const ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransNightGuide_NightGuideNode >&
      night_guide_node() const;
  ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransNightGuide_NightGuideNode >*
      mutable_night_guide_node();

  // @@protoc_insertion_point(class_scope:YfqProtocol.TransNightGuide)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_host_id();
  inline void clear_has_host_id();
  inline void set_has_record_num();
  inline void clear_has_record_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr host_id_;
  ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransNightGuide_NightGuideNode > night_guide_node_;
  ::google::protobuf::int32 record_num_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static TransNightGuide* default_instance_;
};
// -------------------------------------------------------------------

class TransBloodPressure : public ::google::protobuf::Message {
 public:
  TransBloodPressure();
  virtual ~TransBloodPressure();

  TransBloodPressure(const TransBloodPressure& from);

  inline TransBloodPressure& operator=(const TransBloodPressure& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransBloodPressure& default_instance();

  void Swap(TransBloodPressure* other);

  // implements Message ----------------------------------------------

  inline TransBloodPressure* New() const { return New(nullptr); }

  TransBloodPressure* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransBloodPressure& from);
  void MergeFrom(const TransBloodPressure& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransBloodPressure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string host_id = 2;
  bool has_host_id() const;
  void clear_host_id();
  static const int kHostIdFieldNumber = 2;
  const ::std::string& host_id() const;
  void set_host_id(const ::std::string& value);
  void set_host_id(const char* value);
  void set_host_id(const char* value, size_t size);
  ::std::string* mutable_host_id();
  ::std::string* release_host_id();
  void set_allocated_host_id(::std::string* host_id);

  // optional float systolic_pressure = 3;
  bool has_systolic_pressure() const;
  void clear_systolic_pressure();
  static const int kSystolicPressureFieldNumber = 3;
  float systolic_pressure() const;
  void set_systolic_pressure(float value);

  // optional float diastolic_pressure = 4;
  bool has_diastolic_pressure() const;
  void clear_diastolic_pressure();
  static const int kDiastolicPressureFieldNumber = 4;
  float diastolic_pressure() const;
  void set_diastolic_pressure(float value);

  // optional float heart_beat = 5;
  bool has_heart_beat() const;
  void clear_heart_beat();
  static const int kHeartBeatFieldNumber = 5;
  float heart_beat() const;
  void set_heart_beat(float value);

  // optional string date = 6;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 6;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // @@protoc_insertion_point(class_scope:YfqProtocol.TransBloodPressure)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_host_id();
  inline void clear_has_host_id();
  inline void set_has_systolic_pressure();
  inline void clear_has_systolic_pressure();
  inline void set_has_diastolic_pressure();
  inline void clear_has_diastolic_pressure();
  inline void set_has_heart_beat();
  inline void clear_has_heart_beat();
  inline void set_has_date();
  inline void clear_has_date();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr host_id_;
  float systolic_pressure_;
  float diastolic_pressure_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  float heart_beat_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static TransBloodPressure* default_instance_;
};
// -------------------------------------------------------------------

class TransBodyComposition_BodyComposition : public ::google::protobuf::Message {
 public:
  TransBodyComposition_BodyComposition();
  virtual ~TransBodyComposition_BodyComposition();

  TransBodyComposition_BodyComposition(const TransBodyComposition_BodyComposition& from);

  inline TransBodyComposition_BodyComposition& operator=(const TransBodyComposition_BodyComposition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransBodyComposition_BodyComposition& default_instance();

  void Swap(TransBodyComposition_BodyComposition* other);

  // implements Message ----------------------------------------------

  inline TransBodyComposition_BodyComposition* New() const { return New(nullptr); }

  TransBodyComposition_BodyComposition* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransBodyComposition_BodyComposition& from);
  void MergeFrom(const TransBodyComposition_BodyComposition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransBodyComposition_BodyComposition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sex = 1;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 1;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 age = 2;
  bool has_age() const;
  void clear_age();
  static const int kAgeFieldNumber = 2;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // optional int32 height = 3;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // optional float weight = 4;
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 4;
  float weight() const;
  void set_weight(float value);

  // optional int32 sport_level = 5;
  bool has_sport_level() const;
  void clear_sport_level();
  static const int kSportLevelFieldNumber = 5;
  ::google::protobuf::int32 sport_level() const;
  void set_sport_level(::google::protobuf::int32 value);

  // optional float bmi = 6;
  bool has_bmi() const;
  void clear_bmi();
  static const int kBmiFieldNumber = 6;
  float bmi() const;
  void set_bmi(float value);

  // optional float fat_level = 7;
  bool has_fat_level() const;
  void clear_fat_level();
  static const int kFatLevelFieldNumber = 7;
  float fat_level() const;
  void set_fat_level(float value);

  // optional float water_level = 8;
  bool has_water_level() const;
  void clear_water_level();
  static const int kWaterLevelFieldNumber = 8;
  float water_level() const;
  void set_water_level(float value);

  // optional float muscle = 9;
  bool has_muscle() const;
  void clear_muscle();
  static const int kMuscleFieldNumber = 9;
  float muscle() const;
  void set_muscle(float value);

  // optional float bones = 10;
  bool has_bones() const;
  void clear_bones();
  static const int kBonesFieldNumber = 10;
  float bones() const;
  void set_bones(float value);

  // optional int32 viscus = 11;
  bool has_viscus() const;
  void clear_viscus();
  static const int kViscusFieldNumber = 11;
  ::google::protobuf::int32 viscus() const;
  void set_viscus(::google::protobuf::int32 value);

  // optional int32 heat = 12;
  bool has_heat() const;
  void clear_heat();
  static const int kHeatFieldNumber = 12;
  ::google::protobuf::int32 heat() const;
  void set_heat(::google::protobuf::int32 value);

  // optional int32 body_resistive = 13;
  bool has_body_resistive() const;
  void clear_body_resistive();
  static const int kBodyResistiveFieldNumber = 13;
  ::google::protobuf::int32 body_resistive() const;
  void set_body_resistive(::google::protobuf::int32 value);

  // optional string date = 14;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 14;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // @@protoc_insertion_point(class_scope:YfqProtocol.TransBodyComposition.BodyComposition)
 private:
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_age();
  inline void clear_has_age();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_weight();
  inline void clear_has_weight();
  inline void set_has_sport_level();
  inline void clear_has_sport_level();
  inline void set_has_bmi();
  inline void clear_has_bmi();
  inline void set_has_fat_level();
  inline void clear_has_fat_level();
  inline void set_has_water_level();
  inline void clear_has_water_level();
  inline void set_has_muscle();
  inline void clear_has_muscle();
  inline void set_has_bones();
  inline void clear_has_bones();
  inline void set_has_viscus();
  inline void clear_has_viscus();
  inline void set_has_heat();
  inline void clear_has_heat();
  inline void set_has_body_resistive();
  inline void clear_has_body_resistive();
  inline void set_has_date();
  inline void clear_has_date();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 age_;
  ::google::protobuf::int32 height_;
  float weight_;
  ::google::protobuf::int32 sport_level_;
  float bmi_;
  float fat_level_;
  float water_level_;
  float muscle_;
  float bones_;
  ::google::protobuf::int32 viscus_;
  ::google::protobuf::int32 heat_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::int32 body_resistive_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static TransBodyComposition_BodyComposition* default_instance_;
};
// -------------------------------------------------------------------

class TransBodyComposition : public ::google::protobuf::Message {
 public:
  TransBodyComposition();
  virtual ~TransBodyComposition();

  TransBodyComposition(const TransBodyComposition& from);

  inline TransBodyComposition& operator=(const TransBodyComposition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransBodyComposition& default_instance();

  void Swap(TransBodyComposition* other);

  // implements Message ----------------------------------------------

  inline TransBodyComposition* New() const { return New(nullptr); }

  TransBodyComposition* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransBodyComposition& from);
  void MergeFrom(const TransBodyComposition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransBodyComposition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TransBodyComposition_BodyComposition BodyComposition;

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string host_id = 2;
  bool has_host_id() const;
  void clear_host_id();
  static const int kHostIdFieldNumber = 2;
  const ::std::string& host_id() const;
  void set_host_id(const ::std::string& value);
  void set_host_id(const char* value);
  void set_host_id(const char* value, size_t size);
  ::std::string* mutable_host_id();
  ::std::string* release_host_id();
  void set_allocated_host_id(::std::string* host_id);

  // optional int32 record_num = 3;
  bool has_record_num() const;
  void clear_record_num();
  static const int kRecordNumFieldNumber = 3;
  ::google::protobuf::int32 record_num() const;
  void set_record_num(::google::protobuf::int32 value);

  // repeated .YfqProtocol.TransBodyComposition.BodyComposition body_list = 4;
  int body_list_size() const;
  void clear_body_list();
  static const int kBodyListFieldNumber = 4;
  const ::YfqProtocol::TransBodyComposition_BodyComposition& body_list(int index) const;
  ::YfqProtocol::TransBodyComposition_BodyComposition* mutable_body_list(int index);
  ::YfqProtocol::TransBodyComposition_BodyComposition* add_body_list();
  const ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransBodyComposition_BodyComposition >&
      body_list() const;
  ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransBodyComposition_BodyComposition >*
      mutable_body_list();

  // @@protoc_insertion_point(class_scope:YfqProtocol.TransBodyComposition)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_host_id();
  inline void clear_has_host_id();
  inline void set_has_record_num();
  inline void clear_has_record_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr host_id_;
  ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransBodyComposition_BodyComposition > body_list_;
  ::google::protobuf::int32 record_num_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static TransBodyComposition* default_instance_;
};
// -------------------------------------------------------------------

class TransThermometer : public ::google::protobuf::Message {
 public:
  TransThermometer();
  virtual ~TransThermometer();

  TransThermometer(const TransThermometer& from);

  inline TransThermometer& operator=(const TransThermometer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransThermometer& default_instance();

  void Swap(TransThermometer* other);

  // implements Message ----------------------------------------------

  inline TransThermometer* New() const { return New(nullptr); }

  TransThermometer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransThermometer& from);
  void MergeFrom(const TransThermometer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransThermometer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string host_id = 2;
  bool has_host_id() const;
  void clear_host_id();
  static const int kHostIdFieldNumber = 2;
  const ::std::string& host_id() const;
  void set_host_id(const ::std::string& value);
  void set_host_id(const char* value);
  void set_host_id(const char* value, size_t size);
  ::std::string* mutable_host_id();
  ::std::string* release_host_id();
  void set_allocated_host_id(::std::string* host_id);

  // optional float thermom_value = 3;
  bool has_thermom_value() const;
  void clear_thermom_value();
  static const int kThermomValueFieldNumber = 3;
  float thermom_value() const;
  void set_thermom_value(float value);

  // optional string date = 4;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 4;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // @@protoc_insertion_point(class_scope:YfqProtocol.TransThermometer)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_host_id();
  inline void clear_has_host_id();
  inline void set_has_thermom_value();
  inline void clear_has_thermom_value();
  inline void set_has_date();
  inline void clear_has_date();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr host_id_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  float thermom_value_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static TransThermometer* default_instance_;
};
// -------------------------------------------------------------------

class QualityLifeOrderLoadReq : public ::google::protobuf::Message {
 public:
  QualityLifeOrderLoadReq();
  virtual ~QualityLifeOrderLoadReq();

  QualityLifeOrderLoadReq(const QualityLifeOrderLoadReq& from);

  inline QualityLifeOrderLoadReq& operator=(const QualityLifeOrderLoadReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QualityLifeOrderLoadReq& default_instance();

  void Swap(QualityLifeOrderLoadReq* other);

  // implements Message ----------------------------------------------

  inline QualityLifeOrderLoadReq* New() const { return New(nullptr); }

  QualityLifeOrderLoadReq* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QualityLifeOrderLoadReq& from);
  void MergeFrom(const QualityLifeOrderLoadReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityLifeOrderLoadReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string host_id = 2;
  bool has_host_id() const;
  void clear_host_id();
  static const int kHostIdFieldNumber = 2;
  const ::std::string& host_id() const;
  void set_host_id(const ::std::string& value);
  void set_host_id(const char* value);
  void set_host_id(const char* value, size_t size);
  ::std::string* mutable_host_id();
  ::std::string* release_host_id();
  void set_allocated_host_id(::std::string* host_id);

  // optional int32 notify_type = 3;
  bool has_notify_type() const;
  void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 3;
  ::google::protobuf::int32 notify_type() const;
  void set_notify_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YfqProtocol.QualityLifeOrderLoadReq)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_host_id();
  inline void clear_has_host_id();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr host_id_;
  ::google::protobuf::int32 notify_type_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static QualityLifeOrderLoadReq* default_instance_;
};
// -------------------------------------------------------------------

class QualityLifeOrderLoadAns : public ::google::protobuf::Message {
 public:
  QualityLifeOrderLoadAns();
  virtual ~QualityLifeOrderLoadAns();

  QualityLifeOrderLoadAns(const QualityLifeOrderLoadAns& from);

  inline QualityLifeOrderLoadAns& operator=(const QualityLifeOrderLoadAns& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QualityLifeOrderLoadAns& default_instance();

  void Swap(QualityLifeOrderLoadAns* other);

  // implements Message ----------------------------------------------

  inline QualityLifeOrderLoadAns* New() const { return New(nullptr); }

  QualityLifeOrderLoadAns* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QualityLifeOrderLoadAns& from);
  void MergeFrom(const QualityLifeOrderLoadAns& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QualityLifeOrderLoadAns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional int32 notify_type = 2;
  bool has_notify_type() const;
  void clear_notify_type();
  static const int kNotifyTypeFieldNumber = 2;
  ::google::protobuf::int32 notify_type() const;
  void set_notify_type(::google::protobuf::int32 value);

  // optional string date = 3;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 3;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // optional int32 maxOrder = 4;
  bool has_maxorder() const;
  void clear_maxorder();
  static const int kMaxOrderFieldNumber = 4;
  ::google::protobuf::int32 maxorder() const;
  void set_maxorder(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:YfqProtocol.QualityLifeOrderLoadAns)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_notify_type();
  inline void clear_has_notify_type();
  inline void set_has_date();
  inline void clear_has_date();
  inline void set_has_maxorder();
  inline void clear_has_maxorder();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::int32 notify_type_;
  ::google::protobuf::int32 maxorder_;
  friend void  protobuf_AddDesc_yfqprotoserver3_2eproto();
  friend void protobuf_AssignDesc_yfqprotoserver3_2eproto();
  friend void protobuf_ShutdownFile_yfqprotoserver3_2eproto();

  void InitAsDefaultInstance();
  static QualityLifeOrderLoadAns* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartBeat

// optional int64 date_time = 1;
inline bool HeartBeat::has_date_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeat::set_has_date_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeat::clear_has_date_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeat::clear_date_time() {
  date_time_ = GOOGLE_LONGLONG(0);
  clear_has_date_time();
}
inline ::google::protobuf::int64 HeartBeat::date_time() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.HeartBeat.date_time)
  return date_time_;
}
inline void HeartBeat::set_date_time(::google::protobuf::int64 value) {
  set_has_date_time();
  date_time_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.HeartBeat.date_time)
}

// -------------------------------------------------------------------

// CommonAns

// optional int32 error_code = 1;
inline bool CommonAns::has_error_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommonAns::set_has_error_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommonAns::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommonAns::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 CommonAns::error_code() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.CommonAns.error_code)
  return error_code_;
}
inline void CommonAns::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.CommonAns.error_code)
}

// optional int32 request_id = 2;
inline bool CommonAns::has_request_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CommonAns::set_has_request_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CommonAns::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CommonAns::clear_request_id() {
  request_id_ = 0;
  clear_has_request_id();
}
inline ::google::protobuf::int32 CommonAns::request_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.CommonAns.request_id)
  return request_id_;
}
inline void CommonAns::set_request_id(::google::protobuf::int32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.CommonAns.request_id)
}

// optional .YfqProtocol.CommonAns.Progress progress = 3;
inline bool CommonAns::has_progress() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CommonAns::set_has_progress() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CommonAns::clear_has_progress() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CommonAns::clear_progress() {
  progress_ = 0;
  clear_has_progress();
}
inline ::YfqProtocol::CommonAns_Progress CommonAns::progress() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.CommonAns.progress)
  return static_cast< ::YfqProtocol::CommonAns_Progress >(progress_);
}
inline void CommonAns::set_progress(::YfqProtocol::CommonAns_Progress value) {
  assert(::YfqProtocol::CommonAns_Progress_IsValid(value));
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.CommonAns.progress)
}

// -------------------------------------------------------------------

// LoginedUserInfo

// optional string user_id = 1;
inline bool LoginedUserInfo::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginedUserInfo::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginedUserInfo::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginedUserInfo::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& LoginedUserInfo::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.LoginedUserInfo.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginedUserInfo::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.LoginedUserInfo.user_id)
}
inline void LoginedUserInfo::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.LoginedUserInfo.user_id)
}
inline void LoginedUserInfo::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.LoginedUserInfo.user_id)
}
inline ::std::string* LoginedUserInfo::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.LoginedUserInfo.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginedUserInfo::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginedUserInfo::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.LoginedUserInfo.user_id)
}

// -------------------------------------------------------------------

// QualityLifeNotifyReq

// optional string user_id = 1;
inline bool QualityLifeNotifyReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QualityLifeNotifyReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QualityLifeNotifyReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QualityLifeNotifyReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& QualityLifeNotifyReq::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeNotifyReq.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeNotifyReq::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeNotifyReq.user_id)
}
inline void QualityLifeNotifyReq::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeNotifyReq.user_id)
}
inline void QualityLifeNotifyReq::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeNotifyReq.user_id)
}
inline ::std::string* QualityLifeNotifyReq::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeNotifyReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeNotifyReq::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeNotifyReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeNotifyReq.user_id)
}

// optional string host_id = 2;
inline bool QualityLifeNotifyReq::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QualityLifeNotifyReq::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QualityLifeNotifyReq::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QualityLifeNotifyReq::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
inline const ::std::string& QualityLifeNotifyReq::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeNotifyReq.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeNotifyReq::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeNotifyReq.host_id)
}
inline void QualityLifeNotifyReq::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeNotifyReq.host_id)
}
inline void QualityLifeNotifyReq::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeNotifyReq.host_id)
}
inline ::std::string* QualityLifeNotifyReq::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeNotifyReq.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeNotifyReq::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeNotifyReq::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeNotifyReq.host_id)
}

// optional int32 notify_type = 3;
inline bool QualityLifeNotifyReq::has_notify_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QualityLifeNotifyReq::set_has_notify_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QualityLifeNotifyReq::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QualityLifeNotifyReq::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
inline ::google::protobuf::int32 QualityLifeNotifyReq::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeNotifyReq.notify_type)
  return notify_type_;
}
inline void QualityLifeNotifyReq::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeNotifyReq.notify_type)
}

// optional string date = 4;
inline bool QualityLifeNotifyReq::has_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QualityLifeNotifyReq::set_has_date() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QualityLifeNotifyReq::clear_has_date() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QualityLifeNotifyReq::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& QualityLifeNotifyReq::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeNotifyReq.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeNotifyReq::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeNotifyReq.date)
}
inline void QualityLifeNotifyReq::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeNotifyReq.date)
}
inline void QualityLifeNotifyReq::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeNotifyReq.date)
}
inline ::std::string* QualityLifeNotifyReq::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeNotifyReq.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeNotifyReq::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeNotifyReq::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeNotifyReq.date)
}

// optional int32 order = 5;
inline bool QualityLifeNotifyReq::has_order() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QualityLifeNotifyReq::set_has_order() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QualityLifeNotifyReq::clear_has_order() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QualityLifeNotifyReq::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 QualityLifeNotifyReq::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeNotifyReq.order)
  return order_;
}
inline void QualityLifeNotifyReq::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeNotifyReq.order)
}

// -------------------------------------------------------------------

// QualityLifeDayNotifyAns

// optional string user_id = 1;
inline bool QualityLifeDayNotifyAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QualityLifeDayNotifyAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QualityLifeDayNotifyAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QualityLifeDayNotifyAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& QualityLifeDayNotifyAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeDayNotifyAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.user_id)
}
inline void QualityLifeDayNotifyAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeDayNotifyAns.user_id)
}
inline void QualityLifeDayNotifyAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeDayNotifyAns.user_id)
}
inline ::std::string* QualityLifeDayNotifyAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeDayNotifyAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeDayNotifyAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeDayNotifyAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeDayNotifyAns.user_id)
}

// optional string user_name = 2;
inline bool QualityLifeDayNotifyAns::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QualityLifeDayNotifyAns::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QualityLifeDayNotifyAns::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QualityLifeDayNotifyAns::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& QualityLifeDayNotifyAns::user_name() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeDayNotifyAns::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.user_name)
}
inline void QualityLifeDayNotifyAns::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeDayNotifyAns.user_name)
}
inline void QualityLifeDayNotifyAns::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeDayNotifyAns.user_name)
}
inline ::std::string* QualityLifeDayNotifyAns::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeDayNotifyAns.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeDayNotifyAns::release_user_name() {
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeDayNotifyAns::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeDayNotifyAns.user_name)
}

// optional int32 age = 3;
inline bool QualityLifeDayNotifyAns::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QualityLifeDayNotifyAns::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QualityLifeDayNotifyAns::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QualityLifeDayNotifyAns::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 QualityLifeDayNotifyAns::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.age)
  return age_;
}
inline void QualityLifeDayNotifyAns::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.age)
}

// optional int32 sex = 4;
inline bool QualityLifeDayNotifyAns::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QualityLifeDayNotifyAns::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QualityLifeDayNotifyAns::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QualityLifeDayNotifyAns::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 QualityLifeDayNotifyAns::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.sex)
  return sex_;
}
inline void QualityLifeDayNotifyAns::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.sex)
}

// optional int32 notify_type = 5;
inline bool QualityLifeDayNotifyAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QualityLifeDayNotifyAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QualityLifeDayNotifyAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QualityLifeDayNotifyAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
inline ::google::protobuf::int32 QualityLifeDayNotifyAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.notify_type)
  return notify_type_;
}
inline void QualityLifeDayNotifyAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.notify_type)
}

// optional string date = 6;
inline bool QualityLifeDayNotifyAns::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QualityLifeDayNotifyAns::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QualityLifeDayNotifyAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QualityLifeDayNotifyAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& QualityLifeDayNotifyAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeDayNotifyAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.date)
}
inline void QualityLifeDayNotifyAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeDayNotifyAns.date)
}
inline void QualityLifeDayNotifyAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeDayNotifyAns.date)
}
inline ::std::string* QualityLifeDayNotifyAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeDayNotifyAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeDayNotifyAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeDayNotifyAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeDayNotifyAns.date)
}

// optional int32 order = 7;
inline bool QualityLifeDayNotifyAns::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QualityLifeDayNotifyAns::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QualityLifeDayNotifyAns::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QualityLifeDayNotifyAns::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 QualityLifeDayNotifyAns::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.order)
  return order_;
}
inline void QualityLifeDayNotifyAns::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.order)
}

// optional int32 health_score = 8;
inline bool QualityLifeDayNotifyAns::has_health_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QualityLifeDayNotifyAns::set_has_health_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QualityLifeDayNotifyAns::clear_has_health_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QualityLifeDayNotifyAns::clear_health_score() {
  health_score_ = 0;
  clear_has_health_score();
}
inline ::google::protobuf::int32 QualityLifeDayNotifyAns::health_score() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.health_score)
  return health_score_;
}
inline void QualityLifeDayNotifyAns::set_health_score(::google::protobuf::int32 value) {
  set_has_health_score();
  health_score_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.health_score)
}

// optional string weather_relate = 9;
inline bool QualityLifeDayNotifyAns::has_weather_relate() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QualityLifeDayNotifyAns::set_has_weather_relate() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QualityLifeDayNotifyAns::clear_has_weather_relate() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QualityLifeDayNotifyAns::clear_weather_relate() {
  weather_relate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weather_relate();
}
inline const ::std::string& QualityLifeDayNotifyAns::weather_relate() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.weather_relate)
  return weather_relate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeDayNotifyAns::set_weather_relate(const ::std::string& value) {
  set_has_weather_relate();
  weather_relate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.weather_relate)
}
inline void QualityLifeDayNotifyAns::set_weather_relate(const char* value) {
  set_has_weather_relate();
  weather_relate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeDayNotifyAns.weather_relate)
}
inline void QualityLifeDayNotifyAns::set_weather_relate(const char* value, size_t size) {
  set_has_weather_relate();
  weather_relate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeDayNotifyAns.weather_relate)
}
inline ::std::string* QualityLifeDayNotifyAns::mutable_weather_relate() {
  set_has_weather_relate();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeDayNotifyAns.weather_relate)
  return weather_relate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeDayNotifyAns::release_weather_relate() {
  clear_has_weather_relate();
  return weather_relate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeDayNotifyAns::set_allocated_weather_relate(::std::string* weather_relate) {
  if (weather_relate != nullptr) {
    set_has_weather_relate();
  } else {
    clear_has_weather_relate();
  }
  weather_relate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weather_relate);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeDayNotifyAns.weather_relate)
}

// optional string expert_segestion = 10;
inline bool QualityLifeDayNotifyAns::has_expert_segestion() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void QualityLifeDayNotifyAns::set_has_expert_segestion() {
  _has_bits_[0] |= 0x00000200u;
}
inline void QualityLifeDayNotifyAns::clear_has_expert_segestion() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void QualityLifeDayNotifyAns::clear_expert_segestion() {
  expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expert_segestion();
}
inline const ::std::string& QualityLifeDayNotifyAns::expert_segestion() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeDayNotifyAns.expert_segestion)
  return expert_segestion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeDayNotifyAns::set_expert_segestion(const ::std::string& value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeDayNotifyAns.expert_segestion)
}
inline void QualityLifeDayNotifyAns::set_expert_segestion(const char* value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeDayNotifyAns.expert_segestion)
}
inline void QualityLifeDayNotifyAns::set_expert_segestion(const char* value, size_t size) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeDayNotifyAns.expert_segestion)
}
inline ::std::string* QualityLifeDayNotifyAns::mutable_expert_segestion() {
  set_has_expert_segestion();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeDayNotifyAns.expert_segestion)
  return expert_segestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeDayNotifyAns::release_expert_segestion() {
  clear_has_expert_segestion();
  return expert_segestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeDayNotifyAns::set_allocated_expert_segestion(::std::string* expert_segestion) {
  if (expert_segestion != nullptr) {
    set_has_expert_segestion();
  } else {
    clear_has_expert_segestion();
  }
  expert_segestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expert_segestion);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeDayNotifyAns.expert_segestion)
}

// -------------------------------------------------------------------

// QualityLifeWeekNotifyAns

// optional string user_id = 1;
inline bool QualityLifeWeekNotifyAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QualityLifeWeekNotifyAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QualityLifeWeekNotifyAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& QualityLifeWeekNotifyAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.user_id)
}
inline void QualityLifeWeekNotifyAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.user_id)
}
inline void QualityLifeWeekNotifyAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.user_id)
}
inline ::std::string* QualityLifeWeekNotifyAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeWeekNotifyAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.user_id)
}

// optional string user_name = 2;
inline bool QualityLifeWeekNotifyAns::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QualityLifeWeekNotifyAns::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QualityLifeWeekNotifyAns::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& QualityLifeWeekNotifyAns::user_name() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.user_name)
}
inline void QualityLifeWeekNotifyAns::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.user_name)
}
inline void QualityLifeWeekNotifyAns::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.user_name)
}
inline ::std::string* QualityLifeWeekNotifyAns::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeWeekNotifyAns::release_user_name() {
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.user_name)
}

// optional int32 age = 3;
inline bool QualityLifeWeekNotifyAns::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QualityLifeWeekNotifyAns::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QualityLifeWeekNotifyAns::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 QualityLifeWeekNotifyAns::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.age)
  return age_;
}
inline void QualityLifeWeekNotifyAns::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.age)
}

// optional int32 sex = 4;
inline bool QualityLifeWeekNotifyAns::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QualityLifeWeekNotifyAns::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QualityLifeWeekNotifyAns::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 QualityLifeWeekNotifyAns::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.sex)
  return sex_;
}
inline void QualityLifeWeekNotifyAns::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.sex)
}

// optional int32 notify_type = 5;
inline bool QualityLifeWeekNotifyAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QualityLifeWeekNotifyAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QualityLifeWeekNotifyAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
inline ::google::protobuf::int32 QualityLifeWeekNotifyAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.notify_type)
  return notify_type_;
}
inline void QualityLifeWeekNotifyAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.notify_type)
}

// optional string date = 6;
inline bool QualityLifeWeekNotifyAns::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QualityLifeWeekNotifyAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QualityLifeWeekNotifyAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& QualityLifeWeekNotifyAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.date)
}
inline void QualityLifeWeekNotifyAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.date)
}
inline void QualityLifeWeekNotifyAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.date)
}
inline ::std::string* QualityLifeWeekNotifyAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeWeekNotifyAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.date)
}

// optional int32 order = 7;
inline bool QualityLifeWeekNotifyAns::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QualityLifeWeekNotifyAns::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QualityLifeWeekNotifyAns::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 QualityLifeWeekNotifyAns::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.order)
  return order_;
}
inline void QualityLifeWeekNotifyAns::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.order)
}

// optional int32 health_score = 8;
inline bool QualityLifeWeekNotifyAns::has_health_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_health_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QualityLifeWeekNotifyAns::clear_has_health_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QualityLifeWeekNotifyAns::clear_health_score() {
  health_score_ = 0;
  clear_has_health_score();
}
inline ::google::protobuf::int32 QualityLifeWeekNotifyAns::health_score() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.health_score)
  return health_score_;
}
inline void QualityLifeWeekNotifyAns::set_health_score(::google::protobuf::int32 value) {
  set_has_health_score();
  health_score_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.health_score)
}

// optional string expert_segestion = 9;
inline bool QualityLifeWeekNotifyAns::has_expert_segestion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_expert_segestion() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QualityLifeWeekNotifyAns::clear_has_expert_segestion() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QualityLifeWeekNotifyAns::clear_expert_segestion() {
  expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expert_segestion();
}
inline const ::std::string& QualityLifeWeekNotifyAns::expert_segestion() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion)
  return expert_segestion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_expert_segestion(const ::std::string& value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion)
}
inline void QualityLifeWeekNotifyAns::set_expert_segestion(const char* value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion)
}
inline void QualityLifeWeekNotifyAns::set_expert_segestion(const char* value, size_t size) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion)
}
inline ::std::string* QualityLifeWeekNotifyAns::mutable_expert_segestion() {
  set_has_expert_segestion();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion)
  return expert_segestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeWeekNotifyAns::release_expert_segestion() {
  clear_has_expert_segestion();
  return expert_segestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_allocated_expert_segestion(::std::string* expert_segestion) {
  if (expert_segestion != nullptr) {
    set_has_expert_segestion();
  } else {
    clear_has_expert_segestion();
  }
  expert_segestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expert_segestion);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.expert_segestion)
}

// optional string regular_act = 10;
inline bool QualityLifeWeekNotifyAns::has_regular_act() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_regular_act() {
  _has_bits_[0] |= 0x00000200u;
}
inline void QualityLifeWeekNotifyAns::clear_has_regular_act() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void QualityLifeWeekNotifyAns::clear_regular_act() {
  regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regular_act();
}
inline const ::std::string& QualityLifeWeekNotifyAns::regular_act() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.regular_act)
  return regular_act_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_regular_act(const ::std::string& value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.regular_act)
}
inline void QualityLifeWeekNotifyAns::set_regular_act(const char* value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.regular_act)
}
inline void QualityLifeWeekNotifyAns::set_regular_act(const char* value, size_t size) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.regular_act)
}
inline ::std::string* QualityLifeWeekNotifyAns::mutable_regular_act() {
  set_has_regular_act();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.regular_act)
  return regular_act_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeWeekNotifyAns::release_regular_act() {
  clear_has_regular_act();
  return regular_act_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_allocated_regular_act(::std::string* regular_act) {
  if (regular_act != nullptr) {
    set_has_regular_act();
  } else {
    clear_has_regular_act();
  }
  regular_act_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regular_act);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.regular_act)
}

// optional string sleep_condition = 11;
inline bool QualityLifeWeekNotifyAns::has_sleep_condition() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_sleep_condition() {
  _has_bits_[0] |= 0x00000400u;
}
inline void QualityLifeWeekNotifyAns::clear_has_sleep_condition() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void QualityLifeWeekNotifyAns::clear_sleep_condition() {
  sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sleep_condition();
}
inline const ::std::string& QualityLifeWeekNotifyAns::sleep_condition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition)
  return sleep_condition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_sleep_condition(const ::std::string& value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition)
}
inline void QualityLifeWeekNotifyAns::set_sleep_condition(const char* value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition)
}
inline void QualityLifeWeekNotifyAns::set_sleep_condition(const char* value, size_t size) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition)
}
inline ::std::string* QualityLifeWeekNotifyAns::mutable_sleep_condition() {
  set_has_sleep_condition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition)
  return sleep_condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeWeekNotifyAns::release_sleep_condition() {
  clear_has_sleep_condition();
  return sleep_condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_allocated_sleep_condition(::std::string* sleep_condition) {
  if (sleep_condition != nullptr) {
    set_has_sleep_condition();
  } else {
    clear_has_sleep_condition();
  }
  sleep_condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sleep_condition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.sleep_condition)
}

// optional string body_measure = 12;
inline bool QualityLifeWeekNotifyAns::has_body_measure() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_body_measure() {
  _has_bits_[0] |= 0x00000800u;
}
inline void QualityLifeWeekNotifyAns::clear_has_body_measure() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void QualityLifeWeekNotifyAns::clear_body_measure() {
  body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_measure();
}
inline const ::std::string& QualityLifeWeekNotifyAns::body_measure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.body_measure)
  return body_measure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_body_measure(const ::std::string& value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.body_measure)
}
inline void QualityLifeWeekNotifyAns::set_body_measure(const char* value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.body_measure)
}
inline void QualityLifeWeekNotifyAns::set_body_measure(const char* value, size_t size) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.body_measure)
}
inline ::std::string* QualityLifeWeekNotifyAns::mutable_body_measure() {
  set_has_body_measure();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.body_measure)
  return body_measure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeWeekNotifyAns::release_body_measure() {
  clear_has_body_measure();
  return body_measure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_allocated_body_measure(::std::string* body_measure) {
  if (body_measure != nullptr) {
    set_has_body_measure();
  } else {
    clear_has_body_measure();
  }
  body_measure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_measure);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.body_measure)
}

// optional string run_scence = 13;
inline bool QualityLifeWeekNotifyAns::has_run_scence() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_run_scence() {
  _has_bits_[0] |= 0x00001000u;
}
inline void QualityLifeWeekNotifyAns::clear_has_run_scence() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void QualityLifeWeekNotifyAns::clear_run_scence() {
  run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_run_scence();
}
inline const ::std::string& QualityLifeWeekNotifyAns::run_scence() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.run_scence)
  return run_scence_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_run_scence(const ::std::string& value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.run_scence)
}
inline void QualityLifeWeekNotifyAns::set_run_scence(const char* value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.run_scence)
}
inline void QualityLifeWeekNotifyAns::set_run_scence(const char* value, size_t size) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.run_scence)
}
inline ::std::string* QualityLifeWeekNotifyAns::mutable_run_scence() {
  set_has_run_scence();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.run_scence)
  return run_scence_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeWeekNotifyAns::release_run_scence() {
  clear_has_run_scence();
  return run_scence_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_allocated_run_scence(::std::string* run_scence) {
  if (run_scence != nullptr) {
    set_has_run_scence();
  } else {
    clear_has_run_scence();
  }
  run_scence_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), run_scence);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.run_scence)
}

// optional string eat_nutrition = 14;
inline bool QualityLifeWeekNotifyAns::has_eat_nutrition() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void QualityLifeWeekNotifyAns::set_has_eat_nutrition() {
  _has_bits_[0] |= 0x00002000u;
}
inline void QualityLifeWeekNotifyAns::clear_has_eat_nutrition() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void QualityLifeWeekNotifyAns::clear_eat_nutrition() {
  eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eat_nutrition();
}
inline const ::std::string& QualityLifeWeekNotifyAns::eat_nutrition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition)
  return eat_nutrition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_eat_nutrition(const ::std::string& value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition)
}
inline void QualityLifeWeekNotifyAns::set_eat_nutrition(const char* value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition)
}
inline void QualityLifeWeekNotifyAns::set_eat_nutrition(const char* value, size_t size) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition)
}
inline ::std::string* QualityLifeWeekNotifyAns::mutable_eat_nutrition() {
  set_has_eat_nutrition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition)
  return eat_nutrition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeWeekNotifyAns::release_eat_nutrition() {
  clear_has_eat_nutrition();
  return eat_nutrition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeWeekNotifyAns::set_allocated_eat_nutrition(::std::string* eat_nutrition) {
  if (eat_nutrition != nullptr) {
    set_has_eat_nutrition();
  } else {
    clear_has_eat_nutrition();
  }
  eat_nutrition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eat_nutrition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeWeekNotifyAns.eat_nutrition)
}

// -------------------------------------------------------------------

// QualityLifeMonthNotifyAns

// optional string user_id = 1;
inline bool QualityLifeMonthNotifyAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QualityLifeMonthNotifyAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QualityLifeMonthNotifyAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& QualityLifeMonthNotifyAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.user_id)
}
inline void QualityLifeMonthNotifyAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.user_id)
}
inline void QualityLifeMonthNotifyAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.user_id)
}
inline ::std::string* QualityLifeMonthNotifyAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeMonthNotifyAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.user_id)
}

// optional string user_name = 2;
inline bool QualityLifeMonthNotifyAns::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QualityLifeMonthNotifyAns::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QualityLifeMonthNotifyAns::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& QualityLifeMonthNotifyAns::user_name() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.user_name)
}
inline void QualityLifeMonthNotifyAns::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.user_name)
}
inline void QualityLifeMonthNotifyAns::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.user_name)
}
inline ::std::string* QualityLifeMonthNotifyAns::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeMonthNotifyAns::release_user_name() {
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.user_name)
}

// optional int32 age = 3;
inline bool QualityLifeMonthNotifyAns::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QualityLifeMonthNotifyAns::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QualityLifeMonthNotifyAns::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 QualityLifeMonthNotifyAns::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.age)
  return age_;
}
inline void QualityLifeMonthNotifyAns::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.age)
}

// optional int32 sex = 4;
inline bool QualityLifeMonthNotifyAns::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QualityLifeMonthNotifyAns::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QualityLifeMonthNotifyAns::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 QualityLifeMonthNotifyAns::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.sex)
  return sex_;
}
inline void QualityLifeMonthNotifyAns::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.sex)
}

// optional int32 notify_type = 5;
inline bool QualityLifeMonthNotifyAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QualityLifeMonthNotifyAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QualityLifeMonthNotifyAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
inline ::google::protobuf::int32 QualityLifeMonthNotifyAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.notify_type)
  return notify_type_;
}
inline void QualityLifeMonthNotifyAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.notify_type)
}

// optional string date = 6;
inline bool QualityLifeMonthNotifyAns::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QualityLifeMonthNotifyAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QualityLifeMonthNotifyAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& QualityLifeMonthNotifyAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.date)
}
inline void QualityLifeMonthNotifyAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.date)
}
inline void QualityLifeMonthNotifyAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.date)
}
inline ::std::string* QualityLifeMonthNotifyAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeMonthNotifyAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.date)
}

// optional int32 order = 7;
inline bool QualityLifeMonthNotifyAns::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QualityLifeMonthNotifyAns::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QualityLifeMonthNotifyAns::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 QualityLifeMonthNotifyAns::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.order)
  return order_;
}
inline void QualityLifeMonthNotifyAns::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.order)
}

// optional int32 health_score = 8;
inline bool QualityLifeMonthNotifyAns::has_health_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_health_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QualityLifeMonthNotifyAns::clear_has_health_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QualityLifeMonthNotifyAns::clear_health_score() {
  health_score_ = 0;
  clear_has_health_score();
}
inline ::google::protobuf::int32 QualityLifeMonthNotifyAns::health_score() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.health_score)
  return health_score_;
}
inline void QualityLifeMonthNotifyAns::set_health_score(::google::protobuf::int32 value) {
  set_has_health_score();
  health_score_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.health_score)
}

// optional string expert_segestion = 9;
inline bool QualityLifeMonthNotifyAns::has_expert_segestion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_expert_segestion() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QualityLifeMonthNotifyAns::clear_has_expert_segestion() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QualityLifeMonthNotifyAns::clear_expert_segestion() {
  expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expert_segestion();
}
inline const ::std::string& QualityLifeMonthNotifyAns::expert_segestion() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion)
  return expert_segestion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_expert_segestion(const ::std::string& value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion)
}
inline void QualityLifeMonthNotifyAns::set_expert_segestion(const char* value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion)
}
inline void QualityLifeMonthNotifyAns::set_expert_segestion(const char* value, size_t size) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion)
}
inline ::std::string* QualityLifeMonthNotifyAns::mutable_expert_segestion() {
  set_has_expert_segestion();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion)
  return expert_segestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeMonthNotifyAns::release_expert_segestion() {
  clear_has_expert_segestion();
  return expert_segestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_allocated_expert_segestion(::std::string* expert_segestion) {
  if (expert_segestion != nullptr) {
    set_has_expert_segestion();
  } else {
    clear_has_expert_segestion();
  }
  expert_segestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expert_segestion);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.expert_segestion)
}

// optional string regular_act = 10;
inline bool QualityLifeMonthNotifyAns::has_regular_act() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_regular_act() {
  _has_bits_[0] |= 0x00000200u;
}
inline void QualityLifeMonthNotifyAns::clear_has_regular_act() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void QualityLifeMonthNotifyAns::clear_regular_act() {
  regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regular_act();
}
inline const ::std::string& QualityLifeMonthNotifyAns::regular_act() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.regular_act)
  return regular_act_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_regular_act(const ::std::string& value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.regular_act)
}
inline void QualityLifeMonthNotifyAns::set_regular_act(const char* value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.regular_act)
}
inline void QualityLifeMonthNotifyAns::set_regular_act(const char* value, size_t size) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.regular_act)
}
inline ::std::string* QualityLifeMonthNotifyAns::mutable_regular_act() {
  set_has_regular_act();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.regular_act)
  return regular_act_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeMonthNotifyAns::release_regular_act() {
  clear_has_regular_act();
  return regular_act_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_allocated_regular_act(::std::string* regular_act) {
  if (regular_act != nullptr) {
    set_has_regular_act();
  } else {
    clear_has_regular_act();
  }
  regular_act_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regular_act);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.regular_act)
}

// optional string sleep_condition = 11;
inline bool QualityLifeMonthNotifyAns::has_sleep_condition() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_sleep_condition() {
  _has_bits_[0] |= 0x00000400u;
}
inline void QualityLifeMonthNotifyAns::clear_has_sleep_condition() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void QualityLifeMonthNotifyAns::clear_sleep_condition() {
  sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sleep_condition();
}
inline const ::std::string& QualityLifeMonthNotifyAns::sleep_condition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition)
  return sleep_condition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_sleep_condition(const ::std::string& value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition)
}
inline void QualityLifeMonthNotifyAns::set_sleep_condition(const char* value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition)
}
inline void QualityLifeMonthNotifyAns::set_sleep_condition(const char* value, size_t size) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition)
}
inline ::std::string* QualityLifeMonthNotifyAns::mutable_sleep_condition() {
  set_has_sleep_condition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition)
  return sleep_condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeMonthNotifyAns::release_sleep_condition() {
  clear_has_sleep_condition();
  return sleep_condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_allocated_sleep_condition(::std::string* sleep_condition) {
  if (sleep_condition != nullptr) {
    set_has_sleep_condition();
  } else {
    clear_has_sleep_condition();
  }
  sleep_condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sleep_condition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.sleep_condition)
}

// optional string body_measure = 12;
inline bool QualityLifeMonthNotifyAns::has_body_measure() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_body_measure() {
  _has_bits_[0] |= 0x00000800u;
}
inline void QualityLifeMonthNotifyAns::clear_has_body_measure() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void QualityLifeMonthNotifyAns::clear_body_measure() {
  body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_measure();
}
inline const ::std::string& QualityLifeMonthNotifyAns::body_measure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.body_measure)
  return body_measure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_body_measure(const ::std::string& value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.body_measure)
}
inline void QualityLifeMonthNotifyAns::set_body_measure(const char* value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.body_measure)
}
inline void QualityLifeMonthNotifyAns::set_body_measure(const char* value, size_t size) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.body_measure)
}
inline ::std::string* QualityLifeMonthNotifyAns::mutable_body_measure() {
  set_has_body_measure();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.body_measure)
  return body_measure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeMonthNotifyAns::release_body_measure() {
  clear_has_body_measure();
  return body_measure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_allocated_body_measure(::std::string* body_measure) {
  if (body_measure != nullptr) {
    set_has_body_measure();
  } else {
    clear_has_body_measure();
  }
  body_measure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_measure);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.body_measure)
}

// optional string run_scence = 13;
inline bool QualityLifeMonthNotifyAns::has_run_scence() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_run_scence() {
  _has_bits_[0] |= 0x00001000u;
}
inline void QualityLifeMonthNotifyAns::clear_has_run_scence() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void QualityLifeMonthNotifyAns::clear_run_scence() {
  run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_run_scence();
}
inline const ::std::string& QualityLifeMonthNotifyAns::run_scence() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.run_scence)
  return run_scence_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_run_scence(const ::std::string& value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.run_scence)
}
inline void QualityLifeMonthNotifyAns::set_run_scence(const char* value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.run_scence)
}
inline void QualityLifeMonthNotifyAns::set_run_scence(const char* value, size_t size) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.run_scence)
}
inline ::std::string* QualityLifeMonthNotifyAns::mutable_run_scence() {
  set_has_run_scence();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.run_scence)
  return run_scence_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeMonthNotifyAns::release_run_scence() {
  clear_has_run_scence();
  return run_scence_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_allocated_run_scence(::std::string* run_scence) {
  if (run_scence != nullptr) {
    set_has_run_scence();
  } else {
    clear_has_run_scence();
  }
  run_scence_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), run_scence);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.run_scence)
}

// optional string eat_nutrition = 14;
inline bool QualityLifeMonthNotifyAns::has_eat_nutrition() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void QualityLifeMonthNotifyAns::set_has_eat_nutrition() {
  _has_bits_[0] |= 0x00002000u;
}
inline void QualityLifeMonthNotifyAns::clear_has_eat_nutrition() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void QualityLifeMonthNotifyAns::clear_eat_nutrition() {
  eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eat_nutrition();
}
inline const ::std::string& QualityLifeMonthNotifyAns::eat_nutrition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition)
  return eat_nutrition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_eat_nutrition(const ::std::string& value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition)
}
inline void QualityLifeMonthNotifyAns::set_eat_nutrition(const char* value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition)
}
inline void QualityLifeMonthNotifyAns::set_eat_nutrition(const char* value, size_t size) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition)
}
inline ::std::string* QualityLifeMonthNotifyAns::mutable_eat_nutrition() {
  set_has_eat_nutrition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition)
  return eat_nutrition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeMonthNotifyAns::release_eat_nutrition() {
  clear_has_eat_nutrition();
  return eat_nutrition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeMonthNotifyAns::set_allocated_eat_nutrition(::std::string* eat_nutrition) {
  if (eat_nutrition != nullptr) {
    set_has_eat_nutrition();
  } else {
    clear_has_eat_nutrition();
  }
  eat_nutrition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eat_nutrition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeMonthNotifyAns.eat_nutrition)
}

// -------------------------------------------------------------------

// QualityLifeSeasonNotifyAns

// optional string user_id = 1;
inline bool QualityLifeSeasonNotifyAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QualityLifeSeasonNotifyAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& QualityLifeSeasonNotifyAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.user_id)
}
inline void QualityLifeSeasonNotifyAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.user_id)
}
inline void QualityLifeSeasonNotifyAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.user_id)
}
inline ::std::string* QualityLifeSeasonNotifyAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeSeasonNotifyAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.user_id)
}

// optional string user_name = 2;
inline bool QualityLifeSeasonNotifyAns::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QualityLifeSeasonNotifyAns::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& QualityLifeSeasonNotifyAns::user_name() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.user_name)
}
inline void QualityLifeSeasonNotifyAns::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.user_name)
}
inline void QualityLifeSeasonNotifyAns::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.user_name)
}
inline ::std::string* QualityLifeSeasonNotifyAns::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeSeasonNotifyAns::release_user_name() {
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.user_name)
}

// optional int32 age = 3;
inline bool QualityLifeSeasonNotifyAns::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QualityLifeSeasonNotifyAns::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 QualityLifeSeasonNotifyAns::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.age)
  return age_;
}
inline void QualityLifeSeasonNotifyAns::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.age)
}

// optional int32 sex = 4;
inline bool QualityLifeSeasonNotifyAns::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QualityLifeSeasonNotifyAns::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 QualityLifeSeasonNotifyAns::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.sex)
  return sex_;
}
inline void QualityLifeSeasonNotifyAns::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.sex)
}

// optional int32 notify_type = 5;
inline bool QualityLifeSeasonNotifyAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QualityLifeSeasonNotifyAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
inline ::google::protobuf::int32 QualityLifeSeasonNotifyAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.notify_type)
  return notify_type_;
}
inline void QualityLifeSeasonNotifyAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.notify_type)
}

// optional string date = 6;
inline bool QualityLifeSeasonNotifyAns::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QualityLifeSeasonNotifyAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& QualityLifeSeasonNotifyAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.date)
}
inline void QualityLifeSeasonNotifyAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.date)
}
inline void QualityLifeSeasonNotifyAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.date)
}
inline ::std::string* QualityLifeSeasonNotifyAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeSeasonNotifyAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.date)
}

// optional int32 order = 7;
inline bool QualityLifeSeasonNotifyAns::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QualityLifeSeasonNotifyAns::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 QualityLifeSeasonNotifyAns::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.order)
  return order_;
}
inline void QualityLifeSeasonNotifyAns::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.order)
}

// optional int32 health_score = 8;
inline bool QualityLifeSeasonNotifyAns::has_health_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_health_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_health_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QualityLifeSeasonNotifyAns::clear_health_score() {
  health_score_ = 0;
  clear_has_health_score();
}
inline ::google::protobuf::int32 QualityLifeSeasonNotifyAns::health_score() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.health_score)
  return health_score_;
}
inline void QualityLifeSeasonNotifyAns::set_health_score(::google::protobuf::int32 value) {
  set_has_health_score();
  health_score_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.health_score)
}

// optional string expert_segestion = 9;
inline bool QualityLifeSeasonNotifyAns::has_expert_segestion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_expert_segestion() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_expert_segestion() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QualityLifeSeasonNotifyAns::clear_expert_segestion() {
  expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expert_segestion();
}
inline const ::std::string& QualityLifeSeasonNotifyAns::expert_segestion() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion)
  return expert_segestion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_expert_segestion(const ::std::string& value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion)
}
inline void QualityLifeSeasonNotifyAns::set_expert_segestion(const char* value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion)
}
inline void QualityLifeSeasonNotifyAns::set_expert_segestion(const char* value, size_t size) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion)
}
inline ::std::string* QualityLifeSeasonNotifyAns::mutable_expert_segestion() {
  set_has_expert_segestion();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion)
  return expert_segestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeSeasonNotifyAns::release_expert_segestion() {
  clear_has_expert_segestion();
  return expert_segestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_allocated_expert_segestion(::std::string* expert_segestion) {
  if (expert_segestion != nullptr) {
    set_has_expert_segestion();
  } else {
    clear_has_expert_segestion();
  }
  expert_segestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expert_segestion);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.expert_segestion)
}

// optional string regular_act = 10;
inline bool QualityLifeSeasonNotifyAns::has_regular_act() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_regular_act() {
  _has_bits_[0] |= 0x00000200u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_regular_act() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void QualityLifeSeasonNotifyAns::clear_regular_act() {
  regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regular_act();
}
inline const ::std::string& QualityLifeSeasonNotifyAns::regular_act() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.regular_act)
  return regular_act_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_regular_act(const ::std::string& value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.regular_act)
}
inline void QualityLifeSeasonNotifyAns::set_regular_act(const char* value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.regular_act)
}
inline void QualityLifeSeasonNotifyAns::set_regular_act(const char* value, size_t size) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.regular_act)
}
inline ::std::string* QualityLifeSeasonNotifyAns::mutable_regular_act() {
  set_has_regular_act();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.regular_act)
  return regular_act_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeSeasonNotifyAns::release_regular_act() {
  clear_has_regular_act();
  return regular_act_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_allocated_regular_act(::std::string* regular_act) {
  if (regular_act != nullptr) {
    set_has_regular_act();
  } else {
    clear_has_regular_act();
  }
  regular_act_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regular_act);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.regular_act)
}

// optional string sleep_condition = 11;
inline bool QualityLifeSeasonNotifyAns::has_sleep_condition() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_sleep_condition() {
  _has_bits_[0] |= 0x00000400u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_sleep_condition() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void QualityLifeSeasonNotifyAns::clear_sleep_condition() {
  sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sleep_condition();
}
inline const ::std::string& QualityLifeSeasonNotifyAns::sleep_condition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition)
  return sleep_condition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_sleep_condition(const ::std::string& value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition)
}
inline void QualityLifeSeasonNotifyAns::set_sleep_condition(const char* value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition)
}
inline void QualityLifeSeasonNotifyAns::set_sleep_condition(const char* value, size_t size) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition)
}
inline ::std::string* QualityLifeSeasonNotifyAns::mutable_sleep_condition() {
  set_has_sleep_condition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition)
  return sleep_condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeSeasonNotifyAns::release_sleep_condition() {
  clear_has_sleep_condition();
  return sleep_condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_allocated_sleep_condition(::std::string* sleep_condition) {
  if (sleep_condition != nullptr) {
    set_has_sleep_condition();
  } else {
    clear_has_sleep_condition();
  }
  sleep_condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sleep_condition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.sleep_condition)
}

// optional string body_measure = 12;
inline bool QualityLifeSeasonNotifyAns::has_body_measure() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_body_measure() {
  _has_bits_[0] |= 0x00000800u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_body_measure() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void QualityLifeSeasonNotifyAns::clear_body_measure() {
  body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_measure();
}
inline const ::std::string& QualityLifeSeasonNotifyAns::body_measure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.body_measure)
  return body_measure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_body_measure(const ::std::string& value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.body_measure)
}
inline void QualityLifeSeasonNotifyAns::set_body_measure(const char* value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.body_measure)
}
inline void QualityLifeSeasonNotifyAns::set_body_measure(const char* value, size_t size) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.body_measure)
}
inline ::std::string* QualityLifeSeasonNotifyAns::mutable_body_measure() {
  set_has_body_measure();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.body_measure)
  return body_measure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeSeasonNotifyAns::release_body_measure() {
  clear_has_body_measure();
  return body_measure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_allocated_body_measure(::std::string* body_measure) {
  if (body_measure != nullptr) {
    set_has_body_measure();
  } else {
    clear_has_body_measure();
  }
  body_measure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_measure);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.body_measure)
}

// optional string run_scence = 13;
inline bool QualityLifeSeasonNotifyAns::has_run_scence() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_run_scence() {
  _has_bits_[0] |= 0x00001000u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_run_scence() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void QualityLifeSeasonNotifyAns::clear_run_scence() {
  run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_run_scence();
}
inline const ::std::string& QualityLifeSeasonNotifyAns::run_scence() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.run_scence)
  return run_scence_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_run_scence(const ::std::string& value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.run_scence)
}
inline void QualityLifeSeasonNotifyAns::set_run_scence(const char* value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.run_scence)
}
inline void QualityLifeSeasonNotifyAns::set_run_scence(const char* value, size_t size) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.run_scence)
}
inline ::std::string* QualityLifeSeasonNotifyAns::mutable_run_scence() {
  set_has_run_scence();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.run_scence)
  return run_scence_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeSeasonNotifyAns::release_run_scence() {
  clear_has_run_scence();
  return run_scence_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_allocated_run_scence(::std::string* run_scence) {
  if (run_scence != nullptr) {
    set_has_run_scence();
  } else {
    clear_has_run_scence();
  }
  run_scence_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), run_scence);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.run_scence)
}

// optional string eat_nutrition = 14;
inline bool QualityLifeSeasonNotifyAns::has_eat_nutrition() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_eat_nutrition() {
  _has_bits_[0] |= 0x00002000u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_eat_nutrition() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void QualityLifeSeasonNotifyAns::clear_eat_nutrition() {
  eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eat_nutrition();
}
inline const ::std::string& QualityLifeSeasonNotifyAns::eat_nutrition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition)
  return eat_nutrition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_eat_nutrition(const ::std::string& value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition)
}
inline void QualityLifeSeasonNotifyAns::set_eat_nutrition(const char* value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition)
}
inline void QualityLifeSeasonNotifyAns::set_eat_nutrition(const char* value, size_t size) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition)
}
inline ::std::string* QualityLifeSeasonNotifyAns::mutable_eat_nutrition() {
  set_has_eat_nutrition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition)
  return eat_nutrition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeSeasonNotifyAns::release_eat_nutrition() {
  clear_has_eat_nutrition();
  return eat_nutrition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_allocated_eat_nutrition(::std::string* eat_nutrition) {
  if (eat_nutrition != nullptr) {
    set_has_eat_nutrition();
  } else {
    clear_has_eat_nutrition();
  }
  eat_nutrition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eat_nutrition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.eat_nutrition)
}

// optional string psychology_health = 15;
inline bool QualityLifeSeasonNotifyAns::has_psychology_health() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void QualityLifeSeasonNotifyAns::set_has_psychology_health() {
  _has_bits_[0] |= 0x00004000u;
}
inline void QualityLifeSeasonNotifyAns::clear_has_psychology_health() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void QualityLifeSeasonNotifyAns::clear_psychology_health() {
  psychology_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psychology_health();
}
inline const ::std::string& QualityLifeSeasonNotifyAns::psychology_health() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health)
  return psychology_health_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_psychology_health(const ::std::string& value) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health)
}
inline void QualityLifeSeasonNotifyAns::set_psychology_health(const char* value) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health)
}
inline void QualityLifeSeasonNotifyAns::set_psychology_health(const char* value, size_t size) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health)
}
inline ::std::string* QualityLifeSeasonNotifyAns::mutable_psychology_health() {
  set_has_psychology_health();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health)
  return psychology_health_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeSeasonNotifyAns::release_psychology_health() {
  clear_has_psychology_health();
  return psychology_health_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeSeasonNotifyAns::set_allocated_psychology_health(::std::string* psychology_health) {
  if (psychology_health != nullptr) {
    set_has_psychology_health();
  } else {
    clear_has_psychology_health();
  }
  psychology_health_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psychology_health);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeSeasonNotifyAns.psychology_health)
}

// -------------------------------------------------------------------

// QualityLifeHalfYearNotifyAns

// optional string user_id = 1;
inline bool QualityLifeHalfYearNotifyAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QualityLifeHalfYearNotifyAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& QualityLifeHalfYearNotifyAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.user_id)
}
inline void QualityLifeHalfYearNotifyAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.user_id)
}
inline void QualityLifeHalfYearNotifyAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.user_id)
}
inline ::std::string* QualityLifeHalfYearNotifyAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeHalfYearNotifyAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.user_id)
}

// optional string user_name = 2;
inline bool QualityLifeHalfYearNotifyAns::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QualityLifeHalfYearNotifyAns::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& QualityLifeHalfYearNotifyAns::user_name() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.user_name)
}
inline void QualityLifeHalfYearNotifyAns::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.user_name)
}
inline void QualityLifeHalfYearNotifyAns::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.user_name)
}
inline ::std::string* QualityLifeHalfYearNotifyAns::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeHalfYearNotifyAns::release_user_name() {
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.user_name)
}

// optional int32 age = 3;
inline bool QualityLifeHalfYearNotifyAns::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QualityLifeHalfYearNotifyAns::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 QualityLifeHalfYearNotifyAns::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.age)
  return age_;
}
inline void QualityLifeHalfYearNotifyAns::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.age)
}

// optional int32 sex = 4;
inline bool QualityLifeHalfYearNotifyAns::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QualityLifeHalfYearNotifyAns::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 QualityLifeHalfYearNotifyAns::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.sex)
  return sex_;
}
inline void QualityLifeHalfYearNotifyAns::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.sex)
}

// optional int32 notify_type = 5;
inline bool QualityLifeHalfYearNotifyAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QualityLifeHalfYearNotifyAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
inline ::google::protobuf::int32 QualityLifeHalfYearNotifyAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.notify_type)
  return notify_type_;
}
inline void QualityLifeHalfYearNotifyAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.notify_type)
}

// optional string date = 6;
inline bool QualityLifeHalfYearNotifyAns::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QualityLifeHalfYearNotifyAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& QualityLifeHalfYearNotifyAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.date)
}
inline void QualityLifeHalfYearNotifyAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.date)
}
inline void QualityLifeHalfYearNotifyAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.date)
}
inline ::std::string* QualityLifeHalfYearNotifyAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeHalfYearNotifyAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.date)
}

// optional int32 order = 7;
inline bool QualityLifeHalfYearNotifyAns::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QualityLifeHalfYearNotifyAns::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 QualityLifeHalfYearNotifyAns::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.order)
  return order_;
}
inline void QualityLifeHalfYearNotifyAns::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.order)
}

// optional int32 health_score = 8;
inline bool QualityLifeHalfYearNotifyAns::has_health_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_health_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_health_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QualityLifeHalfYearNotifyAns::clear_health_score() {
  health_score_ = 0;
  clear_has_health_score();
}
inline ::google::protobuf::int32 QualityLifeHalfYearNotifyAns::health_score() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.health_score)
  return health_score_;
}
inline void QualityLifeHalfYearNotifyAns::set_health_score(::google::protobuf::int32 value) {
  set_has_health_score();
  health_score_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.health_score)
}

// optional string expert_segestion = 9;
inline bool QualityLifeHalfYearNotifyAns::has_expert_segestion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_expert_segestion() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_expert_segestion() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QualityLifeHalfYearNotifyAns::clear_expert_segestion() {
  expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expert_segestion();
}
inline const ::std::string& QualityLifeHalfYearNotifyAns::expert_segestion() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion)
  return expert_segestion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_expert_segestion(const ::std::string& value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion)
}
inline void QualityLifeHalfYearNotifyAns::set_expert_segestion(const char* value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion)
}
inline void QualityLifeHalfYearNotifyAns::set_expert_segestion(const char* value, size_t size) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion)
}
inline ::std::string* QualityLifeHalfYearNotifyAns::mutable_expert_segestion() {
  set_has_expert_segestion();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion)
  return expert_segestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeHalfYearNotifyAns::release_expert_segestion() {
  clear_has_expert_segestion();
  return expert_segestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_allocated_expert_segestion(::std::string* expert_segestion) {
  if (expert_segestion != nullptr) {
    set_has_expert_segestion();
  } else {
    clear_has_expert_segestion();
  }
  expert_segestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expert_segestion);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.expert_segestion)
}

// optional string regular_act = 10;
inline bool QualityLifeHalfYearNotifyAns::has_regular_act() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_regular_act() {
  _has_bits_[0] |= 0x00000200u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_regular_act() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void QualityLifeHalfYearNotifyAns::clear_regular_act() {
  regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regular_act();
}
inline const ::std::string& QualityLifeHalfYearNotifyAns::regular_act() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act)
  return regular_act_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_regular_act(const ::std::string& value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act)
}
inline void QualityLifeHalfYearNotifyAns::set_regular_act(const char* value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act)
}
inline void QualityLifeHalfYearNotifyAns::set_regular_act(const char* value, size_t size) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act)
}
inline ::std::string* QualityLifeHalfYearNotifyAns::mutable_regular_act() {
  set_has_regular_act();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act)
  return regular_act_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeHalfYearNotifyAns::release_regular_act() {
  clear_has_regular_act();
  return regular_act_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_allocated_regular_act(::std::string* regular_act) {
  if (regular_act != nullptr) {
    set_has_regular_act();
  } else {
    clear_has_regular_act();
  }
  regular_act_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regular_act);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.regular_act)
}

// optional string sleep_condition = 11;
inline bool QualityLifeHalfYearNotifyAns::has_sleep_condition() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_sleep_condition() {
  _has_bits_[0] |= 0x00000400u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_sleep_condition() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void QualityLifeHalfYearNotifyAns::clear_sleep_condition() {
  sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sleep_condition();
}
inline const ::std::string& QualityLifeHalfYearNotifyAns::sleep_condition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition)
  return sleep_condition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_sleep_condition(const ::std::string& value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition)
}
inline void QualityLifeHalfYearNotifyAns::set_sleep_condition(const char* value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition)
}
inline void QualityLifeHalfYearNotifyAns::set_sleep_condition(const char* value, size_t size) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition)
}
inline ::std::string* QualityLifeHalfYearNotifyAns::mutable_sleep_condition() {
  set_has_sleep_condition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition)
  return sleep_condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeHalfYearNotifyAns::release_sleep_condition() {
  clear_has_sleep_condition();
  return sleep_condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_allocated_sleep_condition(::std::string* sleep_condition) {
  if (sleep_condition != nullptr) {
    set_has_sleep_condition();
  } else {
    clear_has_sleep_condition();
  }
  sleep_condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sleep_condition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.sleep_condition)
}

// optional string body_measure = 12;
inline bool QualityLifeHalfYearNotifyAns::has_body_measure() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_body_measure() {
  _has_bits_[0] |= 0x00000800u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_body_measure() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void QualityLifeHalfYearNotifyAns::clear_body_measure() {
  body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_measure();
}
inline const ::std::string& QualityLifeHalfYearNotifyAns::body_measure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure)
  return body_measure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_body_measure(const ::std::string& value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure)
}
inline void QualityLifeHalfYearNotifyAns::set_body_measure(const char* value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure)
}
inline void QualityLifeHalfYearNotifyAns::set_body_measure(const char* value, size_t size) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure)
}
inline ::std::string* QualityLifeHalfYearNotifyAns::mutable_body_measure() {
  set_has_body_measure();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure)
  return body_measure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeHalfYearNotifyAns::release_body_measure() {
  clear_has_body_measure();
  return body_measure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_allocated_body_measure(::std::string* body_measure) {
  if (body_measure != nullptr) {
    set_has_body_measure();
  } else {
    clear_has_body_measure();
  }
  body_measure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_measure);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.body_measure)
}

// optional string run_scence = 13;
inline bool QualityLifeHalfYearNotifyAns::has_run_scence() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_run_scence() {
  _has_bits_[0] |= 0x00001000u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_run_scence() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void QualityLifeHalfYearNotifyAns::clear_run_scence() {
  run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_run_scence();
}
inline const ::std::string& QualityLifeHalfYearNotifyAns::run_scence() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence)
  return run_scence_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_run_scence(const ::std::string& value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence)
}
inline void QualityLifeHalfYearNotifyAns::set_run_scence(const char* value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence)
}
inline void QualityLifeHalfYearNotifyAns::set_run_scence(const char* value, size_t size) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence)
}
inline ::std::string* QualityLifeHalfYearNotifyAns::mutable_run_scence() {
  set_has_run_scence();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence)
  return run_scence_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeHalfYearNotifyAns::release_run_scence() {
  clear_has_run_scence();
  return run_scence_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_allocated_run_scence(::std::string* run_scence) {
  if (run_scence != nullptr) {
    set_has_run_scence();
  } else {
    clear_has_run_scence();
  }
  run_scence_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), run_scence);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.run_scence)
}

// optional string eat_nutrition = 14;
inline bool QualityLifeHalfYearNotifyAns::has_eat_nutrition() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_eat_nutrition() {
  _has_bits_[0] |= 0x00002000u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_eat_nutrition() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void QualityLifeHalfYearNotifyAns::clear_eat_nutrition() {
  eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eat_nutrition();
}
inline const ::std::string& QualityLifeHalfYearNotifyAns::eat_nutrition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition)
  return eat_nutrition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_eat_nutrition(const ::std::string& value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition)
}
inline void QualityLifeHalfYearNotifyAns::set_eat_nutrition(const char* value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition)
}
inline void QualityLifeHalfYearNotifyAns::set_eat_nutrition(const char* value, size_t size) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition)
}
inline ::std::string* QualityLifeHalfYearNotifyAns::mutable_eat_nutrition() {
  set_has_eat_nutrition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition)
  return eat_nutrition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeHalfYearNotifyAns::release_eat_nutrition() {
  clear_has_eat_nutrition();
  return eat_nutrition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_allocated_eat_nutrition(::std::string* eat_nutrition) {
  if (eat_nutrition != nullptr) {
    set_has_eat_nutrition();
  } else {
    clear_has_eat_nutrition();
  }
  eat_nutrition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eat_nutrition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.eat_nutrition)
}

// optional string psychology_health = 15;
inline bool QualityLifeHalfYearNotifyAns::has_psychology_health() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void QualityLifeHalfYearNotifyAns::set_has_psychology_health() {
  _has_bits_[0] |= 0x00004000u;
}
inline void QualityLifeHalfYearNotifyAns::clear_has_psychology_health() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void QualityLifeHalfYearNotifyAns::clear_psychology_health() {
  psychology_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psychology_health();
}
inline const ::std::string& QualityLifeHalfYearNotifyAns::psychology_health() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health)
  return psychology_health_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_psychology_health(const ::std::string& value) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health)
}
inline void QualityLifeHalfYearNotifyAns::set_psychology_health(const char* value) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health)
}
inline void QualityLifeHalfYearNotifyAns::set_psychology_health(const char* value, size_t size) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health)
}
inline ::std::string* QualityLifeHalfYearNotifyAns::mutable_psychology_health() {
  set_has_psychology_health();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health)
  return psychology_health_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeHalfYearNotifyAns::release_psychology_health() {
  clear_has_psychology_health();
  return psychology_health_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeHalfYearNotifyAns::set_allocated_psychology_health(::std::string* psychology_health) {
  if (psychology_health != nullptr) {
    set_has_psychology_health();
  } else {
    clear_has_psychology_health();
  }
  psychology_health_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psychology_health);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeHalfYearNotifyAns.psychology_health)
}

// -------------------------------------------------------------------

// QualityLifeYearNotifyAns

// optional string user_id = 1;
inline bool QualityLifeYearNotifyAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QualityLifeYearNotifyAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QualityLifeYearNotifyAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& QualityLifeYearNotifyAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.user_id)
}
inline void QualityLifeYearNotifyAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.user_id)
}
inline void QualityLifeYearNotifyAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.user_id)
}
inline ::std::string* QualityLifeYearNotifyAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeYearNotifyAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.user_id)
}

// optional string user_name = 2;
inline bool QualityLifeYearNotifyAns::has_user_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_user_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QualityLifeYearNotifyAns::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QualityLifeYearNotifyAns::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& QualityLifeYearNotifyAns::user_name() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.user_name)
}
inline void QualityLifeYearNotifyAns::set_user_name(const char* value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.user_name)
}
inline void QualityLifeYearNotifyAns::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.user_name)
}
inline ::std::string* QualityLifeYearNotifyAns::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeYearNotifyAns::release_user_name() {
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_allocated_user_name(::std::string* user_name) {
  if (user_name != nullptr) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.user_name)
}

// optional int32 age = 3;
inline bool QualityLifeYearNotifyAns::has_age() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_age() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QualityLifeYearNotifyAns::clear_has_age() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QualityLifeYearNotifyAns::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 QualityLifeYearNotifyAns::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.age)
  return age_;
}
inline void QualityLifeYearNotifyAns::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.age)
}

// optional int32 sex = 4;
inline bool QualityLifeYearNotifyAns::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QualityLifeYearNotifyAns::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QualityLifeYearNotifyAns::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 QualityLifeYearNotifyAns::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.sex)
  return sex_;
}
inline void QualityLifeYearNotifyAns::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.sex)
}

// optional int32 notify_type = 5;
inline bool QualityLifeYearNotifyAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QualityLifeYearNotifyAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QualityLifeYearNotifyAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
inline ::google::protobuf::int32 QualityLifeYearNotifyAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.notify_type)
  return notify_type_;
}
inline void QualityLifeYearNotifyAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.notify_type)
}

// optional string date = 6;
inline bool QualityLifeYearNotifyAns::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QualityLifeYearNotifyAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QualityLifeYearNotifyAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& QualityLifeYearNotifyAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.date)
}
inline void QualityLifeYearNotifyAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.date)
}
inline void QualityLifeYearNotifyAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.date)
}
inline ::std::string* QualityLifeYearNotifyAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeYearNotifyAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.date)
}

// optional int32 order = 7;
inline bool QualityLifeYearNotifyAns::has_order() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_order() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QualityLifeYearNotifyAns::clear_has_order() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QualityLifeYearNotifyAns::clear_order() {
  order_ = 0;
  clear_has_order();
}
inline ::google::protobuf::int32 QualityLifeYearNotifyAns::order() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.order)
  return order_;
}
inline void QualityLifeYearNotifyAns::set_order(::google::protobuf::int32 value) {
  set_has_order();
  order_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.order)
}

// optional int32 health_score = 8;
inline bool QualityLifeYearNotifyAns::has_health_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_health_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void QualityLifeYearNotifyAns::clear_has_health_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void QualityLifeYearNotifyAns::clear_health_score() {
  health_score_ = 0;
  clear_has_health_score();
}
inline ::google::protobuf::int32 QualityLifeYearNotifyAns::health_score() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.health_score)
  return health_score_;
}
inline void QualityLifeYearNotifyAns::set_health_score(::google::protobuf::int32 value) {
  set_has_health_score();
  health_score_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.health_score)
}

// optional string expert_segestion = 9;
inline bool QualityLifeYearNotifyAns::has_expert_segestion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_expert_segestion() {
  _has_bits_[0] |= 0x00000100u;
}
inline void QualityLifeYearNotifyAns::clear_has_expert_segestion() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void QualityLifeYearNotifyAns::clear_expert_segestion() {
  expert_segestion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expert_segestion();
}
inline const ::std::string& QualityLifeYearNotifyAns::expert_segestion() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.expert_segestion)
  return expert_segestion_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_expert_segestion(const ::std::string& value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.expert_segestion)
}
inline void QualityLifeYearNotifyAns::set_expert_segestion(const char* value) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.expert_segestion)
}
inline void QualityLifeYearNotifyAns::set_expert_segestion(const char* value, size_t size) {
  set_has_expert_segestion();
  expert_segestion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.expert_segestion)
}
inline ::std::string* QualityLifeYearNotifyAns::mutable_expert_segestion() {
  set_has_expert_segestion();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.expert_segestion)
  return expert_segestion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeYearNotifyAns::release_expert_segestion() {
  clear_has_expert_segestion();
  return expert_segestion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_allocated_expert_segestion(::std::string* expert_segestion) {
  if (expert_segestion != nullptr) {
    set_has_expert_segestion();
  } else {
    clear_has_expert_segestion();
  }
  expert_segestion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), expert_segestion);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.expert_segestion)
}

// optional string regular_act = 10;
inline bool QualityLifeYearNotifyAns::has_regular_act() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_regular_act() {
  _has_bits_[0] |= 0x00000200u;
}
inline void QualityLifeYearNotifyAns::clear_has_regular_act() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void QualityLifeYearNotifyAns::clear_regular_act() {
  regular_act_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_regular_act();
}
inline const ::std::string& QualityLifeYearNotifyAns::regular_act() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.regular_act)
  return regular_act_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_regular_act(const ::std::string& value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.regular_act)
}
inline void QualityLifeYearNotifyAns::set_regular_act(const char* value) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.regular_act)
}
inline void QualityLifeYearNotifyAns::set_regular_act(const char* value, size_t size) {
  set_has_regular_act();
  regular_act_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.regular_act)
}
inline ::std::string* QualityLifeYearNotifyAns::mutable_regular_act() {
  set_has_regular_act();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.regular_act)
  return regular_act_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeYearNotifyAns::release_regular_act() {
  clear_has_regular_act();
  return regular_act_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_allocated_regular_act(::std::string* regular_act) {
  if (regular_act != nullptr) {
    set_has_regular_act();
  } else {
    clear_has_regular_act();
  }
  regular_act_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regular_act);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.regular_act)
}

// optional string sleep_condition = 11;
inline bool QualityLifeYearNotifyAns::has_sleep_condition() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_sleep_condition() {
  _has_bits_[0] |= 0x00000400u;
}
inline void QualityLifeYearNotifyAns::clear_has_sleep_condition() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void QualityLifeYearNotifyAns::clear_sleep_condition() {
  sleep_condition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sleep_condition();
}
inline const ::std::string& QualityLifeYearNotifyAns::sleep_condition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.sleep_condition)
  return sleep_condition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_sleep_condition(const ::std::string& value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.sleep_condition)
}
inline void QualityLifeYearNotifyAns::set_sleep_condition(const char* value) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.sleep_condition)
}
inline void QualityLifeYearNotifyAns::set_sleep_condition(const char* value, size_t size) {
  set_has_sleep_condition();
  sleep_condition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.sleep_condition)
}
inline ::std::string* QualityLifeYearNotifyAns::mutable_sleep_condition() {
  set_has_sleep_condition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.sleep_condition)
  return sleep_condition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeYearNotifyAns::release_sleep_condition() {
  clear_has_sleep_condition();
  return sleep_condition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_allocated_sleep_condition(::std::string* sleep_condition) {
  if (sleep_condition != nullptr) {
    set_has_sleep_condition();
  } else {
    clear_has_sleep_condition();
  }
  sleep_condition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sleep_condition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.sleep_condition)
}

// optional string body_measure = 12;
inline bool QualityLifeYearNotifyAns::has_body_measure() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_body_measure() {
  _has_bits_[0] |= 0x00000800u;
}
inline void QualityLifeYearNotifyAns::clear_has_body_measure() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void QualityLifeYearNotifyAns::clear_body_measure() {
  body_measure_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body_measure();
}
inline const ::std::string& QualityLifeYearNotifyAns::body_measure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.body_measure)
  return body_measure_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_body_measure(const ::std::string& value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.body_measure)
}
inline void QualityLifeYearNotifyAns::set_body_measure(const char* value) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.body_measure)
}
inline void QualityLifeYearNotifyAns::set_body_measure(const char* value, size_t size) {
  set_has_body_measure();
  body_measure_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.body_measure)
}
inline ::std::string* QualityLifeYearNotifyAns::mutable_body_measure() {
  set_has_body_measure();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.body_measure)
  return body_measure_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeYearNotifyAns::release_body_measure() {
  clear_has_body_measure();
  return body_measure_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_allocated_body_measure(::std::string* body_measure) {
  if (body_measure != nullptr) {
    set_has_body_measure();
  } else {
    clear_has_body_measure();
  }
  body_measure_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body_measure);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.body_measure)
}

// optional string run_scence = 13;
inline bool QualityLifeYearNotifyAns::has_run_scence() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_run_scence() {
  _has_bits_[0] |= 0x00001000u;
}
inline void QualityLifeYearNotifyAns::clear_has_run_scence() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void QualityLifeYearNotifyAns::clear_run_scence() {
  run_scence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_run_scence();
}
inline const ::std::string& QualityLifeYearNotifyAns::run_scence() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.run_scence)
  return run_scence_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_run_scence(const ::std::string& value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.run_scence)
}
inline void QualityLifeYearNotifyAns::set_run_scence(const char* value) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.run_scence)
}
inline void QualityLifeYearNotifyAns::set_run_scence(const char* value, size_t size) {
  set_has_run_scence();
  run_scence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.run_scence)
}
inline ::std::string* QualityLifeYearNotifyAns::mutable_run_scence() {
  set_has_run_scence();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.run_scence)
  return run_scence_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeYearNotifyAns::release_run_scence() {
  clear_has_run_scence();
  return run_scence_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_allocated_run_scence(::std::string* run_scence) {
  if (run_scence != nullptr) {
    set_has_run_scence();
  } else {
    clear_has_run_scence();
  }
  run_scence_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), run_scence);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.run_scence)
}

// optional string eat_nutrition = 14;
inline bool QualityLifeYearNotifyAns::has_eat_nutrition() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_eat_nutrition() {
  _has_bits_[0] |= 0x00002000u;
}
inline void QualityLifeYearNotifyAns::clear_has_eat_nutrition() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void QualityLifeYearNotifyAns::clear_eat_nutrition() {
  eat_nutrition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_eat_nutrition();
}
inline const ::std::string& QualityLifeYearNotifyAns::eat_nutrition() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition)
  return eat_nutrition_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_eat_nutrition(const ::std::string& value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition)
}
inline void QualityLifeYearNotifyAns::set_eat_nutrition(const char* value) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition)
}
inline void QualityLifeYearNotifyAns::set_eat_nutrition(const char* value, size_t size) {
  set_has_eat_nutrition();
  eat_nutrition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition)
}
inline ::std::string* QualityLifeYearNotifyAns::mutable_eat_nutrition() {
  set_has_eat_nutrition();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition)
  return eat_nutrition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeYearNotifyAns::release_eat_nutrition() {
  clear_has_eat_nutrition();
  return eat_nutrition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_allocated_eat_nutrition(::std::string* eat_nutrition) {
  if (eat_nutrition != nullptr) {
    set_has_eat_nutrition();
  } else {
    clear_has_eat_nutrition();
  }
  eat_nutrition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eat_nutrition);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.eat_nutrition)
}

// optional string psychology_health = 15;
inline bool QualityLifeYearNotifyAns::has_psychology_health() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void QualityLifeYearNotifyAns::set_has_psychology_health() {
  _has_bits_[0] |= 0x00004000u;
}
inline void QualityLifeYearNotifyAns::clear_has_psychology_health() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void QualityLifeYearNotifyAns::clear_psychology_health() {
  psychology_health_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_psychology_health();
}
inline const ::std::string& QualityLifeYearNotifyAns::psychology_health() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeYearNotifyAns.psychology_health)
  return psychology_health_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_psychology_health(const ::std::string& value) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeYearNotifyAns.psychology_health)
}
inline void QualityLifeYearNotifyAns::set_psychology_health(const char* value) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeYearNotifyAns.psychology_health)
}
inline void QualityLifeYearNotifyAns::set_psychology_health(const char* value, size_t size) {
  set_has_psychology_health();
  psychology_health_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeYearNotifyAns.psychology_health)
}
inline ::std::string* QualityLifeYearNotifyAns::mutable_psychology_health() {
  set_has_psychology_health();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeYearNotifyAns.psychology_health)
  return psychology_health_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeYearNotifyAns::release_psychology_health() {
  clear_has_psychology_health();
  return psychology_health_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeYearNotifyAns::set_allocated_psychology_health(::std::string* psychology_health) {
  if (psychology_health != nullptr) {
    set_has_psychology_health();
  } else {
    clear_has_psychology_health();
  }
  psychology_health_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psychology_health);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeYearNotifyAns.psychology_health)
}

// -------------------------------------------------------------------

// TransHSKLHisData

// optional string user_id = 1;
inline bool TransHSKLHisData::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransHSKLHisData::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransHSKLHisData::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransHSKLHisData::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& TransHSKLHisData::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransHSKLHisData::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.user_id)
}
inline void TransHSKLHisData::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransHSKLHisData.user_id)
}
inline void TransHSKLHisData::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransHSKLHisData.user_id)
}
inline ::std::string* TransHSKLHisData::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransHSKLHisData.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransHSKLHisData::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransHSKLHisData::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransHSKLHisData.user_id)
}

// optional string host_id = 2;
inline bool TransHSKLHisData::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransHSKLHisData::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransHSKLHisData::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransHSKLHisData::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
inline const ::std::string& TransHSKLHisData::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransHSKLHisData::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.host_id)
}
inline void TransHSKLHisData::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransHSKLHisData.host_id)
}
inline void TransHSKLHisData::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransHSKLHisData.host_id)
}
inline ::std::string* TransHSKLHisData::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransHSKLHisData.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransHSKLHisData::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransHSKLHisData::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransHSKLHisData.host_id)
}

// optional string date = 3;
inline bool TransHSKLHisData::has_date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransHSKLHisData::set_has_date() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransHSKLHisData::clear_has_date() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransHSKLHisData::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& TransHSKLHisData::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransHSKLHisData::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.date)
}
inline void TransHSKLHisData::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransHSKLHisData.date)
}
inline void TransHSKLHisData::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransHSKLHisData.date)
}
inline ::std::string* TransHSKLHisData::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransHSKLHisData.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransHSKLHisData::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransHSKLHisData::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransHSKLHisData.date)
}

// optional int32 clear_sleep = 4;
inline bool TransHSKLHisData::has_clear_sleep() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransHSKLHisData::set_has_clear_sleep() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TransHSKLHisData::clear_has_clear_sleep() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TransHSKLHisData::clear_clear_sleep() {
  clear_sleep_ = 0;
  clear_has_clear_sleep();
}
inline ::google::protobuf::int32 TransHSKLHisData::clear_sleep() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.clear_sleep)
  return clear_sleep_;
}
inline void TransHSKLHisData::set_clear_sleep(::google::protobuf::int32 value) {
  set_has_clear_sleep();
  clear_sleep_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.clear_sleep)
}

// optional int32 low_sleep = 5;
inline bool TransHSKLHisData::has_low_sleep() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TransHSKLHisData::set_has_low_sleep() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TransHSKLHisData::clear_has_low_sleep() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TransHSKLHisData::clear_low_sleep() {
  low_sleep_ = 0;
  clear_has_low_sleep();
}
inline ::google::protobuf::int32 TransHSKLHisData::low_sleep() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.low_sleep)
  return low_sleep_;
}
inline void TransHSKLHisData::set_low_sleep(::google::protobuf::int32 value) {
  set_has_low_sleep();
  low_sleep_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.low_sleep)
}

// optional int32 mid_sleep = 6;
inline bool TransHSKLHisData::has_mid_sleep() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TransHSKLHisData::set_has_mid_sleep() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TransHSKLHisData::clear_has_mid_sleep() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TransHSKLHisData::clear_mid_sleep() {
  mid_sleep_ = 0;
  clear_has_mid_sleep();
}
inline ::google::protobuf::int32 TransHSKLHisData::mid_sleep() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.mid_sleep)
  return mid_sleep_;
}
inline void TransHSKLHisData::set_mid_sleep(::google::protobuf::int32 value) {
  set_has_mid_sleep();
  mid_sleep_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.mid_sleep)
}

// optional int32 deep_sleep = 7;
inline bool TransHSKLHisData::has_deep_sleep() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TransHSKLHisData::set_has_deep_sleep() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TransHSKLHisData::clear_has_deep_sleep() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TransHSKLHisData::clear_deep_sleep() {
  deep_sleep_ = 0;
  clear_has_deep_sleep();
}
inline ::google::protobuf::int32 TransHSKLHisData::deep_sleep() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.deep_sleep)
  return deep_sleep_;
}
inline void TransHSKLHisData::set_deep_sleep(::google::protobuf::int32 value) {
  set_has_deep_sleep();
  deep_sleep_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.deep_sleep)
}

// optional float clear_pge = 8;
inline bool TransHSKLHisData::has_clear_pge() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TransHSKLHisData::set_has_clear_pge() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TransHSKLHisData::clear_has_clear_pge() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TransHSKLHisData::clear_clear_pge() {
  clear_pge_ = 0;
  clear_has_clear_pge();
}
inline float TransHSKLHisData::clear_pge() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.clear_pge)
  return clear_pge_;
}
inline void TransHSKLHisData::set_clear_pge(float value) {
  set_has_clear_pge();
  clear_pge_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.clear_pge)
}

// optional float low_pge = 9;
inline bool TransHSKLHisData::has_low_pge() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TransHSKLHisData::set_has_low_pge() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TransHSKLHisData::clear_has_low_pge() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TransHSKLHisData::clear_low_pge() {
  low_pge_ = 0;
  clear_has_low_pge();
}
inline float TransHSKLHisData::low_pge() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.low_pge)
  return low_pge_;
}
inline void TransHSKLHisData::set_low_pge(float value) {
  set_has_low_pge();
  low_pge_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.low_pge)
}

// optional float mid_pge = 10;
inline bool TransHSKLHisData::has_mid_pge() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TransHSKLHisData::set_has_mid_pge() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TransHSKLHisData::clear_has_mid_pge() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TransHSKLHisData::clear_mid_pge() {
  mid_pge_ = 0;
  clear_has_mid_pge();
}
inline float TransHSKLHisData::mid_pge() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.mid_pge)
  return mid_pge_;
}
inline void TransHSKLHisData::set_mid_pge(float value) {
  set_has_mid_pge();
  mid_pge_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.mid_pge)
}

// optional float deep_pge = 11;
inline bool TransHSKLHisData::has_deep_pge() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TransHSKLHisData::set_has_deep_pge() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TransHSKLHisData::clear_has_deep_pge() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TransHSKLHisData::clear_deep_pge() {
  deep_pge_ = 0;
  clear_has_deep_pge();
}
inline float TransHSKLHisData::deep_pge() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransHSKLHisData.deep_pge)
  return deep_pge_;
}
inline void TransHSKLHisData::set_deep_pge(float value) {
  set_has_deep_pge();
  deep_pge_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransHSKLHisData.deep_pge)
}

// -------------------------------------------------------------------

// TransNightGuide_NightGuideNode

// optional int32 domain_id = 1;
inline bool TransNightGuide_NightGuideNode::has_domain_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransNightGuide_NightGuideNode::set_has_domain_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransNightGuide_NightGuideNode::clear_has_domain_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransNightGuide_NightGuideNode::clear_domain_id() {
  domain_id_ = 0;
  clear_has_domain_id();
}
inline ::google::protobuf::int32 TransNightGuide_NightGuideNode::domain_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.NightGuideNode.domain_id)
  return domain_id_;
}
inline void TransNightGuide_NightGuideNode::set_domain_id(::google::protobuf::int32 value) {
  set_has_domain_id();
  domain_id_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.NightGuideNode.domain_id)
}

// optional int32 node_id = 2;
inline bool TransNightGuide_NightGuideNode::has_node_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransNightGuide_NightGuideNode::set_has_node_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransNightGuide_NightGuideNode::clear_has_node_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransNightGuide_NightGuideNode::clear_node_id() {
  node_id_ = 0;
  clear_has_node_id();
}
inline ::google::protobuf::int32 TransNightGuide_NightGuideNode::node_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.NightGuideNode.node_id)
  return node_id_;
}
inline void TransNightGuide_NightGuideNode::set_node_id(::google::protobuf::int32 value) {
  set_has_node_id();
  node_id_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.NightGuideNode.node_id)
}

// optional string create_time = 3;
inline bool TransNightGuide_NightGuideNode::has_create_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransNightGuide_NightGuideNode::set_has_create_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransNightGuide_NightGuideNode::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransNightGuide_NightGuideNode::clear_create_time() {
  create_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_create_time();
}
inline const ::std::string& TransNightGuide_NightGuideNode::create_time() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.NightGuideNode.create_time)
  return create_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransNightGuide_NightGuideNode::set_create_time(const ::std::string& value) {
  set_has_create_time();
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.NightGuideNode.create_time)
}
inline void TransNightGuide_NightGuideNode::set_create_time(const char* value) {
  set_has_create_time();
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransNightGuide.NightGuideNode.create_time)
}
inline void TransNightGuide_NightGuideNode::set_create_time(const char* value, size_t size) {
  set_has_create_time();
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransNightGuide.NightGuideNode.create_time)
}
inline ::std::string* TransNightGuide_NightGuideNode::mutable_create_time() {
  set_has_create_time();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransNightGuide.NightGuideNode.create_time)
  return create_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransNightGuide_NightGuideNode::release_create_time() {
  clear_has_create_time();
  return create_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransNightGuide_NightGuideNode::set_allocated_create_time(::std::string* create_time) {
  if (create_time != nullptr) {
    set_has_create_time();
  } else {
    clear_has_create_time();
  }
  create_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), create_time);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransNightGuide.NightGuideNode.create_time)
}

// optional int32 night_duration = 4;
inline bool TransNightGuide_NightGuideNode::has_night_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransNightGuide_NightGuideNode::set_has_night_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TransNightGuide_NightGuideNode::clear_has_night_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TransNightGuide_NightGuideNode::clear_night_duration() {
  night_duration_ = 0;
  clear_has_night_duration();
}
inline ::google::protobuf::int32 TransNightGuide_NightGuideNode::night_duration() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.NightGuideNode.night_duration)
  return night_duration_;
}
inline void TransNightGuide_NightGuideNode::set_night_duration(::google::protobuf::int32 value) {
  set_has_night_duration();
  night_duration_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.NightGuideNode.night_duration)
}

// optional int32 night_interval = 5;
inline bool TransNightGuide_NightGuideNode::has_night_interval() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TransNightGuide_NightGuideNode::set_has_night_interval() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TransNightGuide_NightGuideNode::clear_has_night_interval() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TransNightGuide_NightGuideNode::clear_night_interval() {
  night_interval_ = 0;
  clear_has_night_interval();
}
inline ::google::protobuf::int32 TransNightGuide_NightGuideNode::night_interval() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.NightGuideNode.night_interval)
  return night_interval_;
}
inline void TransNightGuide_NightGuideNode::set_night_interval(::google::protobuf::int32 value) {
  set_has_night_interval();
  night_interval_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.NightGuideNode.night_interval)
}

// -------------------------------------------------------------------

// TransNightGuide

// optional string user_id = 1;
inline bool TransNightGuide::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransNightGuide::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransNightGuide::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransNightGuide::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& TransNightGuide::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransNightGuide::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.user_id)
}
inline void TransNightGuide::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransNightGuide.user_id)
}
inline void TransNightGuide::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransNightGuide.user_id)
}
inline ::std::string* TransNightGuide::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransNightGuide.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransNightGuide::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransNightGuide::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransNightGuide.user_id)
}

// optional string host_id = 2;
inline bool TransNightGuide::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransNightGuide::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransNightGuide::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransNightGuide::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
inline const ::std::string& TransNightGuide::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransNightGuide::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.host_id)
}
inline void TransNightGuide::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransNightGuide.host_id)
}
inline void TransNightGuide::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransNightGuide.host_id)
}
inline ::std::string* TransNightGuide::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransNightGuide.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransNightGuide::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransNightGuide::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransNightGuide.host_id)
}

// optional int32 record_num = 3;
inline bool TransNightGuide::has_record_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransNightGuide::set_has_record_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransNightGuide::clear_has_record_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransNightGuide::clear_record_num() {
  record_num_ = 0;
  clear_has_record_num();
}
inline ::google::protobuf::int32 TransNightGuide::record_num() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.record_num)
  return record_num_;
}
inline void TransNightGuide::set_record_num(::google::protobuf::int32 value) {
  set_has_record_num();
  record_num_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransNightGuide.record_num)
}

// repeated .YfqProtocol.TransNightGuide.NightGuideNode night_guide_node = 4;
inline int TransNightGuide::night_guide_node_size() const {
  return night_guide_node_.size();
}
inline void TransNightGuide::clear_night_guide_node() {
  night_guide_node_.Clear();
}
inline const ::YfqProtocol::TransNightGuide_NightGuideNode& TransNightGuide::night_guide_node(int index) const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransNightGuide.night_guide_node)
  return night_guide_node_.Get(index);
}
inline ::YfqProtocol::TransNightGuide_NightGuideNode* TransNightGuide::mutable_night_guide_node(int index) {
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransNightGuide.night_guide_node)
  return night_guide_node_.Mutable(index);
}
inline ::YfqProtocol::TransNightGuide_NightGuideNode* TransNightGuide::add_night_guide_node() {
  // @@protoc_insertion_point(field_add:YfqProtocol.TransNightGuide.night_guide_node)
  return night_guide_node_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransNightGuide_NightGuideNode >&
TransNightGuide::night_guide_node() const {
  // @@protoc_insertion_point(field_list:YfqProtocol.TransNightGuide.night_guide_node)
  return night_guide_node_;
}
inline ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransNightGuide_NightGuideNode >*
TransNightGuide::mutable_night_guide_node() {
  // @@protoc_insertion_point(field_mutable_list:YfqProtocol.TransNightGuide.night_guide_node)
  return &night_guide_node_;
}

// -------------------------------------------------------------------

// TransBloodPressure

// optional string user_id = 1;
inline bool TransBloodPressure::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransBloodPressure::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransBloodPressure::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransBloodPressure::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& TransBloodPressure::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBloodPressure.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransBloodPressure::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBloodPressure.user_id)
}
inline void TransBloodPressure::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransBloodPressure.user_id)
}
inline void TransBloodPressure::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransBloodPressure.user_id)
}
inline ::std::string* TransBloodPressure::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBloodPressure.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransBloodPressure::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransBloodPressure::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransBloodPressure.user_id)
}

// optional string host_id = 2;
inline bool TransBloodPressure::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransBloodPressure::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransBloodPressure::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransBloodPressure::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
inline const ::std::string& TransBloodPressure::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBloodPressure.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransBloodPressure::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBloodPressure.host_id)
}
inline void TransBloodPressure::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransBloodPressure.host_id)
}
inline void TransBloodPressure::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransBloodPressure.host_id)
}
inline ::std::string* TransBloodPressure::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBloodPressure.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransBloodPressure::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransBloodPressure::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransBloodPressure.host_id)
}

// optional float systolic_pressure = 3;
inline bool TransBloodPressure::has_systolic_pressure() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransBloodPressure::set_has_systolic_pressure() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransBloodPressure::clear_has_systolic_pressure() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransBloodPressure::clear_systolic_pressure() {
  systolic_pressure_ = 0;
  clear_has_systolic_pressure();
}
inline float TransBloodPressure::systolic_pressure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBloodPressure.systolic_pressure)
  return systolic_pressure_;
}
inline void TransBloodPressure::set_systolic_pressure(float value) {
  set_has_systolic_pressure();
  systolic_pressure_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBloodPressure.systolic_pressure)
}

// optional float diastolic_pressure = 4;
inline bool TransBloodPressure::has_diastolic_pressure() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransBloodPressure::set_has_diastolic_pressure() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TransBloodPressure::clear_has_diastolic_pressure() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TransBloodPressure::clear_diastolic_pressure() {
  diastolic_pressure_ = 0;
  clear_has_diastolic_pressure();
}
inline float TransBloodPressure::diastolic_pressure() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBloodPressure.diastolic_pressure)
  return diastolic_pressure_;
}
inline void TransBloodPressure::set_diastolic_pressure(float value) {
  set_has_diastolic_pressure();
  diastolic_pressure_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBloodPressure.diastolic_pressure)
}

// optional float heart_beat = 5;
inline bool TransBloodPressure::has_heart_beat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TransBloodPressure::set_has_heart_beat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TransBloodPressure::clear_has_heart_beat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TransBloodPressure::clear_heart_beat() {
  heart_beat_ = 0;
  clear_has_heart_beat();
}
inline float TransBloodPressure::heart_beat() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBloodPressure.heart_beat)
  return heart_beat_;
}
inline void TransBloodPressure::set_heart_beat(float value) {
  set_has_heart_beat();
  heart_beat_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBloodPressure.heart_beat)
}

// optional string date = 6;
inline bool TransBloodPressure::has_date() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TransBloodPressure::set_has_date() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TransBloodPressure::clear_has_date() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TransBloodPressure::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& TransBloodPressure::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBloodPressure.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransBloodPressure::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBloodPressure.date)
}
inline void TransBloodPressure::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransBloodPressure.date)
}
inline void TransBloodPressure::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransBloodPressure.date)
}
inline ::std::string* TransBloodPressure::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBloodPressure.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransBloodPressure::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransBloodPressure::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransBloodPressure.date)
}

// -------------------------------------------------------------------

// TransBodyComposition_BodyComposition

// optional int32 sex = 1;
inline bool TransBodyComposition_BodyComposition::has_sex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_sex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransBodyComposition_BodyComposition::clear_has_sex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransBodyComposition_BodyComposition::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 TransBodyComposition_BodyComposition::sex() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.sex)
  return sex_;
}
inline void TransBodyComposition_BodyComposition::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.sex)
}

// optional int32 age = 2;
inline bool TransBodyComposition_BodyComposition::has_age() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_age() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransBodyComposition_BodyComposition::clear_has_age() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransBodyComposition_BodyComposition::clear_age() {
  age_ = 0;
  clear_has_age();
}
inline ::google::protobuf::int32 TransBodyComposition_BodyComposition::age() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.age)
  return age_;
}
inline void TransBodyComposition_BodyComposition::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.age)
}

// optional int32 height = 3;
inline bool TransBodyComposition_BodyComposition::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransBodyComposition_BodyComposition::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransBodyComposition_BodyComposition::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 TransBodyComposition_BodyComposition::height() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.height)
  return height_;
}
inline void TransBodyComposition_BodyComposition::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.height)
}

// optional float weight = 4;
inline bool TransBodyComposition_BodyComposition::has_weight() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_weight() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TransBodyComposition_BodyComposition::clear_has_weight() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TransBodyComposition_BodyComposition::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline float TransBodyComposition_BodyComposition::weight() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.weight)
  return weight_;
}
inline void TransBodyComposition_BodyComposition::set_weight(float value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.weight)
}

// optional int32 sport_level = 5;
inline bool TransBodyComposition_BodyComposition::has_sport_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_sport_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TransBodyComposition_BodyComposition::clear_has_sport_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TransBodyComposition_BodyComposition::clear_sport_level() {
  sport_level_ = 0;
  clear_has_sport_level();
}
inline ::google::protobuf::int32 TransBodyComposition_BodyComposition::sport_level() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.sport_level)
  return sport_level_;
}
inline void TransBodyComposition_BodyComposition::set_sport_level(::google::protobuf::int32 value) {
  set_has_sport_level();
  sport_level_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.sport_level)
}

// optional float bmi = 6;
inline bool TransBodyComposition_BodyComposition::has_bmi() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_bmi() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TransBodyComposition_BodyComposition::clear_has_bmi() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TransBodyComposition_BodyComposition::clear_bmi() {
  bmi_ = 0;
  clear_has_bmi();
}
inline float TransBodyComposition_BodyComposition::bmi() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.bmi)
  return bmi_;
}
inline void TransBodyComposition_BodyComposition::set_bmi(float value) {
  set_has_bmi();
  bmi_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.bmi)
}

// optional float fat_level = 7;
inline bool TransBodyComposition_BodyComposition::has_fat_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_fat_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TransBodyComposition_BodyComposition::clear_has_fat_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TransBodyComposition_BodyComposition::clear_fat_level() {
  fat_level_ = 0;
  clear_has_fat_level();
}
inline float TransBodyComposition_BodyComposition::fat_level() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.fat_level)
  return fat_level_;
}
inline void TransBodyComposition_BodyComposition::set_fat_level(float value) {
  set_has_fat_level();
  fat_level_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.fat_level)
}

// optional float water_level = 8;
inline bool TransBodyComposition_BodyComposition::has_water_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_water_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TransBodyComposition_BodyComposition::clear_has_water_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TransBodyComposition_BodyComposition::clear_water_level() {
  water_level_ = 0;
  clear_has_water_level();
}
inline float TransBodyComposition_BodyComposition::water_level() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.water_level)
  return water_level_;
}
inline void TransBodyComposition_BodyComposition::set_water_level(float value) {
  set_has_water_level();
  water_level_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.water_level)
}

// optional float muscle = 9;
inline bool TransBodyComposition_BodyComposition::has_muscle() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_muscle() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TransBodyComposition_BodyComposition::clear_has_muscle() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TransBodyComposition_BodyComposition::clear_muscle() {
  muscle_ = 0;
  clear_has_muscle();
}
inline float TransBodyComposition_BodyComposition::muscle() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.muscle)
  return muscle_;
}
inline void TransBodyComposition_BodyComposition::set_muscle(float value) {
  set_has_muscle();
  muscle_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.muscle)
}

// optional float bones = 10;
inline bool TransBodyComposition_BodyComposition::has_bones() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_bones() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TransBodyComposition_BodyComposition::clear_has_bones() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TransBodyComposition_BodyComposition::clear_bones() {
  bones_ = 0;
  clear_has_bones();
}
inline float TransBodyComposition_BodyComposition::bones() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.bones)
  return bones_;
}
inline void TransBodyComposition_BodyComposition::set_bones(float value) {
  set_has_bones();
  bones_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.bones)
}

// optional int32 viscus = 11;
inline bool TransBodyComposition_BodyComposition::has_viscus() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_viscus() {
  _has_bits_[0] |= 0x00000400u;
}
inline void TransBodyComposition_BodyComposition::clear_has_viscus() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void TransBodyComposition_BodyComposition::clear_viscus() {
  viscus_ = 0;
  clear_has_viscus();
}
inline ::google::protobuf::int32 TransBodyComposition_BodyComposition::viscus() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.viscus)
  return viscus_;
}
inline void TransBodyComposition_BodyComposition::set_viscus(::google::protobuf::int32 value) {
  set_has_viscus();
  viscus_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.viscus)
}

// optional int32 heat = 12;
inline bool TransBodyComposition_BodyComposition::has_heat() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_heat() {
  _has_bits_[0] |= 0x00000800u;
}
inline void TransBodyComposition_BodyComposition::clear_has_heat() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void TransBodyComposition_BodyComposition::clear_heat() {
  heat_ = 0;
  clear_has_heat();
}
inline ::google::protobuf::int32 TransBodyComposition_BodyComposition::heat() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.heat)
  return heat_;
}
inline void TransBodyComposition_BodyComposition::set_heat(::google::protobuf::int32 value) {
  set_has_heat();
  heat_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.heat)
}

// optional int32 body_resistive = 13;
inline bool TransBodyComposition_BodyComposition::has_body_resistive() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_body_resistive() {
  _has_bits_[0] |= 0x00001000u;
}
inline void TransBodyComposition_BodyComposition::clear_has_body_resistive() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void TransBodyComposition_BodyComposition::clear_body_resistive() {
  body_resistive_ = 0;
  clear_has_body_resistive();
}
inline ::google::protobuf::int32 TransBodyComposition_BodyComposition::body_resistive() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.body_resistive)
  return body_resistive_;
}
inline void TransBodyComposition_BodyComposition::set_body_resistive(::google::protobuf::int32 value) {
  set_has_body_resistive();
  body_resistive_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.body_resistive)
}

// optional string date = 14;
inline bool TransBodyComposition_BodyComposition::has_date() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void TransBodyComposition_BodyComposition::set_has_date() {
  _has_bits_[0] |= 0x00002000u;
}
inline void TransBodyComposition_BodyComposition::clear_has_date() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void TransBodyComposition_BodyComposition::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& TransBodyComposition_BodyComposition::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.BodyComposition.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransBodyComposition_BodyComposition::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.BodyComposition.date)
}
inline void TransBodyComposition_BodyComposition::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransBodyComposition.BodyComposition.date)
}
inline void TransBodyComposition_BodyComposition::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransBodyComposition.BodyComposition.date)
}
inline ::std::string* TransBodyComposition_BodyComposition::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBodyComposition.BodyComposition.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransBodyComposition_BodyComposition::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransBodyComposition_BodyComposition::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransBodyComposition.BodyComposition.date)
}

// -------------------------------------------------------------------

// TransBodyComposition

// optional string user_id = 1;
inline bool TransBodyComposition::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransBodyComposition::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransBodyComposition::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransBodyComposition::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& TransBodyComposition::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransBodyComposition::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.user_id)
}
inline void TransBodyComposition::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransBodyComposition.user_id)
}
inline void TransBodyComposition::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransBodyComposition.user_id)
}
inline ::std::string* TransBodyComposition::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBodyComposition.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransBodyComposition::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransBodyComposition::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransBodyComposition.user_id)
}

// optional string host_id = 2;
inline bool TransBodyComposition::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransBodyComposition::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransBodyComposition::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransBodyComposition::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
inline const ::std::string& TransBodyComposition::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransBodyComposition::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.host_id)
}
inline void TransBodyComposition::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransBodyComposition.host_id)
}
inline void TransBodyComposition::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransBodyComposition.host_id)
}
inline ::std::string* TransBodyComposition::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBodyComposition.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransBodyComposition::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransBodyComposition::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransBodyComposition.host_id)
}

// optional int32 record_num = 3;
inline bool TransBodyComposition::has_record_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransBodyComposition::set_has_record_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransBodyComposition::clear_has_record_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransBodyComposition::clear_record_num() {
  record_num_ = 0;
  clear_has_record_num();
}
inline ::google::protobuf::int32 TransBodyComposition::record_num() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.record_num)
  return record_num_;
}
inline void TransBodyComposition::set_record_num(::google::protobuf::int32 value) {
  set_has_record_num();
  record_num_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransBodyComposition.record_num)
}

// repeated .YfqProtocol.TransBodyComposition.BodyComposition body_list = 4;
inline int TransBodyComposition::body_list_size() const {
  return body_list_.size();
}
inline void TransBodyComposition::clear_body_list() {
  body_list_.Clear();
}
inline const ::YfqProtocol::TransBodyComposition_BodyComposition& TransBodyComposition::body_list(int index) const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransBodyComposition.body_list)
  return body_list_.Get(index);
}
inline ::YfqProtocol::TransBodyComposition_BodyComposition* TransBodyComposition::mutable_body_list(int index) {
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransBodyComposition.body_list)
  return body_list_.Mutable(index);
}
inline ::YfqProtocol::TransBodyComposition_BodyComposition* TransBodyComposition::add_body_list() {
  // @@protoc_insertion_point(field_add:YfqProtocol.TransBodyComposition.body_list)
  return body_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransBodyComposition_BodyComposition >&
TransBodyComposition::body_list() const {
  // @@protoc_insertion_point(field_list:YfqProtocol.TransBodyComposition.body_list)
  return body_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::YfqProtocol::TransBodyComposition_BodyComposition >*
TransBodyComposition::mutable_body_list() {
  // @@protoc_insertion_point(field_mutable_list:YfqProtocol.TransBodyComposition.body_list)
  return &body_list_;
}

// -------------------------------------------------------------------

// TransThermometer

// optional string user_id = 1;
inline bool TransThermometer::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransThermometer::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransThermometer::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransThermometer::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& TransThermometer::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransThermometer.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransThermometer::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransThermometer.user_id)
}
inline void TransThermometer::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransThermometer.user_id)
}
inline void TransThermometer::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransThermometer.user_id)
}
inline ::std::string* TransThermometer::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransThermometer.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransThermometer::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransThermometer::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransThermometer.user_id)
}

// optional string host_id = 2;
inline bool TransThermometer::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransThermometer::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransThermometer::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransThermometer::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
inline const ::std::string& TransThermometer::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransThermometer.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransThermometer::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransThermometer.host_id)
}
inline void TransThermometer::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransThermometer.host_id)
}
inline void TransThermometer::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransThermometer.host_id)
}
inline ::std::string* TransThermometer::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransThermometer.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransThermometer::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransThermometer::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransThermometer.host_id)
}

// optional float thermom_value = 3;
inline bool TransThermometer::has_thermom_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransThermometer::set_has_thermom_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransThermometer::clear_has_thermom_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransThermometer::clear_thermom_value() {
  thermom_value_ = 0;
  clear_has_thermom_value();
}
inline float TransThermometer::thermom_value() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransThermometer.thermom_value)
  return thermom_value_;
}
inline void TransThermometer::set_thermom_value(float value) {
  set_has_thermom_value();
  thermom_value_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.TransThermometer.thermom_value)
}

// optional string date = 4;
inline bool TransThermometer::has_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransThermometer::set_has_date() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TransThermometer::clear_has_date() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TransThermometer::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& TransThermometer::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.TransThermometer.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransThermometer::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.TransThermometer.date)
}
inline void TransThermometer::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.TransThermometer.date)
}
inline void TransThermometer::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.TransThermometer.date)
}
inline ::std::string* TransThermometer::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.TransThermometer.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransThermometer::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransThermometer::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.TransThermometer.date)
}

// -------------------------------------------------------------------

// QualityLifeOrderLoadReq

// optional string user_id = 1;
inline bool QualityLifeOrderLoadReq::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QualityLifeOrderLoadReq::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QualityLifeOrderLoadReq::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QualityLifeOrderLoadReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& QualityLifeOrderLoadReq::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadReq.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeOrderLoadReq::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadReq.user_id)
}
inline void QualityLifeOrderLoadReq::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeOrderLoadReq.user_id)
}
inline void QualityLifeOrderLoadReq::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeOrderLoadReq.user_id)
}
inline ::std::string* QualityLifeOrderLoadReq::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeOrderLoadReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeOrderLoadReq::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeOrderLoadReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeOrderLoadReq.user_id)
}

// optional string host_id = 2;
inline bool QualityLifeOrderLoadReq::has_host_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QualityLifeOrderLoadReq::set_has_host_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QualityLifeOrderLoadReq::clear_has_host_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QualityLifeOrderLoadReq::clear_host_id() {
  host_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_id();
}
inline const ::std::string& QualityLifeOrderLoadReq::host_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadReq.host_id)
  return host_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeOrderLoadReq::set_host_id(const ::std::string& value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadReq.host_id)
}
inline void QualityLifeOrderLoadReq::set_host_id(const char* value) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeOrderLoadReq.host_id)
}
inline void QualityLifeOrderLoadReq::set_host_id(const char* value, size_t size) {
  set_has_host_id();
  host_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeOrderLoadReq.host_id)
}
inline ::std::string* QualityLifeOrderLoadReq::mutable_host_id() {
  set_has_host_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeOrderLoadReq.host_id)
  return host_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeOrderLoadReq::release_host_id() {
  clear_has_host_id();
  return host_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeOrderLoadReq::set_allocated_host_id(::std::string* host_id) {
  if (host_id != nullptr) {
    set_has_host_id();
  } else {
    clear_has_host_id();
  }
  host_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeOrderLoadReq.host_id)
}

// optional int32 notify_type = 3;
inline bool QualityLifeOrderLoadReq::has_notify_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QualityLifeOrderLoadReq::set_has_notify_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QualityLifeOrderLoadReq::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QualityLifeOrderLoadReq::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
inline ::google::protobuf::int32 QualityLifeOrderLoadReq::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadReq.notify_type)
  return notify_type_;
}
inline void QualityLifeOrderLoadReq::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadReq.notify_type)
}

// -------------------------------------------------------------------

// QualityLifeOrderLoadAns

// optional string user_id = 1;
inline bool QualityLifeOrderLoadAns::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QualityLifeOrderLoadAns::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QualityLifeOrderLoadAns::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QualityLifeOrderLoadAns::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_id();
}
inline const ::std::string& QualityLifeOrderLoadAns::user_id() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadAns.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeOrderLoadAns::set_user_id(const ::std::string& value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadAns.user_id)
}
inline void QualityLifeOrderLoadAns::set_user_id(const char* value) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeOrderLoadAns.user_id)
}
inline void QualityLifeOrderLoadAns::set_user_id(const char* value, size_t size) {
  set_has_user_id();
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeOrderLoadAns.user_id)
}
inline ::std::string* QualityLifeOrderLoadAns::mutable_user_id() {
  set_has_user_id();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeOrderLoadAns.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeOrderLoadAns::release_user_id() {
  clear_has_user_id();
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeOrderLoadAns::set_allocated_user_id(::std::string* user_id) {
  if (user_id != nullptr) {
    set_has_user_id();
  } else {
    clear_has_user_id();
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeOrderLoadAns.user_id)
}

// optional int32 notify_type = 2;
inline bool QualityLifeOrderLoadAns::has_notify_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QualityLifeOrderLoadAns::set_has_notify_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QualityLifeOrderLoadAns::clear_has_notify_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QualityLifeOrderLoadAns::clear_notify_type() {
  notify_type_ = 0;
  clear_has_notify_type();
}
inline ::google::protobuf::int32 QualityLifeOrderLoadAns::notify_type() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadAns.notify_type)
  return notify_type_;
}
inline void QualityLifeOrderLoadAns::set_notify_type(::google::protobuf::int32 value) {
  set_has_notify_type();
  notify_type_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadAns.notify_type)
}

// optional string date = 3;
inline bool QualityLifeOrderLoadAns::has_date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QualityLifeOrderLoadAns::set_has_date() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QualityLifeOrderLoadAns::clear_has_date() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QualityLifeOrderLoadAns::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_date();
}
inline const ::std::string& QualityLifeOrderLoadAns::date() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadAns.date)
  return date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeOrderLoadAns::set_date(const ::std::string& value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadAns.date)
}
inline void QualityLifeOrderLoadAns::set_date(const char* value) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:YfqProtocol.QualityLifeOrderLoadAns.date)
}
inline void QualityLifeOrderLoadAns::set_date(const char* value, size_t size) {
  set_has_date();
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:YfqProtocol.QualityLifeOrderLoadAns.date)
}
inline ::std::string* QualityLifeOrderLoadAns::mutable_date() {
  set_has_date();
  // @@protoc_insertion_point(field_mutable:YfqProtocol.QualityLifeOrderLoadAns.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QualityLifeOrderLoadAns::release_date() {
  clear_has_date();
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QualityLifeOrderLoadAns::set_allocated_date(::std::string* date) {
  if (date != nullptr) {
    set_has_date();
  } else {
    clear_has_date();
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:YfqProtocol.QualityLifeOrderLoadAns.date)
}

// optional int32 maxOrder = 4;
inline bool QualityLifeOrderLoadAns::has_maxorder() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QualityLifeOrderLoadAns::set_has_maxorder() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QualityLifeOrderLoadAns::clear_has_maxorder() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QualityLifeOrderLoadAns::clear_maxorder() {
  maxorder_ = 0;
  clear_has_maxorder();
}
inline ::google::protobuf::int32 QualityLifeOrderLoadAns::maxorder() const {
  // @@protoc_insertion_point(field_get:YfqProtocol.QualityLifeOrderLoadAns.maxOrder)
  return maxorder_;
}
inline void QualityLifeOrderLoadAns::set_maxorder(::google::protobuf::int32 value) {
  set_has_maxorder();
  maxorder_ = value;
  // @@protoc_insertion_point(field_set:YfqProtocol.QualityLifeOrderLoadAns.maxOrder)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace YfqProtocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::YfqProtocol::CommonAns_Progress> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::YfqProtocol::CommonAns_Progress>() {
  return ::YfqProtocol::CommonAns_Progress_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_yfqprotoserver3_2eproto__INCLUDED
